[
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 10,
            "endLine": 10
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "_",
              "attributes": {
                "startLine": 10,
                "endLine": 10,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 10,
              "endLine": 10
            }
          }
        ],
        "attributes": {
          "startLine": 10,
          "endLine": 10
        }
      },
      "attributes": {
        "startLine": 10,
        "endLine": 10
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "_",
          "attributes": {
            "startLine": 11,
            "endLine": 11
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 11,
                "endLine": 11
              }
            },
            "default": null,
            "attributes": {
              "startLine": 11,
              "endLine": 11
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 12,
                "endLine": 12
              }
            },
            "attributes": {
              "startLine": 12,
              "endLine": 12
            }
          }
        ],
        "attributes": {
          "startLine": 11,
          "endLine": 13
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 10,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * WordPress implementation for PHP functions either missing from older PHP versions or not included by default.\n *\n * @package PHP\n * @access private\n */",
          "line": 2,
          "filePos": 6,
          "tokenPos": 1,
          "endLine": 7,
          "endFilePos": 163,
          "endTokenPos": 1
        },
        {
          "nodeType": "Comment",
          "text": "// If gettext isn't available.\n",
          "line": 9,
          "filePos": 166,
          "tokenPos": 3,
          "endLine": 10,
          "endFilePos": 196,
          "endTokenPos": 3
        }
      ],
      "endLine": 14
    }
  },
  {
    "nodeType": "Stmt_Function",
    "byRef": false,
    "name": {
      "nodeType": "Identifier",
      "name": "_wp_can_use_pcre_u",
      "attributes": {
        "startLine": 30,
        "endLine": 30
      }
    },
    "params": [
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "set",
          "attributes": {
            "startLine": 30,
            "endLine": 30
          }
        },
        "default": {
          "nodeType": "Expr_ConstFetch",
          "name": {
            "nodeType": "Name",
            "parts": [
              "null"
            ],
            "attributes": {
              "startLine": 30,
              "endLine": 30
            }
          },
          "attributes": {
            "startLine": 30,
            "endLine": 30
          }
        },
        "attributes": {
          "startLine": 30,
          "endLine": 30
        }
      }
    ],
    "returnType": null,
    "stmts": [
      {
        "nodeType": "Stmt_Static",
        "vars": [
          {
            "nodeType": "Stmt_StaticVar",
            "var": {
              "nodeType": "Expr_Variable",
              "name": "utf8_pcre",
              "attributes": {
                "startLine": 31,
                "endLine": 31
              }
            },
            "default": {
              "nodeType": "Scalar_String",
              "value": "reset",
              "attributes": {
                "startLine": 31,
                "endLine": 31,
                "kind": 1
              }
            },
            "attributes": {
              "startLine": 31,
              "endLine": 31
            }
          }
        ],
        "attributes": {
          "startLine": 31,
          "endLine": 31
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_NotIdentical",
          "left": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "null"
              ],
              "attributes": {
                "startLine": 33,
                "endLine": 33
              }
            },
            "attributes": {
              "startLine": 33,
              "endLine": 33
            }
          },
          "right": {
            "nodeType": "Expr_Variable",
            "name": "set",
            "attributes": {
              "startLine": 33,
              "endLine": 33
            }
          },
          "attributes": {
            "startLine": 33,
            "endLine": 33
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "utf8_pcre",
                "attributes": {
                  "startLine": 34,
                  "endLine": 34
                }
              },
              "expr": {
                "nodeType": "Expr_Variable",
                "name": "set",
                "attributes": {
                  "startLine": 34,
                  "endLine": 34
                }
              },
              "attributes": {
                "startLine": 34,
                "endLine": 34
              }
            },
            "attributes": {
              "startLine": 34,
              "endLine": 34
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 33,
          "endLine": 35
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_Identical",
          "left": {
            "nodeType": "Scalar_String",
            "value": "reset",
            "attributes": {
              "startLine": 37,
              "endLine": 37,
              "kind": 1
            }
          },
          "right": {
            "nodeType": "Expr_Variable",
            "name": "utf8_pcre",
            "attributes": {
              "startLine": 37,
              "endLine": 37
            }
          },
          "attributes": {
            "startLine": 37,
            "endLine": 37
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "utf8_pcre",
                "attributes": {
                  "startLine": 39,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged -- intentional error generated to detect PCRE/u support.\n",
                      "line": 38,
                      "filePos": 879,
                      "tokenPos": 104,
                      "endLine": 39,
                      "endFilePos": 994,
                      "endTokenPos": 104
                    }
                  ],
                  "endLine": 39
                }
              },
              "expr": {
                "nodeType": "Expr_ErrorSuppress",
                "expr": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "preg_match"
                    ],
                    "attributes": {
                      "startLine": 39,
                      "endLine": 39
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "/^./u",
                        "attributes": {
                          "startLine": 39,
                          "endLine": 39,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 39,
                        "endLine": 39
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "a",
                        "attributes": {
                          "startLine": 39,
                          "endLine": 39,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 39,
                        "endLine": 39
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 39,
                    "endLine": 39
                  }
                },
                "attributes": {
                  "startLine": 39,
                  "endLine": 39
                }
              },
              "attributes": {
                "startLine": 39,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged -- intentional error generated to detect PCRE/u support.\n",
                    "line": 38,
                    "filePos": 879,
                    "tokenPos": 104,
                    "endLine": 39,
                    "endFilePos": 994,
                    "endTokenPos": 104
                  }
                ],
                "endLine": 39
              }
            },
            "attributes": {
              "startLine": 39,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged -- intentional error generated to detect PCRE/u support.\n",
                  "line": 38,
                  "filePos": 879,
                  "tokenPos": 104,
                  "endLine": 39,
                  "endFilePos": 994,
                  "endTokenPos": 104
                }
              ],
              "endLine": 39
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 37,
          "endLine": 40
        }
      },
      {
        "nodeType": "Stmt_Return",
        "expr": {
          "nodeType": "Expr_Variable",
          "name": "utf8_pcre",
          "attributes": {
            "startLine": 42,
            "endLine": 42
          }
        },
        "attributes": {
          "startLine": 42,
          "endLine": 42
        }
      }
    ],
    "attributes": {
      "startLine": 30,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Returns whether PCRE/u (PCRE_UTF8 modifier) is available for use.\n *\n * @ignore\n * @since 4.2.2\n * @access private\n *\n * @staticvar string $utf8_pcre\n *\n * @param bool $set - Used for testing only\n *             null   : default - get PCRE/u capability\n *             false  : Used for testing - return false for future calls to this function\n *             'reset': Used for testing - restore default behavior of this function\n */",
          "line": 16,
          "filePos": 280,
          "tokenPos": 41,
          "endLine": 29,
          "endFilePos": 717,
          "endTokenPos": 41
        }
      ],
      "endLine": 43
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 45,
            "endLine": 45
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "mb_substr",
              "attributes": {
                "startLine": 45,
                "endLine": 45,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 45,
              "endLine": 45
            }
          }
        ],
        "attributes": {
          "startLine": 45,
          "endLine": 45
        }
      },
      "attributes": {
        "startLine": 45,
        "endLine": 45
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "mb_substr",
          "attributes": {
            "startLine": 61,
            "endLine": 61
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "str",
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "default": null,
            "attributes": {
              "startLine": 61,
              "endLine": 61
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "start",
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "default": null,
            "attributes": {
              "startLine": 61,
              "endLine": 61
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "length",
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "default": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "null"
                ],
                "attributes": {
                  "startLine": 61,
                  "endLine": 61
                }
              },
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "attributes": {
              "startLine": 61,
              "endLine": 61
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "encoding",
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "default": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "null"
                ],
                "attributes": {
                  "startLine": 61,
                  "endLine": 61
                }
              },
              "attributes": {
                "startLine": 61,
                "endLine": 61
              }
            },
            "attributes": {
              "startLine": 61,
              "endLine": 61
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "_mb_substr"
                ],
                "attributes": {
                  "startLine": 62,
                  "endLine": 62
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "str",
                    "attributes": {
                      "startLine": 62,
                      "endLine": 62
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 62,
                    "endLine": 62
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "start",
                    "attributes": {
                      "startLine": 62,
                      "endLine": 62
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 62,
                    "endLine": 62
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "length",
                    "attributes": {
                      "startLine": 62,
                      "endLine": 62
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 62,
                    "endLine": 62
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "encoding",
                    "attributes": {
                      "startLine": 62,
                      "endLine": 62
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 62,
                    "endLine": 62
                  }
                }
              ],
              "attributes": {
                "startLine": 62,
                "endLine": 62
              }
            },
            "attributes": {
              "startLine": 62,
              "endLine": 62
            }
          }
        ],
        "attributes": {
          "startLine": 61,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Compat function to mimic mb_substr().\n\t *\n\t * @ignore\n\t * @since 3.2.0\n\t *\n\t * @see _mb_substr()\n\t *\n\t * @param string      $str      The string to extract the substring from.\n\t * @param int         $start    Position to being extraction from in `$str`.\n\t * @param int|null    $length   Optional. Maximum number of characters to extract from `$str`.\n\t *                              Default null.\n\t * @param string|null $encoding Optional. Character encoding to use. Default null.\n\t * @return string Extracted substring.\n\t */",
              "line": 46,
              "filePos": 1109,
              "tokenPos": 148,
              "endLine": 60,
              "endFilePos": 1641,
              "endTokenPos": 148
            }
          ],
          "endLine": 63
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 45,
      "endLine": 64
    }
  },
  {
    "nodeType": "Stmt_Function",
    "byRef": false,
    "name": {
      "nodeType": "Identifier",
      "name": "_mb_substr",
      "attributes": {
        "startLine": 83,
        "endLine": 83
      }
    },
    "params": [
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "str",
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "default": null,
        "attributes": {
          "startLine": 83,
          "endLine": 83
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "start",
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "default": null,
        "attributes": {
          "startLine": 83,
          "endLine": 83
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "length",
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "default": {
          "nodeType": "Expr_ConstFetch",
          "name": {
            "nodeType": "Name",
            "parts": [
              "null"
            ],
            "attributes": {
              "startLine": 83,
              "endLine": 83
            }
          },
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "attributes": {
          "startLine": 83,
          "endLine": 83
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "encoding",
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "default": {
          "nodeType": "Expr_ConstFetch",
          "name": {
            "nodeType": "Name",
            "parts": [
              "null"
            ],
            "attributes": {
              "startLine": 83,
              "endLine": 83
            }
          },
          "attributes": {
            "startLine": 83,
            "endLine": 83
          }
        },
        "attributes": {
          "startLine": 83,
          "endLine": 83
        }
      }
    ],
    "returnType": null,
    "stmts": [
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_Identical",
          "left": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "null"
              ],
              "attributes": {
                "startLine": 84,
                "endLine": 84
              }
            },
            "attributes": {
              "startLine": 84,
              "endLine": 84
            }
          },
          "right": {
            "nodeType": "Expr_Variable",
            "name": "encoding",
            "attributes": {
              "startLine": 84,
              "endLine": 84
            }
          },
          "attributes": {
            "startLine": 84,
            "endLine": 84
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "encoding",
                "attributes": {
                  "startLine": 85,
                  "endLine": 85
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "get_option"
                  ],
                  "attributes": {
                    "startLine": 85,
                    "endLine": 85
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "blog_charset",
                      "attributes": {
                        "startLine": 85,
                        "endLine": 85,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 85,
                      "endLine": 85
                    }
                  }
                ],
                "attributes": {
                  "startLine": 85,
                  "endLine": 85
                }
              },
              "attributes": {
                "startLine": 85,
                "endLine": 85
              }
            },
            "attributes": {
              "startLine": 85,
              "endLine": 85
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 84,
          "endLine": 86
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BooleanNot",
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "in_array"
              ],
              "attributes": {
                "startLine": 92,
                "endLine": 92
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Variable",
                  "name": "encoding",
                  "attributes": {
                    "startLine": 92,
                    "endLine": 92
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 92,
                  "endLine": 92
                }
              },
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Array",
                  "items": [
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "utf8",
                        "attributes": {
                          "startLine": 92,
                          "endLine": 92,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 92,
                        "endLine": 92
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "utf-8",
                        "attributes": {
                          "startLine": 92,
                          "endLine": 92,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 92,
                        "endLine": 92
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "UTF8",
                        "attributes": {
                          "startLine": 92,
                          "endLine": 92,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 92,
                        "endLine": 92
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "UTF-8",
                        "attributes": {
                          "startLine": 92,
                          "endLine": 92,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 92,
                        "endLine": 92
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 92,
                    "endLine": 92,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 92,
                  "endLine": 92
                }
              }
            ],
            "attributes": {
              "startLine": 92,
              "endLine": 92
            }
          },
          "attributes": {
            "startLine": 92,
            "endLine": 92
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_Ternary",
              "cond": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "is_null"
                  ],
                  "attributes": {
                    "startLine": 93,
                    "endLine": 93
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "length",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  }
                ],
                "attributes": {
                  "startLine": 93,
                  "endLine": 93
                }
              },
              "if": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "substr"
                  ],
                  "attributes": {
                    "startLine": 93,
                    "endLine": 93
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "str",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "start",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  }
                ],
                "attributes": {
                  "startLine": 93,
                  "endLine": 93
                }
              },
              "else": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "substr"
                  ],
                  "attributes": {
                    "startLine": 93,
                    "endLine": 93
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "str",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "start",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "length",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  }
                ],
                "attributes": {
                  "startLine": 93,
                  "endLine": 93
                }
              },
              "attributes": {
                "startLine": 93,
                "endLine": 93
              }
            },
            "attributes": {
              "startLine": 93,
              "endLine": 93
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 92,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "/*\n\t * The solution below works only for UTF-8, so in case of a different\n\t * charset just use built-in substr().\n\t */",
              "line": 88,
              "filePos": 2684,
              "tokenPos": 260,
              "endLine": 91,
              "endFilePos": 2801,
              "endTokenPos": 260
            }
          ],
          "endLine": 94
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "_wp_can_use_pcre_u"
            ],
            "attributes": {
              "startLine": 96,
              "endLine": 96
            }
          },
          "args": [],
          "attributes": {
            "startLine": 96,
            "endLine": 96
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "preg_match_all"
                ],
                "attributes": {
                  "startLine": 98,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                      "line": 97,
                      "filePos": 3005,
                      "tokenPos": 347,
                      "endLine": 98,
                      "endFilePos": 3085,
                      "endTokenPos": 347
                    }
                  ],
                  "endLine": 98
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "/./us",
                    "attributes": {
                      "startLine": 98,
                      "endLine": 98,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 98,
                    "endLine": 98
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "str",
                    "attributes": {
                      "startLine": 98,
                      "endLine": 98
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 98,
                    "endLine": 98
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "match",
                    "attributes": {
                      "startLine": 98,
                      "endLine": 98
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 98,
                    "endLine": 98
                  }
                }
              ],
              "attributes": {
                "startLine": 98,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                    "line": 97,
                    "filePos": 3005,
                    "tokenPos": 347,
                    "endLine": 98,
                    "endFilePos": 3085,
                    "endTokenPos": 347
                  }
                ],
                "endLine": 98
              }
            },
            "attributes": {
              "startLine": 98,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                  "line": 97,
                  "filePos": 3005,
                  "tokenPos": 347,
                  "endLine": 98,
                  "endFilePos": 3085,
                  "endTokenPos": 347
                }
              ],
              "endLine": 98
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "chars",
                "attributes": {
                  "startLine": 99,
                  "endLine": 99
                }
              },
              "expr": {
                "nodeType": "Expr_Ternary",
                "cond": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "is_null"
                    ],
                    "attributes": {
                      "startLine": 99,
                      "endLine": 99
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "length",
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 99,
                    "endLine": 99
                  }
                },
                "if": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "array_slice"
                    ],
                    "attributes": {
                      "startLine": 99,
                      "endLine": 99
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_ArrayDimFetch",
                        "var": {
                          "nodeType": "Expr_Variable",
                          "name": "match",
                          "attributes": {
                            "startLine": 99,
                            "endLine": 99
                          }
                        },
                        "dim": {
                          "nodeType": "Scalar_LNumber",
                          "value": 0,
                          "attributes": {
                            "startLine": 99,
                            "endLine": 99,
                            "kind": 10
                          }
                        },
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "start",
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 99,
                    "endLine": 99
                  }
                },
                "else": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "array_slice"
                    ],
                    "attributes": {
                      "startLine": 99,
                      "endLine": 99
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_ArrayDimFetch",
                        "var": {
                          "nodeType": "Expr_Variable",
                          "name": "match",
                          "attributes": {
                            "startLine": 99,
                            "endLine": 99
                          }
                        },
                        "dim": {
                          "nodeType": "Scalar_LNumber",
                          "value": 0,
                          "attributes": {
                            "startLine": 99,
                            "endLine": 99,
                            "kind": 10
                          }
                        },
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "start",
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "length",
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 99,
                    "endLine": 99
                  }
                },
                "attributes": {
                  "startLine": 99,
                  "endLine": 99
                }
              },
              "attributes": {
                "startLine": 99,
                "endLine": 99
              }
            },
            "attributes": {
              "startLine": 99,
              "endLine": 99
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "implode"
                ],
                "attributes": {
                  "startLine": 100,
                  "endLine": 100
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "",
                    "attributes": {
                      "startLine": 100,
                      "endLine": 100,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 100,
                    "endLine": 100
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "chars",
                    "attributes": {
                      "startLine": 100,
                      "endLine": 100
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 100,
                    "endLine": 100
                  }
                }
              ],
              "attributes": {
                "startLine": 100,
                "endLine": 100
              }
            },
            "attributes": {
              "startLine": 100,
              "endLine": 100
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 96,
          "endLine": 101
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "regex",
            "attributes": {
              "startLine": 103,
              "endLine": 103
            }
          },
          "expr": {
            "nodeType": "Scalar_String",
            "value": "/(\n\t\t[\\x00-\\x7F]                  # single-byte sequences   0xxxxxxx\n\t\t| [\\xC2-\\xDF][\\x80-\\xBF]       # double-byte sequences   110xxxxx 10xxxxxx\n\t\t| \\xE0[\\xA0-\\xBF][\\x80-\\xBF]   # triple-byte sequences   1110xxxx 10xxxxxx * 2\n\t\t| [\\xE1-\\xEC][\\x80-\\xBF]{2}\n\t\t| \\xED[\\x80-\\x9F][\\x80-\\xBF]\n\t\t| [\\xEE-\\xEF][\\x80-\\xBF]{2}\n\t\t| \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2} # four-byte sequences   11110xxx 10xxxxxx * 3\n\t\t| [\\xF1-\\xF3][\\x80-\\xBF]{3}\n\t\t| \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}\n\t)/x",
            "attributes": {
              "startLine": 103,
              "endLine": 113,
              "kind": 1
            }
          },
          "attributes": {
            "startLine": 103,
            "endLine": 113
          }
        },
        "attributes": {
          "startLine": 103,
          "endLine": 113
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "chars",
            "attributes": {
              "startLine": 116,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Start with 1 element instead of 0 since the first thing we do is pop.\n",
                  "line": 115,
                  "filePos": 3757,
                  "tokenPos": 430,
                  "endLine": 116,
                  "endFilePos": 3829,
                  "endTokenPos": 430
                }
              ],
              "endLine": 116
            }
          },
          "expr": {
            "nodeType": "Expr_Array",
            "items": [
              {
                "nodeType": "Expr_ArrayItem",
                "key": null,
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "",
                  "attributes": {
                    "startLine": 116,
                    "endLine": 116,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 116,
                  "endLine": 116
                }
              }
            ],
            "attributes": {
              "startLine": 116,
              "endLine": 116,
              "kind": 1
            }
          },
          "attributes": {
            "startLine": 116,
            "comments": [
              {
                "nodeType": "Comment",
                "text": "// Start with 1 element instead of 0 since the first thing we do is pop.\n",
                "line": 115,
                "filePos": 3757,
                "tokenPos": 430,
                "endLine": 116,
                "endFilePos": 3829,
                "endTokenPos": 430
              }
            ],
            "endLine": 116
          }
        },
        "attributes": {
          "startLine": 116,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "// Start with 1 element instead of 0 since the first thing we do is pop.\n",
              "line": 115,
              "filePos": 3757,
              "tokenPos": 430,
              "endLine": 116,
              "endFilePos": 3829,
              "endTokenPos": 430
            }
          ],
          "endLine": 116
        }
      },
      {
        "nodeType": "Stmt_Do",
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "array_pop"
                ],
                "attributes": {
                  "startLine": 119,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                      "line": 118,
                      "filePos": 3861,
                      "tokenPos": 448,
                      "endLine": 119,
                      "endFilePos": 3951,
                      "endTokenPos": 448
                    }
                  ],
                  "endLine": 119
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "chars",
                    "attributes": {
                      "startLine": 119,
                      "endLine": 119
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 119,
                    "endLine": 119
                  }
                }
              ],
              "attributes": {
                "startLine": 119,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                    "line": 118,
                    "filePos": 3861,
                    "tokenPos": 448,
                    "endLine": 119,
                    "endFilePos": 3951,
                    "endTokenPos": 448
                  }
                ],
                "endLine": 119
              }
            },
            "attributes": {
              "startLine": 119,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                  "line": 118,
                  "filePos": 3861,
                  "tokenPos": 448,
                  "endLine": 119,
                  "endFilePos": 3951,
                  "endTokenPos": 448
                }
              ],
              "endLine": 119
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "pieces",
                "attributes": {
                  "startLine": 125,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                      "line": 121,
                      "filePos": 3978,
                      "tokenPos": 458,
                      "endLine": 124,
                      "endFilePos": 4104,
                      "endTokenPos": 458
                    }
                  ],
                  "endLine": 125
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "preg_split"
                  ],
                  "attributes": {
                    "startLine": 125,
                    "endLine": 125
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "regex",
                      "attributes": {
                        "startLine": 125,
                        "endLine": 125
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 125,
                      "endLine": 125
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "str",
                      "attributes": {
                        "startLine": 125,
                        "endLine": 125
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 125,
                      "endLine": 125
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_LNumber",
                      "value": 1000,
                      "attributes": {
                        "startLine": 125,
                        "endLine": 125,
                        "kind": 10
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 125,
                      "endLine": 125
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_BinaryOp_BitwiseOr",
                      "left": {
                        "nodeType": "Expr_ConstFetch",
                        "name": {
                          "nodeType": "Name",
                          "parts": [
                            "PREG_SPLIT_DELIM_CAPTURE"
                          ],
                          "attributes": {
                            "startLine": 125,
                            "endLine": 125
                          }
                        },
                        "attributes": {
                          "startLine": 125,
                          "endLine": 125
                        }
                      },
                      "right": {
                        "nodeType": "Expr_ConstFetch",
                        "name": {
                          "nodeType": "Name",
                          "parts": [
                            "PREG_SPLIT_NO_EMPTY"
                          ],
                          "attributes": {
                            "startLine": 125,
                            "endLine": 125
                          }
                        },
                        "attributes": {
                          "startLine": 125,
                          "endLine": 125
                        }
                      },
                      "attributes": {
                        "startLine": 125,
                        "endLine": 125
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 125,
                      "endLine": 125
                    }
                  }
                ],
                "attributes": {
                  "startLine": 125,
                  "endLine": 125
                }
              },
              "attributes": {
                "startLine": 125,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                    "line": 121,
                    "filePos": 3978,
                    "tokenPos": 458,
                    "endLine": 124,
                    "endFilePos": 4104,
                    "endTokenPos": 458
                  }
                ],
                "endLine": 125
              }
            },
            "attributes": {
              "startLine": 125,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                  "line": 121,
                  "filePos": 3978,
                  "tokenPos": 458,
                  "endLine": 124,
                  "endFilePos": 4104,
                  "endTokenPos": 458
                }
              ],
              "endLine": 125
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "chars",
                "attributes": {
                  "startLine": 127,
                  "endLine": 127
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "array_merge"
                  ],
                  "attributes": {
                    "startLine": 127,
                    "endLine": 127
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "chars",
                      "attributes": {
                        "startLine": 127,
                        "endLine": 127
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 127,
                      "endLine": 127
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "pieces",
                      "attributes": {
                        "startLine": 127,
                        "endLine": 127
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 127,
                      "endLine": 127
                    }
                  }
                ],
                "attributes": {
                  "startLine": 127,
                  "endLine": 127
                }
              },
              "attributes": {
                "startLine": 127,
                "endLine": 127
              }
            },
            "attributes": {
              "startLine": 127,
              "endLine": 127
            }
          },
          {
            "nodeType": "Stmt_Nop",
            "attributes": {
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// If there's anything left over, repeat the loop.\n",
                  "line": 129,
                  "filePos": 4247,
                  "tokenPos": 500,
                  "endLine": 130,
                  "endFilePos": 4297,
                  "endTokenPos": 500
                }
              ],
              "startLine": 130,
              "endLine": 130,
              "startFilePos": 4298,
              "endFilePos": 4297,
              "startTokenPos": 501,
              "endTokenPos": 500
            }
          }
        ],
        "cond": {
          "nodeType": "Expr_BinaryOp_BooleanAnd",
          "left": {
            "nodeType": "Expr_BinaryOp_Greater",
            "left": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "count"
                ],
                "attributes": {
                  "startLine": 130,
                  "endLine": 130
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "pieces",
                    "attributes": {
                      "startLine": 130,
                      "endLine": 130
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 130,
                    "endLine": 130
                  }
                }
              ],
              "attributes": {
                "startLine": 130,
                "endLine": 130
              }
            },
            "right": {
              "nodeType": "Scalar_LNumber",
              "value": 1,
              "attributes": {
                "startLine": 130,
                "endLine": 130,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 130,
              "endLine": 130
            }
          },
          "right": {
            "nodeType": "Expr_Assign",
            "var": {
              "nodeType": "Expr_Variable",
              "name": "str",
              "attributes": {
                "startLine": 130,
                "endLine": 130
              }
            },
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "array_pop"
                ],
                "attributes": {
                  "startLine": 130,
                  "endLine": 130
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "pieces",
                    "attributes": {
                      "startLine": 130,
                      "endLine": 130
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 130,
                    "endLine": 130
                  }
                }
              ],
              "attributes": {
                "startLine": 130,
                "endLine": 130
              }
            },
            "attributes": {
              "startLine": 130,
              "endLine": 130
            }
          },
          "attributes": {
            "startLine": 130,
            "endLine": 130
          }
        },
        "attributes": {
          "startLine": 117,
          "endLine": 130
        }
      },
      {
        "nodeType": "Stmt_Return",
        "expr": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "join"
            ],
            "attributes": {
              "startLine": 132,
              "endLine": 132
            }
          },
          "args": [
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "",
                "attributes": {
                  "startLine": 132,
                  "endLine": 132,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 132,
                "endLine": 132
              }
            },
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "array_slice"
                  ],
                  "attributes": {
                    "startLine": 132,
                    "endLine": 132
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "chars",
                      "attributes": {
                        "startLine": 132,
                        "endLine": 132
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 132,
                      "endLine": 132
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "start",
                      "attributes": {
                        "startLine": 132,
                        "endLine": 132
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 132,
                      "endLine": 132
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "length",
                      "attributes": {
                        "startLine": 132,
                        "endLine": 132
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 132,
                      "endLine": 132
                    }
                  }
                ],
                "attributes": {
                  "startLine": 132,
                  "endLine": 132
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 132,
                "endLine": 132
              }
            }
          ],
          "attributes": {
            "startLine": 132,
            "endLine": 132
          }
        },
        "attributes": {
          "startLine": 132,
          "endLine": 132
        }
      }
    ],
    "attributes": {
      "startLine": 83,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Internal compat function to mimic mb_substr().\n *\n * Only understands UTF-8 and 8bit.  All other character sets will be treated as 8bit.\n * For $encoding === UTF-8, the $str input is expected to be a valid UTF-8 byte sequence.\n * The behavior of this function for invalid inputs is undefined.\n *\n * @ignore\n * @since 3.2.0\n *\n * @param string      $str      The string to extract the substring from.\n * @param int         $start    Position to being extraction from in `$str`.\n * @param int|null    $length   Optional. Maximum number of characters to extract from `$str`.\n *                              Default null.\n * @param string|null $encoding Optional. Character encoding to use. Default null.\n * @return string Extracted substring.\n */",
          "line": 66,
          "filePos": 1783,
          "tokenPos": 202,
          "endLine": 82,
          "endFilePos": 2532,
          "endTokenPos": 202
        }
      ],
      "endLine": 133
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 135,
            "endLine": 135
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "mb_strlen",
              "attributes": {
                "startLine": 135,
                "endLine": 135,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 135,
              "endLine": 135
            }
          }
        ],
        "attributes": {
          "startLine": 135,
          "endLine": 135
        }
      },
      "attributes": {
        "startLine": 135,
        "endLine": 135
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "mb_strlen",
          "attributes": {
            "startLine": 148,
            "endLine": 148
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "str",
              "attributes": {
                "startLine": 148,
                "endLine": 148
              }
            },
            "default": null,
            "attributes": {
              "startLine": 148,
              "endLine": 148
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "encoding",
              "attributes": {
                "startLine": 148,
                "endLine": 148
              }
            },
            "default": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "null"
                ],
                "attributes": {
                  "startLine": 148,
                  "endLine": 148
                }
              },
              "attributes": {
                "startLine": 148,
                "endLine": 148
              }
            },
            "attributes": {
              "startLine": 148,
              "endLine": 148
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "_mb_strlen"
                ],
                "attributes": {
                  "startLine": 149,
                  "endLine": 149
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "str",
                    "attributes": {
                      "startLine": 149,
                      "endLine": 149
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 149,
                    "endLine": 149
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "encoding",
                    "attributes": {
                      "startLine": 149,
                      "endLine": 149
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 149,
                    "endLine": 149
                  }
                }
              ],
              "attributes": {
                "startLine": 149,
                "endLine": 149
              }
            },
            "attributes": {
              "startLine": 149,
              "endLine": 149
            }
          }
        ],
        "attributes": {
          "startLine": 148,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Compat function to mimic mb_strlen().\n\t *\n\t * @ignore\n\t * @since 4.2.0\n\t *\n\t * @see _mb_strlen()\n\t *\n\t * @param string      $str      The string to retrieve the character length from.\n\t * @param string|null $encoding Optional. Character encoding to use. Default null.\n\t * @return int String length of `$str`.\n\t */",
              "line": 136,
              "filePos": 4471,
              "tokenPos": 578,
              "endLine": 147,
              "endFilePos": 4791,
              "endTokenPos": 578
            }
          ],
          "endLine": 150
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 135,
      "endLine": 151
    }
  },
  {
    "nodeType": "Stmt_Function",
    "byRef": false,
    "name": {
      "nodeType": "Identifier",
      "name": "_mb_strlen",
      "attributes": {
        "startLine": 167,
        "endLine": 167
      }
    },
    "params": [
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "str",
          "attributes": {
            "startLine": 167,
            "endLine": 167
          }
        },
        "default": null,
        "attributes": {
          "startLine": 167,
          "endLine": 167
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "encoding",
          "attributes": {
            "startLine": 167,
            "endLine": 167
          }
        },
        "default": {
          "nodeType": "Expr_ConstFetch",
          "name": {
            "nodeType": "Name",
            "parts": [
              "null"
            ],
            "attributes": {
              "startLine": 167,
              "endLine": 167
            }
          },
          "attributes": {
            "startLine": 167,
            "endLine": 167
          }
        },
        "attributes": {
          "startLine": 167,
          "endLine": 167
        }
      }
    ],
    "returnType": null,
    "stmts": [
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_Identical",
          "left": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "null"
              ],
              "attributes": {
                "startLine": 168,
                "endLine": 168
              }
            },
            "attributes": {
              "startLine": 168,
              "endLine": 168
            }
          },
          "right": {
            "nodeType": "Expr_Variable",
            "name": "encoding",
            "attributes": {
              "startLine": 168,
              "endLine": 168
            }
          },
          "attributes": {
            "startLine": 168,
            "endLine": 168
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "encoding",
                "attributes": {
                  "startLine": 169,
                  "endLine": 169
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "get_option"
                  ],
                  "attributes": {
                    "startLine": 169,
                    "endLine": 169
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "blog_charset",
                      "attributes": {
                        "startLine": 169,
                        "endLine": 169,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 169,
                      "endLine": 169
                    }
                  }
                ],
                "attributes": {
                  "startLine": 169,
                  "endLine": 169
                }
              },
              "attributes": {
                "startLine": 169,
                "endLine": 169
              }
            },
            "attributes": {
              "startLine": 169,
              "endLine": 169
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 168,
          "endLine": 170
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BooleanNot",
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "in_array"
              ],
              "attributes": {
                "startLine": 176,
                "endLine": 176
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Variable",
                  "name": "encoding",
                  "attributes": {
                    "startLine": 176,
                    "endLine": 176
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 176,
                  "endLine": 176
                }
              },
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Array",
                  "items": [
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "utf8",
                        "attributes": {
                          "startLine": 176,
                          "endLine": 176,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 176,
                        "endLine": 176
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "utf-8",
                        "attributes": {
                          "startLine": 176,
                          "endLine": 176,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 176,
                        "endLine": 176
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "UTF8",
                        "attributes": {
                          "startLine": 176,
                          "endLine": 176,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 176,
                        "endLine": 176
                      }
                    },
                    {
                      "nodeType": "Expr_ArrayItem",
                      "key": null,
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "UTF-8",
                        "attributes": {
                          "startLine": 176,
                          "endLine": 176,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 176,
                        "endLine": 176
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 176,
                    "endLine": 176,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 176,
                  "endLine": 176
                }
              }
            ],
            "attributes": {
              "startLine": 176,
              "endLine": 176
            }
          },
          "attributes": {
            "startLine": 176,
            "endLine": 176
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "strlen"
                ],
                "attributes": {
                  "startLine": 177,
                  "endLine": 177
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "str",
                    "attributes": {
                      "startLine": 177,
                      "endLine": 177
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 177,
                    "endLine": 177
                  }
                }
              ],
              "attributes": {
                "startLine": 177,
                "endLine": 177
              }
            },
            "attributes": {
              "startLine": 177,
              "endLine": 177
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 176,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "/*\n\t * The solution below works only for UTF-8, so in case of a different charset\n\t * just use built-in strlen().\n\t */",
              "line": 172,
              "filePos": 5562,
              "tokenPos": 664,
              "endLine": 175,
              "endFilePos": 5679,
              "endTokenPos": 664
            }
          ],
          "endLine": 178
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "_wp_can_use_pcre_u"
            ],
            "attributes": {
              "startLine": 180,
              "endLine": 180
            }
          },
          "args": [],
          "attributes": {
            "startLine": 180,
            "endLine": 180
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "preg_match_all"
                ],
                "attributes": {
                  "startLine": 182,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                      "line": 181,
                      "filePos": 5820,
                      "tokenPos": 724,
                      "endLine": 182,
                      "endFilePos": 5900,
                      "endTokenPos": 724
                    }
                  ],
                  "endLine": 182
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "/./us",
                    "attributes": {
                      "startLine": 182,
                      "endLine": 182,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 182,
                    "endLine": 182
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "str",
                    "attributes": {
                      "startLine": 182,
                      "endLine": 182
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 182,
                    "endLine": 182
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "match",
                    "attributes": {
                      "startLine": 182,
                      "endLine": 182
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 182,
                    "endLine": 182
                  }
                }
              ],
              "attributes": {
                "startLine": 182,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                    "line": 181,
                    "filePos": 5820,
                    "tokenPos": 724,
                    "endLine": 182,
                    "endFilePos": 5900,
                    "endTokenPos": 724
                  }
                ],
                "endLine": 182
              }
            },
            "attributes": {
              "startLine": 182,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Use the regex unicode support to separate the UTF-8 characters into an array.\n",
                  "line": 181,
                  "filePos": 5820,
                  "tokenPos": 724,
                  "endLine": 182,
                  "endFilePos": 5900,
                  "endTokenPos": 724
                }
              ],
              "endLine": 182
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "count"
                ],
                "attributes": {
                  "startLine": 183,
                  "endLine": 183
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_ArrayDimFetch",
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "match",
                      "attributes": {
                        "startLine": 183,
                        "endLine": 183
                      }
                    },
                    "dim": {
                      "nodeType": "Scalar_LNumber",
                      "value": 0,
                      "attributes": {
                        "startLine": 183,
                        "endLine": 183,
                        "kind": 10
                      }
                    },
                    "attributes": {
                      "startLine": 183,
                      "endLine": 183
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 183,
                    "endLine": 183
                  }
                }
              ],
              "attributes": {
                "startLine": 183,
                "endLine": 183
              }
            },
            "attributes": {
              "startLine": 183,
              "endLine": 183
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 180,
          "endLine": 184
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "regex",
            "attributes": {
              "startLine": 186,
              "endLine": 186
            }
          },
          "expr": {
            "nodeType": "Scalar_String",
            "value": "/(?:\n\t\t[\\x00-\\x7F]                  # single-byte sequences   0xxxxxxx\n\t\t| [\\xC2-\\xDF][\\x80-\\xBF]       # double-byte sequences   110xxxxx 10xxxxxx\n\t\t| \\xE0[\\xA0-\\xBF][\\x80-\\xBF]   # triple-byte sequences   1110xxxx 10xxxxxx * 2\n\t\t| [\\xE1-\\xEC][\\x80-\\xBF]{2}\n\t\t| \\xED[\\x80-\\x9F][\\x80-\\xBF]\n\t\t| [\\xEE-\\xEF][\\x80-\\xBF]{2}\n\t\t| \\xF0[\\x90-\\xBF][\\x80-\\xBF]{2} # four-byte sequences   11110xxx 10xxxxxx * 3\n\t\t| [\\xF1-\\xF3][\\x80-\\xBF]{3}\n\t\t| \\xF4[\\x80-\\x8F][\\x80-\\xBF]{2}\n\t)/x",
            "attributes": {
              "startLine": 186,
              "endLine": 196,
              "kind": 1
            }
          },
          "attributes": {
            "startLine": 186,
            "endLine": 196
          }
        },
        "attributes": {
          "startLine": 186,
          "endLine": 196
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "count",
            "attributes": {
              "startLine": 199,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Start at 1 instead of 0 since the first thing we do is decrement.\n",
                  "line": 198,
                  "filePos": 6461,
                  "tokenPos": 762,
                  "endLine": 199,
                  "endFilePos": 6529,
                  "endTokenPos": 762
                }
              ],
              "endLine": 199
            }
          },
          "expr": {
            "nodeType": "Scalar_LNumber",
            "value": 1,
            "attributes": {
              "startLine": 199,
              "endLine": 199,
              "kind": 10
            }
          },
          "attributes": {
            "startLine": 199,
            "comments": [
              {
                "nodeType": "Comment",
                "text": "// Start at 1 instead of 0 since the first thing we do is decrement.\n",
                "line": 198,
                "filePos": 6461,
                "tokenPos": 762,
                "endLine": 199,
                "endFilePos": 6529,
                "endTokenPos": 762
              }
            ],
            "endLine": 199
          }
        },
        "attributes": {
          "startLine": 199,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "// Start at 1 instead of 0 since the first thing we do is decrement.\n",
              "line": 198,
              "filePos": 6461,
              "tokenPos": 762,
              "endLine": 199,
              "endFilePos": 6529,
              "endTokenPos": 762
            }
          ],
          "endLine": 199
        }
      },
      {
        "nodeType": "Stmt_Do",
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_PostDec",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "count",
                "attributes": {
                  "startLine": 202,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                      "line": 201,
                      "filePos": 6551,
                      "tokenPos": 775,
                      "endLine": 202,
                      "endFilePos": 6641,
                      "endTokenPos": 775
                    }
                  ],
                  "endLine": 202
                }
              },
              "attributes": {
                "startLine": 202,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                    "line": 201,
                    "filePos": 6551,
                    "tokenPos": 775,
                    "endLine": 202,
                    "endFilePos": 6641,
                    "endTokenPos": 775
                  }
                ],
                "endLine": 202
              }
            },
            "attributes": {
              "startLine": 202,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// We had some string left over from the last round, but we counted it in that last round.\n",
                  "line": 201,
                  "filePos": 6551,
                  "tokenPos": 775,
                  "endLine": 202,
                  "endFilePos": 6641,
                  "endTokenPos": 775
                }
              ],
              "endLine": 202
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "pieces",
                "attributes": {
                  "startLine": 208,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                      "line": 204,
                      "filePos": 6657,
                      "tokenPos": 781,
                      "endLine": 207,
                      "endFilePos": 6783,
                      "endTokenPos": 781
                    }
                  ],
                  "endLine": 208
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "preg_split"
                  ],
                  "attributes": {
                    "startLine": 208,
                    "endLine": 208
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "regex",
                      "attributes": {
                        "startLine": 208,
                        "endLine": 208
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 208,
                      "endLine": 208
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "str",
                      "attributes": {
                        "startLine": 208,
                        "endLine": 208
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 208,
                      "endLine": 208
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_LNumber",
                      "value": 1000,
                      "attributes": {
                        "startLine": 208,
                        "endLine": 208,
                        "kind": 10
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 208,
                      "endLine": 208
                    }
                  }
                ],
                "attributes": {
                  "startLine": 208,
                  "endLine": 208
                }
              },
              "attributes": {
                "startLine": 208,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                    "line": 204,
                    "filePos": 6657,
                    "tokenPos": 781,
                    "endLine": 207,
                    "endFilePos": 6783,
                    "endTokenPos": 781
                  }
                ],
                "endLine": 208
              }
            },
            "attributes": {
              "startLine": 208,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "/*\n\t\t * Split by UTF-8 character, limit to 1000 characters (last array element will contain\n\t\t * the rest of the string).\n\t\t */",
                  "line": 204,
                  "filePos": 6657,
                  "tokenPos": 781,
                  "endLine": 207,
                  "endFilePos": 6783,
                  "endTokenPos": 781
                }
              ],
              "endLine": 208
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_AssignOp_Plus",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "count",
                "attributes": {
                  "startLine": 211,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Increment.\n",
                      "line": 210,
                      "filePos": 6834,
                      "tokenPos": 801,
                      "endLine": 211,
                      "endFilePos": 6847,
                      "endTokenPos": 801
                    }
                  ],
                  "endLine": 211
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "count"
                  ],
                  "attributes": {
                    "startLine": 211,
                    "endLine": 211
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "pieces",
                      "attributes": {
                        "startLine": 211,
                        "endLine": 211
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 211,
                      "endLine": 211
                    }
                  }
                ],
                "attributes": {
                  "startLine": 211,
                  "endLine": 211
                }
              },
              "attributes": {
                "startLine": 211,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Increment.\n",
                    "line": 210,
                    "filePos": 6834,
                    "tokenPos": 801,
                    "endLine": 211,
                    "endFilePos": 6847,
                    "endTokenPos": 801
                  }
                ],
                "endLine": 211
              }
            },
            "attributes": {
              "startLine": 211,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Increment.\n",
                  "line": 210,
                  "filePos": 6834,
                  "tokenPos": 801,
                  "endLine": 211,
                  "endFilePos": 6847,
                  "endTokenPos": 801
                }
              ],
              "endLine": 211
            }
          },
          {
            "nodeType": "Stmt_Nop",
            "attributes": {
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// If there's anything left over, repeat the loop.\n",
                  "line": 213,
                  "filePos": 6881,
                  "tokenPos": 815,
                  "endLine": 214,
                  "endFilePos": 6931,
                  "endTokenPos": 815
                }
              ],
              "startLine": 214,
              "endLine": 214,
              "startFilePos": 6932,
              "endFilePos": 6931,
              "startTokenPos": 816,
              "endTokenPos": 815
            }
          }
        ],
        "cond": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "str",
            "attributes": {
              "startLine": 214,
              "endLine": 214
            }
          },
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "array_pop"
              ],
              "attributes": {
                "startLine": 214,
                "endLine": 214
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Variable",
                  "name": "pieces",
                  "attributes": {
                    "startLine": 214,
                    "endLine": 214
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 214,
                  "endLine": 214
                }
              }
            ],
            "attributes": {
              "startLine": 214,
              "endLine": 214
            }
          },
          "attributes": {
            "startLine": 214,
            "endLine": 214
          }
        },
        "attributes": {
          "startLine": 200,
          "endLine": 214
        }
      },
      {
        "nodeType": "Stmt_Return",
        "expr": {
          "nodeType": "Expr_PreDec",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "count",
            "attributes": {
              "startLine": 217,
              "endLine": 217
            }
          },
          "attributes": {
            "startLine": 217,
            "endLine": 217
          }
        },
        "attributes": {
          "startLine": 217,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "// Fencepost: preg_split() always returns one extra item in the array.\n",
              "line": 216,
              "filePos": 6976,
              "tokenPos": 837,
              "endLine": 217,
              "endFilePos": 7046,
              "endTokenPos": 837
            }
          ],
          "endLine": 217
        }
      }
    ],
    "attributes": {
      "startLine": 167,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Internal compat function to mimic mb_strlen().\n *\n * Only understands UTF-8 and 8bit.  All other character sets will be treated as 8bit.\n * For $encoding === UTF-8, the `$str` input is expected to be a valid UTF-8 byte\n * sequence. The behavior of this function for invalid inputs is undefined.\n *\n * @ignore\n * @since 4.2.0\n *\n * @param string      $str      The string to retrieve the character length from.\n * @param string|null $encoding Optional. Character encoding to use. Default null.\n * @return int String length of `$str`.\n */",
          "line": 153,
          "filePos": 4892,
          "tokenPos": 616,
          "endLine": 166,
          "endFilePos": 5434,
          "endTokenPos": 616
        }
      ],
      "endLine": 218
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 220,
            "endLine": 220
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "hash_hmac",
              "attributes": {
                "startLine": 220,
                "endLine": 220,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 220,
              "endLine": 220
            }
          }
        ],
        "attributes": {
          "startLine": 220,
          "endLine": 220
        }
      },
      "attributes": {
        "startLine": 220,
        "endLine": 220
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "hash_hmac",
          "attributes": {
            "startLine": 244,
            "endLine": 244
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "algo",
              "attributes": {
                "startLine": 244,
                "endLine": 244
              }
            },
            "default": null,
            "attributes": {
              "startLine": 244,
              "endLine": 244
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "data",
              "attributes": {
                "startLine": 244,
                "endLine": 244
              }
            },
            "default": null,
            "attributes": {
              "startLine": 244,
              "endLine": 244
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "key",
              "attributes": {
                "startLine": 244,
                "endLine": 244
              }
            },
            "default": null,
            "attributes": {
              "startLine": 244,
              "endLine": 244
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "raw_output",
              "attributes": {
                "startLine": 244,
                "endLine": 244
              }
            },
            "default": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "false"
                ],
                "attributes": {
                  "startLine": 244,
                  "endLine": 244
                }
              },
              "attributes": {
                "startLine": 244,
                "endLine": 244
              }
            },
            "attributes": {
              "startLine": 244,
              "endLine": 244
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "_hash_hmac"
                ],
                "attributes": {
                  "startLine": 245,
                  "endLine": 245
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "algo",
                    "attributes": {
                      "startLine": 245,
                      "endLine": 245
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 245,
                    "endLine": 245
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "data",
                    "attributes": {
                      "startLine": 245,
                      "endLine": 245
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 245,
                    "endLine": 245
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "key",
                    "attributes": {
                      "startLine": 245,
                      "endLine": 245
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 245,
                    "endLine": 245
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "raw_output",
                    "attributes": {
                      "startLine": 245,
                      "endLine": 245
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 245,
                    "endLine": 245
                  }
                }
              ],
              "attributes": {
                "startLine": 245,
                "endLine": 245
              }
            },
            "attributes": {
              "startLine": 245,
              "endLine": 245
            }
          }
        ],
        "attributes": {
          "startLine": 244,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Compat function to mimic hash_hmac().\n\t *\n\t * The Hash extension is bundled with PHP by default since PHP 5.1.2.\n\t * However, the extension may be explicitly disabled on select servers.\n\t * As of PHP 7.4.0, the Hash extension is a core PHP extension and can no\n\t * longer be disabled.\n\t * I.e. when PHP 7.4.0 becomes the minimum requirement, this polyfill\n\t * and the associated `_hash_hmac()` function can be safely removed.\n\t *\n\t * @ignore\n\t * @since 3.2.0\n\t *\n\t * @see _hash_hmac()\n\t *\n\t * @param string $algo       Hash algorithm. Accepts 'md5' or 'sha1'.\n\t * @param string $data       Data to be hashed.\n\t * @param string $key        Secret key to use for generating the hash.\n\t * @param bool   $raw_output Optional. Whether to output raw binary data (true),\n\t *                           or lowercase hexits (false). Default false.\n\t * @return string|false The hash in output determined by `$raw_output`. False if `$algo`\n\t *                      is unknown or invalid.\n\t */",
              "line": 221,
              "filePos": 7111,
              "tokenPos": 864,
              "endLine": 243,
              "endFilePos": 8098,
              "endTokenPos": 864
            }
          ],
          "endLine": 246
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 220,
      "endLine": 247
    }
  },
  {
    "nodeType": "Stmt_Function",
    "byRef": false,
    "name": {
      "nodeType": "Identifier",
      "name": "_hash_hmac",
      "attributes": {
        "startLine": 263,
        "endLine": 263
      }
    },
    "params": [
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "algo",
          "attributes": {
            "startLine": 263,
            "endLine": 263
          }
        },
        "default": null,
        "attributes": {
          "startLine": 263,
          "endLine": 263
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "data",
          "attributes": {
            "startLine": 263,
            "endLine": 263
          }
        },
        "default": null,
        "attributes": {
          "startLine": 263,
          "endLine": 263
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "key",
          "attributes": {
            "startLine": 263,
            "endLine": 263
          }
        },
        "default": null,
        "attributes": {
          "startLine": 263,
          "endLine": 263
        }
      },
      {
        "nodeType": "Param",
        "type": null,
        "byRef": false,
        "variadic": false,
        "var": {
          "nodeType": "Expr_Variable",
          "name": "raw_output",
          "attributes": {
            "startLine": 263,
            "endLine": 263
          }
        },
        "default": {
          "nodeType": "Expr_ConstFetch",
          "name": {
            "nodeType": "Name",
            "parts": [
              "false"
            ],
            "attributes": {
              "startLine": 263,
              "endLine": 263
            }
          },
          "attributes": {
            "startLine": 263,
            "endLine": 263
          }
        },
        "attributes": {
          "startLine": 263,
          "endLine": 263
        }
      }
    ],
    "returnType": null,
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "packs",
            "attributes": {
              "startLine": 264,
              "endLine": 264
            }
          },
          "expr": {
            "nodeType": "Expr_Array",
            "items": [
              {
                "nodeType": "Expr_ArrayItem",
                "key": {
                  "nodeType": "Scalar_String",
                  "value": "md5",
                  "attributes": {
                    "startLine": 265,
                    "endLine": 265,
                    "kind": 1
                  }
                },
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "H32",
                  "attributes": {
                    "startLine": 265,
                    "endLine": 265,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 265,
                  "endLine": 265
                }
              },
              {
                "nodeType": "Expr_ArrayItem",
                "key": {
                  "nodeType": "Scalar_String",
                  "value": "sha1",
                  "attributes": {
                    "startLine": 266,
                    "endLine": 266,
                    "kind": 1
                  }
                },
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "H40",
                  "attributes": {
                    "startLine": 266,
                    "endLine": 266,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 266,
                  "endLine": 266
                }
              }
            ],
            "attributes": {
              "startLine": 264,
              "endLine": 267,
              "kind": 1
            }
          },
          "attributes": {
            "startLine": 264,
            "endLine": 267
          }
        },
        "attributes": {
          "startLine": 264,
          "endLine": 267
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BooleanNot",
          "expr": {
            "nodeType": "Expr_Isset",
            "vars": [
              {
                "nodeType": "Expr_ArrayDimFetch",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "packs",
                  "attributes": {
                    "startLine": 269,
                    "endLine": 269
                  }
                },
                "dim": {
                  "nodeType": "Expr_Variable",
                  "name": "algo",
                  "attributes": {
                    "startLine": 269,
                    "endLine": 269
                  }
                },
                "attributes": {
                  "startLine": 269,
                  "endLine": 269
                }
              }
            ],
            "attributes": {
              "startLine": 269,
              "endLine": 269
            }
          },
          "attributes": {
            "startLine": 269,
            "endLine": 269
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "false"
                ],
                "attributes": {
                  "startLine": 270,
                  "endLine": 270
                }
              },
              "attributes": {
                "startLine": 270,
                "endLine": 270
              }
            },
            "attributes": {
              "startLine": 270,
              "endLine": 270
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 269,
          "endLine": 271
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "pack",
            "attributes": {
              "startLine": 273,
              "endLine": 273
            }
          },
          "expr": {
            "nodeType": "Expr_ArrayDimFetch",
            "var": {
              "nodeType": "Expr_Variable",
              "name": "packs",
              "attributes": {
                "startLine": 273,
                "endLine": 273
              }
            },
            "dim": {
              "nodeType": "Expr_Variable",
              "name": "algo",
              "attributes": {
                "startLine": 273,
                "endLine": 273
              }
            },
            "attributes": {
              "startLine": 273,
              "endLine": 273
            }
          },
          "attributes": {
            "startLine": 273,
            "endLine": 273
          }
        },
        "attributes": {
          "startLine": 273,
          "endLine": 273
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_Greater",
          "left": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "strlen"
              ],
              "attributes": {
                "startLine": 275,
                "endLine": 275
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Variable",
                  "name": "key",
                  "attributes": {
                    "startLine": 275,
                    "endLine": 275
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 275,
                  "endLine": 275
                }
              }
            ],
            "attributes": {
              "startLine": 275,
              "endLine": 275
            }
          },
          "right": {
            "nodeType": "Scalar_LNumber",
            "value": 64,
            "attributes": {
              "startLine": 275,
              "endLine": 275,
              "kind": 10
            }
          },
          "attributes": {
            "startLine": 275,
            "endLine": 275
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "key",
                "attributes": {
                  "startLine": 276,
                  "endLine": 276
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "pack"
                  ],
                  "attributes": {
                    "startLine": 276,
                    "endLine": 276
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "pack",
                      "attributes": {
                        "startLine": 276,
                        "endLine": 276
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 276,
                      "endLine": 276
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Expr_Variable",
                        "name": "algo",
                        "attributes": {
                          "startLine": 276,
                          "endLine": 276
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Variable",
                            "name": "key",
                            "attributes": {
                              "startLine": 276,
                              "endLine": 276
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 276,
                            "endLine": 276
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 276,
                        "endLine": 276
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 276,
                      "endLine": 276
                    }
                  }
                ],
                "attributes": {
                  "startLine": 276,
                  "endLine": 276
                }
              },
              "attributes": {
                "startLine": 276,
                "endLine": 276
              }
            },
            "attributes": {
              "startLine": 276,
              "endLine": 276
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 275,
          "endLine": 277
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "key",
            "attributes": {
              "startLine": 279,
              "endLine": 279
            }
          },
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "str_pad"
              ],
              "attributes": {
                "startLine": 279,
                "endLine": 279
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_Variable",
                  "name": "key",
                  "attributes": {
                    "startLine": 279,
                    "endLine": 279
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 279,
                  "endLine": 279
                }
              },
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Scalar_LNumber",
                  "value": 64,
                  "attributes": {
                    "startLine": 279,
                    "endLine": 279,
                    "kind": 10
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 279,
                  "endLine": 279
                }
              },
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "chr"
                    ],
                    "attributes": {
                      "startLine": 279,
                      "endLine": 279
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_LNumber",
                        "value": 0,
                        "attributes": {
                          "startLine": 279,
                          "endLine": 279,
                          "kind": 10
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 279,
                        "endLine": 279
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 279,
                    "endLine": 279
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 279,
                  "endLine": 279
                }
              }
            ],
            "attributes": {
              "startLine": 279,
              "endLine": 279
            }
          },
          "attributes": {
            "startLine": 279,
            "endLine": 279
          }
        },
        "attributes": {
          "startLine": 279,
          "endLine": 279
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "ipad",
            "attributes": {
              "startLine": 281,
              "endLine": 281
            }
          },
          "expr": {
            "nodeType": "Expr_BinaryOp_BitwiseXor",
            "left": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "substr"
                ],
                "attributes": {
                  "startLine": 281,
                  "endLine": 281
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "key",
                    "attributes": {
                      "startLine": 281,
                      "endLine": 281
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 281,
                    "endLine": 281
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 0,
                    "attributes": {
                      "startLine": 281,
                      "endLine": 281,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 281,
                    "endLine": 281
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 281,
                      "endLine": 281,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 281,
                    "endLine": 281
                  }
                }
              ],
              "attributes": {
                "startLine": 281,
                "endLine": 281
              }
            },
            "right": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "str_repeat"
                ],
                "attributes": {
                  "startLine": 281,
                  "endLine": 281
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "chr"
                      ],
                      "attributes": {
                        "startLine": 281,
                        "endLine": 281
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Scalar_LNumber",
                          "value": 54,
                          "attributes": {
                            "startLine": 281,
                            "endLine": 281,
                            "kind": 16
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 281,
                          "endLine": 281
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 281,
                      "endLine": 281
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 281,
                    "endLine": 281
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 281,
                      "endLine": 281,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 281,
                    "endLine": 281
                  }
                }
              ],
              "attributes": {
                "startLine": 281,
                "endLine": 281
              }
            },
            "attributes": {
              "startLine": 281,
              "endLine": 281
            }
          },
          "attributes": {
            "startLine": 281,
            "endLine": 281
          }
        },
        "attributes": {
          "startLine": 281,
          "endLine": 281
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "opad",
            "attributes": {
              "startLine": 282,
              "endLine": 282
            }
          },
          "expr": {
            "nodeType": "Expr_BinaryOp_BitwiseXor",
            "left": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "substr"
                ],
                "attributes": {
                  "startLine": 282,
                  "endLine": 282
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "key",
                    "attributes": {
                      "startLine": 282,
                      "endLine": 282
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 282,
                    "endLine": 282
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 0,
                    "attributes": {
                      "startLine": 282,
                      "endLine": 282,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 282,
                    "endLine": 282
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 282,
                      "endLine": 282,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 282,
                    "endLine": 282
                  }
                }
              ],
              "attributes": {
                "startLine": 282,
                "endLine": 282
              }
            },
            "right": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "str_repeat"
                ],
                "attributes": {
                  "startLine": 282,
                  "endLine": 282
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "chr"
                      ],
                      "attributes": {
                        "startLine": 282,
                        "endLine": 282
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Scalar_LNumber",
                          "value": 92,
                          "attributes": {
                            "startLine": 282,
                            "endLine": 282,
                            "kind": 16
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 282,
                          "endLine": 282
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 282,
                      "endLine": 282
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 282,
                    "endLine": 282
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 282,
                      "endLine": 282,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 282,
                    "endLine": 282
                  }
                }
              ],
              "attributes": {
                "startLine": 282,
                "endLine": 282
              }
            },
            "attributes": {
              "startLine": 282,
              "endLine": 282
            }
          },
          "attributes": {
            "startLine": 282,
            "endLine": 282
          }
        },
        "attributes": {
          "startLine": 282,
          "endLine": 282
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "hmac",
            "attributes": {
              "startLine": 284,
              "endLine": 284
            }
          },
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Expr_Variable",
              "name": "algo",
              "attributes": {
                "startLine": 284,
                "endLine": 284
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_BinaryOp_Concat",
                  "left": {
                    "nodeType": "Expr_Variable",
                    "name": "opad",
                    "attributes": {
                      "startLine": 284,
                      "endLine": 284
                    }
                  },
                  "right": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "pack"
                      ],
                      "attributes": {
                        "startLine": 284,
                        "endLine": 284
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "pack",
                          "attributes": {
                            "startLine": 284,
                            "endLine": 284
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 284,
                          "endLine": 284
                        }
                      },
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_FuncCall",
                          "name": {
                            "nodeType": "Expr_Variable",
                            "name": "algo",
                            "attributes": {
                              "startLine": 284,
                              "endLine": 284
                            }
                          },
                          "args": [
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Expr_BinaryOp_Concat",
                                "left": {
                                  "nodeType": "Expr_Variable",
                                  "name": "ipad",
                                  "attributes": {
                                    "startLine": 284,
                                    "endLine": 284
                                  }
                                },
                                "right": {
                                  "nodeType": "Expr_Variable",
                                  "name": "data",
                                  "attributes": {
                                    "startLine": 284,
                                    "endLine": 284
                                  }
                                },
                                "attributes": {
                                  "startLine": 284,
                                  "endLine": 284
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 284,
                                "endLine": 284
                              }
                            }
                          ],
                          "attributes": {
                            "startLine": 284,
                            "endLine": 284
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 284,
                          "endLine": 284
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 284,
                      "endLine": 284
                    }
                  },
                  "attributes": {
                    "startLine": 284,
                    "endLine": 284
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 284,
                  "endLine": 284
                }
              }
            ],
            "attributes": {
              "startLine": 284,
              "endLine": 284
            }
          },
          "attributes": {
            "startLine": 284,
            "endLine": 284
          }
        },
        "attributes": {
          "startLine": 284,
          "endLine": 284
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_Variable",
          "name": "raw_output",
          "attributes": {
            "startLine": 286,
            "endLine": 286
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "pack"
                ],
                "attributes": {
                  "startLine": 287,
                  "endLine": 287
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "pack",
                    "attributes": {
                      "startLine": 287,
                      "endLine": 287
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 287,
                    "endLine": 287
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "hmac",
                    "attributes": {
                      "startLine": 287,
                      "endLine": 287
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 287,
                    "endLine": 287
                  }
                }
              ],
              "attributes": {
                "startLine": 287,
                "endLine": 287
              }
            },
            "attributes": {
              "startLine": 287,
              "endLine": 287
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 286,
          "endLine": 288
        }
      },
      {
        "nodeType": "Stmt_Return",
        "expr": {
          "nodeType": "Expr_Variable",
          "name": "hmac",
          "attributes": {
            "startLine": 289,
            "endLine": 289
          }
        },
        "attributes": {
          "startLine": 289,
          "endLine": 289
        }
      }
    ],
    "attributes": {
      "startLine": 263,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Internal compat function to mimic hash_hmac().\n *\n * @ignore\n * @since 3.2.0\n *\n * @param string $algo       Hash algorithm. Accepts 'md5' or 'sha1'.\n * @param string $data       Data to be hashed.\n * @param string $key        Secret key to use for generating the hash.\n * @param bool   $raw_output Optional. Whether to output raw binary data (true),\n *                           or lowercase hexits (false). Default false.\n * @return string|false The hash in output determined by `$raw_output`. False if `$algo`\n *                      is unknown or invalid.\n */",
          "line": 249,
          "filePos": 8232,
          "tokenPos": 914,
          "endLine": 262,
          "endFilePos": 8801,
          "endTokenPos": 914
        }
      ],
      "endLine": 290
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 292,
            "endLine": 292
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "hash_equals",
              "attributes": {
                "startLine": 292,
                "endLine": 292,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 292,
              "endLine": 292
            }
          }
        ],
        "attributes": {
          "startLine": 292,
          "endLine": 292
        }
      },
      "attributes": {
        "startLine": 292,
        "endLine": 292
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "hash_equals",
          "attributes": {
            "startLine": 313,
            "endLine": 313
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "a",
              "attributes": {
                "startLine": 313,
                "endLine": 313
              }
            },
            "default": null,
            "attributes": {
              "startLine": 313,
              "endLine": 313
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "b",
              "attributes": {
                "startLine": 313,
                "endLine": 313
              }
            },
            "default": null,
            "attributes": {
              "startLine": 313,
              "endLine": 313
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "a_length",
                "attributes": {
                  "startLine": 314,
                  "endLine": 314
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strlen"
                  ],
                  "attributes": {
                    "startLine": 314,
                    "endLine": 314
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "a",
                      "attributes": {
                        "startLine": 314,
                        "endLine": 314
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 314,
                      "endLine": 314
                    }
                  }
                ],
                "attributes": {
                  "startLine": 314,
                  "endLine": 314
                }
              },
              "attributes": {
                "startLine": 314,
                "endLine": 314
              }
            },
            "attributes": {
              "startLine": 314,
              "endLine": 314
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_NotIdentical",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strlen"
                  ],
                  "attributes": {
                    "startLine": 315,
                    "endLine": 315
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "b",
                      "attributes": {
                        "startLine": 315,
                        "endLine": 315
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 315,
                      "endLine": 315
                    }
                  }
                ],
                "attributes": {
                  "startLine": 315,
                  "endLine": 315
                }
              },
              "right": {
                "nodeType": "Expr_Variable",
                "name": "a_length",
                "attributes": {
                  "startLine": 315,
                  "endLine": 315
                }
              },
              "attributes": {
                "startLine": 315,
                "endLine": 315
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Return",
                "expr": {
                  "nodeType": "Expr_ConstFetch",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "false"
                    ],
                    "attributes": {
                      "startLine": 316,
                      "endLine": 316
                    }
                  },
                  "attributes": {
                    "startLine": 316,
                    "endLine": 316
                  }
                },
                "attributes": {
                  "startLine": 316,
                  "endLine": 316
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 315,
              "endLine": 317
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "result",
                "attributes": {
                  "startLine": 318,
                  "endLine": 318
                }
              },
              "expr": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 318,
                  "endLine": 318,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 318,
                "endLine": 318
              }
            },
            "attributes": {
              "startLine": 318,
              "endLine": 318
            }
          },
          {
            "nodeType": "Stmt_For",
            "init": [
              {
                "nodeType": "Expr_Assign",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "i",
                  "attributes": {
                    "startLine": 321,
                    "endLine": 321
                  }
                },
                "expr": {
                  "nodeType": "Scalar_LNumber",
                  "value": 0,
                  "attributes": {
                    "startLine": 321,
                    "endLine": 321,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 321,
                  "endLine": 321
                }
              }
            ],
            "cond": [
              {
                "nodeType": "Expr_BinaryOp_Smaller",
                "left": {
                  "nodeType": "Expr_Variable",
                  "name": "i",
                  "attributes": {
                    "startLine": 321,
                    "endLine": 321
                  }
                },
                "right": {
                  "nodeType": "Expr_Variable",
                  "name": "a_length",
                  "attributes": {
                    "startLine": 321,
                    "endLine": 321
                  }
                },
                "attributes": {
                  "startLine": 321,
                  "endLine": 321
                }
              }
            ],
            "loop": [
              {
                "nodeType": "Expr_PostInc",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "i",
                  "attributes": {
                    "startLine": 321,
                    "endLine": 321
                  }
                },
                "attributes": {
                  "startLine": 321,
                  "endLine": 321
                }
              }
            ],
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_AssignOp_BitwiseOr",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "result",
                    "attributes": {
                      "startLine": 322,
                      "endLine": 322
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_BinaryOp_BitwiseXor",
                    "left": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "ord"
                        ],
                        "attributes": {
                          "startLine": 322,
                          "endLine": 322
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_ArrayDimFetch",
                            "var": {
                              "nodeType": "Expr_Variable",
                              "name": "a",
                              "attributes": {
                                "startLine": 322,
                                "endLine": 322
                              }
                            },
                            "dim": {
                              "nodeType": "Expr_Variable",
                              "name": "i",
                              "attributes": {
                                "startLine": 322,
                                "endLine": 322
                              }
                            },
                            "attributes": {
                              "startLine": 322,
                              "endLine": 322
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 322,
                            "endLine": 322
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 322,
                        "endLine": 322
                      }
                    },
                    "right": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "ord"
                        ],
                        "attributes": {
                          "startLine": 322,
                          "endLine": 322
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_ArrayDimFetch",
                            "var": {
                              "nodeType": "Expr_Variable",
                              "name": "b",
                              "attributes": {
                                "startLine": 322,
                                "endLine": 322
                              }
                            },
                            "dim": {
                              "nodeType": "Expr_Variable",
                              "name": "i",
                              "attributes": {
                                "startLine": 322,
                                "endLine": 322
                              }
                            },
                            "attributes": {
                              "startLine": 322,
                              "endLine": 322
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 322,
                            "endLine": 322
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 322,
                        "endLine": 322
                      }
                    },
                    "attributes": {
                      "startLine": 322,
                      "endLine": 322
                    }
                  },
                  "attributes": {
                    "startLine": 322,
                    "endLine": 322
                  }
                },
                "attributes": {
                  "startLine": 322,
                  "endLine": 322
                }
              }
            ],
            "attributes": {
              "startLine": 321,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Do not attempt to \"optimize\" this.\n",
                  "line": 320,
                  "filePos": 10291,
                  "tokenPos": 1290,
                  "endLine": 321,
                  "endFilePos": 10328,
                  "endTokenPos": 1290
                }
              ],
              "endLine": 323
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_BinaryOp_Identical",
              "left": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 325,
                  "endLine": 325,
                  "kind": 10
                }
              },
              "right": {
                "nodeType": "Expr_Variable",
                "name": "result",
                "attributes": {
                  "startLine": 325,
                  "endLine": 325
                }
              },
              "attributes": {
                "startLine": 325,
                "endLine": 325
              }
            },
            "attributes": {
              "startLine": 325,
              "endLine": 325
            }
          }
        ],
        "attributes": {
          "startLine": 313,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Timing attack safe string comparison\n\t *\n\t * Compares two strings using the same time whether they're equal or not.\n\t *\n\t * Note: It can leak the length of a string when arguments of differing length are supplied.\n\t *\n\t * This function was added in PHP 5.6.\n\t * However, the Hash extension may be explicitly disabled on select servers.\n\t * As of PHP 7.4.0, the Hash extension is a core PHP extension and can no\n\t * longer be disabled.\n\t * I.e. when PHP 7.4.0 becomes the minimum requirement, this polyfill\n\t * can be safely removed.\n\t *\n\t * @since 3.9.2\n\t *\n\t * @param string $a Expected string.\n\t * @param string $b Actual, user supplied, string.\n\t * @return bool Whether strings are equal.\n\t */",
              "line": 293,
              "filePos": 9447,
              "tokenPos": 1229,
              "endLine": 312,
              "endFilePos": 10150,
              "endTokenPos": 1229
            }
          ],
          "endLine": 326
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 292,
      "endLine": 327
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 330,
            "endLine": 330
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "random_int",
              "attributes": {
                "startLine": 330,
                "endLine": 330,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 330,
              "endLine": 330
            }
          }
        ],
        "attributes": {
          "startLine": 330,
          "endLine": 330
        }
      },
      "attributes": {
        "startLine": 330,
        "endLine": 330
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Include",
          "expr": {
            "nodeType": "Expr_BinaryOp_Concat",
            "left": {
              "nodeType": "Expr_BinaryOp_Concat",
              "left": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "ABSPATH"
                  ],
                  "attributes": {
                    "startLine": 331,
                    "endLine": 331
                  }
                },
                "attributes": {
                  "startLine": 331,
                  "endLine": 331
                }
              },
              "right": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "WPINC"
                  ],
                  "attributes": {
                    "startLine": 331,
                    "endLine": 331
                  }
                },
                "attributes": {
                  "startLine": 331,
                  "endLine": 331
                }
              },
              "attributes": {
                "startLine": 331,
                "endLine": 331
              }
            },
            "right": {
              "nodeType": "Scalar_String",
              "value": "/random_compat/random.php",
              "attributes": {
                "startLine": 331,
                "endLine": 331,
                "kind": 1
              }
            },
            "attributes": {
              "startLine": 331,
              "endLine": 331
            }
          },
          "type": 3,
          "attributes": {
            "startLine": 331,
            "endLine": 331
          }
        },
        "attributes": {
          "startLine": 331,
          "endLine": 331
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 330,
      "comments": [
        {
          "nodeType": "Comment",
          "text": "// random_int() was introduced in PHP 7.0.\n",
          "line": 329,
          "filePos": 10459,
          "tokenPos": 1364,
          "endLine": 330,
          "endFilePos": 10501,
          "endTokenPos": 1364
        }
      ],
      "endLine": 332
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 334,
            "endLine": 334
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "sodium_crypto_box",
              "attributes": {
                "startLine": 334,
                "endLine": 334,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 334,
              "endLine": 334
            }
          }
        ],
        "attributes": {
          "startLine": 334,
          "endLine": 334
        }
      },
      "attributes": {
        "startLine": 334,
        "endLine": 334
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Include",
          "expr": {
            "nodeType": "Expr_BinaryOp_Concat",
            "left": {
              "nodeType": "Expr_BinaryOp_Concat",
              "left": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "ABSPATH"
                  ],
                  "attributes": {
                    "startLine": 335,
                    "endLine": 335
                  }
                },
                "attributes": {
                  "startLine": 335,
                  "endLine": 335
                }
              },
              "right": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "WPINC"
                  ],
                  "attributes": {
                    "startLine": 335,
                    "endLine": 335
                  }
                },
                "attributes": {
                  "startLine": 335,
                  "endLine": 335
                }
              },
              "attributes": {
                "startLine": 335,
                "endLine": 335
              }
            },
            "right": {
              "nodeType": "Scalar_String",
              "value": "/sodium_compat/autoload.php",
              "attributes": {
                "startLine": 335,
                "endLine": 335,
                "kind": 1
              }
            },
            "attributes": {
              "startLine": 335,
              "endLine": 335
            }
          },
          "type": 3,
          "attributes": {
            "startLine": 335,
            "endLine": 335
          }
        },
        "attributes": {
          "startLine": 335,
          "endLine": 335
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 334,
      "comments": [
        {
          "nodeType": "Comment",
          "text": "// sodium_crypto_box() was introduced in PHP 7.2.\n",
          "line": 333,
          "filePos": 10603,
          "tokenPos": 1397,
          "endLine": 334,
          "endFilePos": 10652,
          "endTokenPos": 1397
        }
      ],
      "endLine": 336
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 338,
            "endLine": 338
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "is_countable",
              "attributes": {
                "startLine": 338,
                "endLine": 338,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 338,
              "endLine": 338
            }
          }
        ],
        "attributes": {
          "startLine": 338,
          "endLine": 338
        }
      },
      "attributes": {
        "startLine": 338,
        "endLine": 338
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "is_countable",
          "attributes": {
            "startLine": 351,
            "endLine": 351
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "var",
              "attributes": {
                "startLine": 351,
                "endLine": 351
              }
            },
            "default": null,
            "attributes": {
              "startLine": 351,
              "endLine": 351
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_BinaryOp_BooleanOr",
              "left": {
                "nodeType": "Expr_BinaryOp_BooleanOr",
                "left": {
                  "nodeType": "Expr_BinaryOp_BooleanOr",
                  "left": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "is_array"
                      ],
                      "attributes": {
                        "startLine": 352,
                        "endLine": 352
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "var",
                          "attributes": {
                            "startLine": 352,
                            "endLine": 352
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 352,
                          "endLine": 352
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 352,
                      "endLine": 352
                    }
                  },
                  "right": {
                    "nodeType": "Expr_Instanceof",
                    "expr": {
                      "nodeType": "Expr_Variable",
                      "name": "var",
                      "attributes": {
                        "startLine": 353,
                        "endLine": 353
                      }
                    },
                    "class": {
                      "nodeType": "Name",
                      "parts": [
                        "Countable"
                      ],
                      "attributes": {
                        "startLine": 353,
                        "endLine": 353
                      }
                    },
                    "attributes": {
                      "startLine": 353,
                      "endLine": 353
                    }
                  },
                  "attributes": {
                    "startLine": 352,
                    "endLine": 353
                  }
                },
                "right": {
                  "nodeType": "Expr_Instanceof",
                  "expr": {
                    "nodeType": "Expr_Variable",
                    "name": "var",
                    "attributes": {
                      "startLine": 354,
                      "endLine": 354
                    }
                  },
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "SimpleXMLElement"
                    ],
                    "attributes": {
                      "startLine": 354,
                      "endLine": 354
                    }
                  },
                  "attributes": {
                    "startLine": 354,
                    "endLine": 354
                  }
                },
                "attributes": {
                  "startLine": 352,
                  "endLine": 354
                }
              },
              "right": {
                "nodeType": "Expr_Instanceof",
                "expr": {
                  "nodeType": "Expr_Variable",
                  "name": "var",
                  "attributes": {
                    "startLine": 355,
                    "endLine": 355
                  }
                },
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "ResourceBundle"
                  ],
                  "attributes": {
                    "startLine": 355,
                    "endLine": 355
                  }
                },
                "attributes": {
                  "startLine": 355,
                  "endLine": 355
                }
              },
              "attributes": {
                "startLine": 352,
                "endLine": 355
              }
            },
            "attributes": {
              "startLine": 352,
              "endLine": 356
            }
          }
        ],
        "attributes": {
          "startLine": 351,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Polyfill for is_countable() function added in PHP 7.3.\n\t *\n\t * Verify that the content of a variable is an array or an object\n\t * implementing the Countable interface.\n\t *\n\t * @since 4.9.6\n\t *\n\t * @param mixed $var The value to check.\n\t *\n\t * @return bool True if `$var` is countable, false otherwise.\n\t */",
              "line": 339,
              "filePos": 10810,
              "tokenPos": 1447,
              "endLine": 350,
              "endFilePos": 11123,
              "endTokenPos": 1447
            }
          ],
          "endLine": 357
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 338,
      "endLine": 358
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "function_exists"
          ],
          "attributes": {
            "startLine": 360,
            "endLine": 360
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "is_iterable",
              "attributes": {
                "startLine": 360,
                "endLine": 360,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 360,
              "endLine": 360
            }
          }
        ],
        "attributes": {
          "startLine": 360,
          "endLine": 360
        }
      },
      "attributes": {
        "startLine": 360,
        "endLine": 360
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Function",
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "is_iterable",
          "attributes": {
            "startLine": 373,
            "endLine": 373
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "var",
              "attributes": {
                "startLine": 373,
                "endLine": 373
              }
            },
            "default": null,
            "attributes": {
              "startLine": 373,
              "endLine": 373
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_BinaryOp_BooleanOr",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "is_array"
                  ],
                  "attributes": {
                    "startLine": 374,
                    "endLine": 374
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "var",
                      "attributes": {
                        "startLine": 374,
                        "endLine": 374
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 374,
                      "endLine": 374
                    }
                  }
                ],
                "attributes": {
                  "startLine": 374,
                  "endLine": 374
                }
              },
              "right": {
                "nodeType": "Expr_Instanceof",
                "expr": {
                  "nodeType": "Expr_Variable",
                  "name": "var",
                  "attributes": {
                    "startLine": 374,
                    "endLine": 374
                  }
                },
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "Traversable"
                  ],
                  "attributes": {
                    "startLine": 374,
                    "endLine": 374
                  }
                },
                "attributes": {
                  "startLine": 374,
                  "endLine": 374
                }
              },
              "attributes": {
                "startLine": 374,
                "endLine": 374
              }
            },
            "attributes": {
              "startLine": 374,
              "endLine": 374
            }
          }
        ],
        "attributes": {
          "startLine": 373,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Polyfill for is_iterable() function added in PHP 7.1.\n\t *\n\t * Verify that the content of a variable is an array or an object\n\t * implementing the Traversable interface.\n\t *\n\t * @since 4.9.6\n\t *\n\t * @param mixed $var The value to check.\n\t *\n\t * @return bool True if `$var` is iterable, false otherwise.\n\t */",
              "line": 361,
              "filePos": 11350,
              "tokenPos": 1519,
              "endLine": 372,
              "endFilePos": 11663,
              "endTokenPos": 1519
            }
          ],
          "endLine": 375
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 360,
      "endLine": 376
    }
  }
]