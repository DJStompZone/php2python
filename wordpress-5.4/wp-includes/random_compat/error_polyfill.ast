[
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "class_exists"
          ],
          "attributes": {
            "startLine": 29,
            "endLine": 29
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "Error",
              "attributes": {
                "startLine": 29,
                "endLine": 29,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 29,
              "endLine": 29
            }
          },
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "false"
                ],
                "attributes": {
                  "startLine": 29,
                  "endLine": 29
                }
              },
              "attributes": {
                "startLine": 29,
                "endLine": 29
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 29,
              "endLine": 29
            }
          }
        ],
        "attributes": {
          "startLine": 29,
          "endLine": 29
        }
      },
      "attributes": {
        "startLine": 29,
        "endLine": 29
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Class",
        "flags": 0,
        "extends": {
          "nodeType": "Name",
          "parts": [
            "Exception"
          ],
          "attributes": {
            "startLine": 31,
            "endLine": 31
          }
        },
        "implements": [],
        "name": {
          "nodeType": "Identifier",
          "name": "Error",
          "attributes": {
            "startLine": 31,
            "endLine": 31
          }
        },
        "stmts": [],
        "attributes": {
          "startLine": 31,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "// We can't really avoid making this extend Exception in PHP 5.\n",
              "line": 30,
              "filePos": 1319,
              "tokenPos": 18,
              "endLine": 31,
              "endFilePos": 1382,
              "endTokenPos": 18
            }
          ],
          "endLine": 34
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 29,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Random_* Compatibility Library \n * for using the new PHP 7 random_* API in PHP 5 projects\n * \n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2017 Paragon Initiative Enterprises\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */",
          "line": 2,
          "filePos": 6,
          "tokenPos": 1,
          "endLine": 27,
          "endFilePos": 1275,
          "endTokenPos": 1
        }
      ],
      "endLine": 35
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "class_exists"
          ],
          "attributes": {
            "startLine": 37,
            "endLine": 37
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "TypeError",
              "attributes": {
                "startLine": 37,
                "endLine": 37,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 37,
              "endLine": 37
            }
          },
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Expr_ConstFetch",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "false"
                ],
                "attributes": {
                  "startLine": 37,
                  "endLine": 37
                }
              },
              "attributes": {
                "startLine": 37,
                "endLine": 37
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 37,
              "endLine": 37
            }
          }
        ],
        "attributes": {
          "startLine": 37,
          "endLine": 37
        }
      },
      "attributes": {
        "startLine": 37,
        "endLine": 37
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "is_subclass_of"
            ],
            "attributes": {
              "startLine": 38,
              "endLine": 38
            }
          },
          "args": [
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "Error",
                "attributes": {
                  "startLine": 38,
                  "endLine": 38,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 38,
                "endLine": 38
              }
            },
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "Exception",
                "attributes": {
                  "startLine": 38,
                  "endLine": 38,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 38,
                "endLine": 38
              }
            }
          ],
          "attributes": {
            "startLine": 38,
            "endLine": 38
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Class",
            "flags": 0,
            "extends": {
              "nodeType": "Name",
              "parts": [
                "Error"
              ],
              "attributes": {
                "startLine": 39,
                "endLine": 39
              }
            },
            "implements": [],
            "name": {
              "nodeType": "Identifier",
              "name": "TypeError",
              "attributes": {
                "startLine": 39,
                "endLine": 39
              }
            },
            "stmts": [],
            "attributes": {
              "startLine": 39,
              "endLine": 42
            }
          }
        ],
        "elseifs": [],
        "else": {
          "nodeType": "Stmt_Else",
          "stmts": [
            {
              "nodeType": "Stmt_Class",
              "flags": 0,
              "extends": {
                "nodeType": "Name",
                "parts": [
                  "Exception"
                ],
                "attributes": {
                  "startLine": 44,
                  "endLine": 44
                }
              },
              "implements": [],
              "name": {
                "nodeType": "Identifier",
                "name": "TypeError",
                "attributes": {
                  "startLine": 44,
                  "endLine": 44
                }
              },
              "stmts": [],
              "attributes": {
                "startLine": 44,
                "endLine": 47
              }
            }
          ],
          "attributes": {
            "startLine": 43,
            "endLine": 48
          }
        },
        "attributes": {
          "startLine": 38,
          "endLine": 48
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 37,
      "endLine": 49
    }
  }
]