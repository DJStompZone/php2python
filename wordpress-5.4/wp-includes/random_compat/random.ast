[
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "defined"
          ],
          "attributes": {
            "startLine": 32,
            "endLine": 32
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "PHP_VERSION_ID",
              "attributes": {
                "startLine": 32,
                "endLine": 32,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 32,
              "endLine": 32
            }
          }
        ],
        "attributes": {
          "startLine": 32,
          "endLine": 32
        }
      },
      "attributes": {
        "startLine": 32,
        "endLine": 32
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "RandomCompatversion",
            "attributes": {
              "startLine": 34,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// This constant was introduced in PHP 5.2.7\n",
                  "line": 33,
                  "filePos": 1357,
                  "tokenPos": 15,
                  "endLine": 34,
                  "endFilePos": 1401,
                  "endTokenPos": 15
                }
              ],
              "endLine": 34
            }
          },
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "array_map"
              ],
              "attributes": {
                "startLine": 34,
                "endLine": 34
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "intval",
                  "attributes": {
                    "startLine": 34,
                    "endLine": 34,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 34,
                  "endLine": 34
                }
              },
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "explode"
                    ],
                    "attributes": {
                      "startLine": 34,
                      "endLine": 34
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": ".",
                        "attributes": {
                          "startLine": 34,
                          "endLine": 34,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 34,
                        "endLine": 34
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_ConstFetch",
                        "name": {
                          "nodeType": "Name",
                          "parts": [
                            "PHP_VERSION"
                          ],
                          "attributes": {
                            "startLine": 34,
                            "endLine": 34
                          }
                        },
                        "attributes": {
                          "startLine": 34,
                          "endLine": 34
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 34,
                        "endLine": 34
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 34,
                    "endLine": 34
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 34,
                  "endLine": 34
                }
              }
            ],
            "attributes": {
              "startLine": 34,
              "endLine": 34
            }
          },
          "attributes": {
            "startLine": 34,
            "comments": [
              {
                "nodeType": "Comment",
                "text": "// This constant was introduced in PHP 5.2.7\n",
                "line": 33,
                "filePos": 1357,
                "tokenPos": 15,
                "endLine": 34,
                "endFilePos": 1401,
                "endTokenPos": 15
              }
            ],
            "endLine": 34
          }
        },
        "attributes": {
          "startLine": 34,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "// This constant was introduced in PHP 5.2.7\n",
              "line": 33,
              "filePos": 1357,
              "tokenPos": 15,
              "endLine": 34,
              "endFilePos": 1401,
              "endTokenPos": 15
            }
          ],
          "endLine": 34
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "define"
            ],
            "attributes": {
              "startLine": 35,
              "endLine": 35
            }
          },
          "args": [
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "PHP_VERSION_ID",
                "attributes": {
                  "startLine": 36,
                  "endLine": 36,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 36,
                "endLine": 36
              }
            },
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Expr_BinaryOp_Plus",
                "left": {
                  "nodeType": "Expr_BinaryOp_Plus",
                  "left": {
                    "nodeType": "Expr_BinaryOp_Mul",
                    "left": {
                      "nodeType": "Expr_ArrayDimFetch",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "RandomCompatversion",
                        "attributes": {
                          "startLine": 37,
                          "endLine": 37
                        }
                      },
                      "dim": {
                        "nodeType": "Scalar_LNumber",
                        "value": 0,
                        "attributes": {
                          "startLine": 37,
                          "endLine": 37,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 37,
                        "endLine": 37
                      }
                    },
                    "right": {
                      "nodeType": "Scalar_LNumber",
                      "value": 10000,
                      "attributes": {
                        "startLine": 37,
                        "endLine": 37,
                        "kind": 10
                      }
                    },
                    "attributes": {
                      "startLine": 37,
                      "endLine": 37
                    }
                  },
                  "right": {
                    "nodeType": "Expr_BinaryOp_Mul",
                    "left": {
                      "nodeType": "Expr_ArrayDimFetch",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "RandomCompatversion",
                        "attributes": {
                          "startLine": 38,
                          "endLine": 38
                        }
                      },
                      "dim": {
                        "nodeType": "Scalar_LNumber",
                        "value": 1,
                        "attributes": {
                          "startLine": 38,
                          "endLine": 38,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 38,
                        "endLine": 38
                      }
                    },
                    "right": {
                      "nodeType": "Scalar_LNumber",
                      "value": 100,
                      "attributes": {
                        "startLine": 38,
                        "endLine": 38,
                        "kind": 10
                      }
                    },
                    "attributes": {
                      "startLine": 38,
                      "endLine": 38
                    }
                  },
                  "attributes": {
                    "startLine": 37,
                    "endLine": 38
                  }
                },
                "right": {
                  "nodeType": "Expr_ArrayDimFetch",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "RandomCompatversion",
                    "attributes": {
                      "startLine": 39,
                      "endLine": 39
                    }
                  },
                  "dim": {
                    "nodeType": "Scalar_LNumber",
                    "value": 2,
                    "attributes": {
                      "startLine": 39,
                      "endLine": 39,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 39,
                    "endLine": 39
                  }
                },
                "attributes": {
                  "startLine": 37,
                  "endLine": 39
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 37,
                "endLine": 39
              }
            }
          ],
          "attributes": {
            "startLine": 35,
            "endLine": 40
          }
        },
        "attributes": {
          "startLine": 35,
          "endLine": 40
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "RandomCompatversion",
            "attributes": {
              "startLine": 41,
              "endLine": 41
            }
          },
          "expr": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "null"
              ],
              "attributes": {
                "startLine": 41,
                "endLine": 41
              }
            },
            "attributes": {
              "startLine": 41,
              "endLine": 41
            }
          },
          "attributes": {
            "startLine": 41,
            "endLine": 41
          }
        },
        "attributes": {
          "startLine": 41,
          "endLine": 41
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 32,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * @version 2.0.10\n * @released 2017-03-13\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2017 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */",
          "line": 2,
          "filePos": 6,
          "tokenPos": 1,
          "endLine": 30,
          "endFilePos": 1316,
          "endTokenPos": 1
        }
      ],
      "endLine": 42
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BinaryOp_GreaterOrEqual",
      "left": {
        "nodeType": "Expr_ConstFetch",
        "name": {
          "nodeType": "Name",
          "parts": [
            "PHP_VERSION_ID"
          ],
          "attributes": {
            "startLine": 47,
            "endLine": 47
          }
        },
        "attributes": {
          "startLine": 47,
          "endLine": 47
        }
      },
      "right": {
        "nodeType": "Scalar_LNumber",
        "value": 70000,
        "attributes": {
          "startLine": 47,
          "endLine": 47,
          "kind": 10
        }
      },
      "attributes": {
        "startLine": 47,
        "endLine": 47
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Return",
        "expr": null,
        "attributes": {
          "startLine": 48,
          "endLine": 48
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 47,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * PHP 7.0.0 and newer have these functions natively.\n */",
          "line": 44,
          "filePos": 1672,
          "tokenPos": 81,
          "endLine": 46,
          "endFilePos": 1732,
          "endTokenPos": 81
        }
      ],
      "endLine": 49
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "defined"
          ],
          "attributes": {
            "startLine": 51,
            "endLine": 51
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "RANDOM_COMPAT_READ_BUFFER",
              "attributes": {
                "startLine": 51,
                "endLine": 51,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 51,
              "endLine": 51
            }
          }
        ],
        "attributes": {
          "startLine": 51,
          "endLine": 51
        }
      },
      "attributes": {
        "startLine": 51,
        "endLine": 51
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "define"
            ],
            "attributes": {
              "startLine": 52,
              "endLine": 52
            }
          },
          "args": [
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "RANDOM_COMPAT_READ_BUFFER",
                "attributes": {
                  "startLine": 52,
                  "endLine": 52,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 52,
                "endLine": 52
              }
            },
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_LNumber",
                "value": 8,
                "attributes": {
                  "startLine": 52,
                  "endLine": 52,
                  "kind": 10
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 52,
                "endLine": 52
              }
            }
          ],
          "attributes": {
            "startLine": 52,
            "endLine": 52
          }
        },
        "attributes": {
          "startLine": 52,
          "endLine": 52
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 51,
      "endLine": 53
    }
  },
  {
    "nodeType": "Stmt_Expression",
    "expr": {
      "nodeType": "Expr_Assign",
      "var": {
        "nodeType": "Expr_Variable",
        "name": "RandomCompatDIR",
        "attributes": {
          "startLine": 55,
          "endLine": 55
        }
      },
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "dirname"
          ],
          "attributes": {
            "startLine": 55,
            "endLine": 55
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_MagicConst_File",
              "attributes": {
                "startLine": 55,
                "endLine": 55
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 55,
              "endLine": 55
            }
          }
        ],
        "attributes": {
          "startLine": 55,
          "endLine": 55
        }
      },
      "attributes": {
        "startLine": 55,
        "endLine": 55
      }
    },
    "attributes": {
      "startLine": 55,
      "endLine": 55
    }
  },
  {
    "nodeType": "Stmt_Expression",
    "expr": {
      "nodeType": "Expr_Include",
      "expr": {
        "nodeType": "Expr_BinaryOp_Concat",
        "left": {
          "nodeType": "Expr_Variable",
          "name": "RandomCompatDIR",
          "attributes": {
            "startLine": 57,
            "endLine": 57
          }
        },
        "right": {
          "nodeType": "Scalar_String",
          "value": "/byte_safe_strings.php",
          "attributes": {
            "startLine": 57,
            "endLine": 57,
            "kind": 1
          }
        },
        "attributes": {
          "startLine": 57,
          "endLine": 57
        }
      },
      "type": 4,
      "attributes": {
        "startLine": 57,
        "endLine": 57
      }
    },
    "attributes": {
      "startLine": 57,
      "endLine": 57
    }
  },
  {
    "nodeType": "Stmt_Expression",
    "expr": {
      "nodeType": "Expr_Include",
      "expr": {
        "nodeType": "Expr_BinaryOp_Concat",
        "left": {
          "nodeType": "Expr_Variable",
          "name": "RandomCompatDIR",
          "attributes": {
            "startLine": 58,
            "endLine": 58
          }
        },
        "right": {
          "nodeType": "Scalar_String",
          "value": "/cast_to_int.php",
          "attributes": {
            "startLine": 58,
            "endLine": 58,
            "kind": 1
          }
        },
        "attributes": {
          "startLine": 58,
          "endLine": 58
        }
      },
      "type": 4,
      "attributes": {
        "startLine": 58,
        "endLine": 58
      }
    },
    "attributes": {
      "startLine": 58,
      "endLine": 58
    }
  },
  {
    "nodeType": "Stmt_Expression",
    "expr": {
      "nodeType": "Expr_Include",
      "expr": {
        "nodeType": "Expr_BinaryOp_Concat",
        "left": {
          "nodeType": "Expr_Variable",
          "name": "RandomCompatDIR",
          "attributes": {
            "startLine": 59,
            "endLine": 59
          }
        },
        "right": {
          "nodeType": "Scalar_String",
          "value": "/error_polyfill.php",
          "attributes": {
            "startLine": 59,
            "endLine": 59,
            "kind": 1
          }
        },
        "attributes": {
          "startLine": 59,
          "endLine": 59
        }
      },
      "type": 4,
      "attributes": {
        "startLine": 59,
        "endLine": 59
      }
    },
    "attributes": {
      "startLine": 59,
      "endLine": 59
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "is_callable"
          ],
          "attributes": {
            "startLine": 61,
            "endLine": 61
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "random_bytes",
              "attributes": {
                "startLine": 61,
                "endLine": 61,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 61,
              "endLine": 61
            }
          }
        ],
        "attributes": {
          "startLine": 61,
          "endLine": 61
        }
      },
      "attributes": {
        "startLine": 61,
        "endLine": 61
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_FuncCall",
          "name": {
            "nodeType": "Name",
            "parts": [
              "extension_loaded"
            ],
            "attributes": {
              "startLine": 76,
              "endLine": 76
            }
          },
          "args": [
            {
              "nodeType": "Arg",
              "value": {
                "nodeType": "Scalar_String",
                "value": "libsodium",
                "attributes": {
                  "startLine": 76,
                  "endLine": 76,
                  "kind": 1
                }
              },
              "byRef": false,
              "unpack": false,
              "attributes": {
                "startLine": 76,
                "endLine": 76
              }
            }
          ],
          "attributes": {
            "startLine": 76,
            "endLine": 76
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_BooleanAnd",
              "left": {
                "nodeType": "Expr_BinaryOp_GreaterOrEqual",
                "left": {
                  "nodeType": "Expr_ConstFetch",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "PHP_VERSION_ID"
                    ],
                    "attributes": {
                      "startLine": 78,
                      "endLine": 78
                    }
                  },
                  "attributes": {
                    "startLine": 78,
                    "endLine": 78
                  }
                },
                "right": {
                  "nodeType": "Scalar_LNumber",
                  "value": 50300,
                  "attributes": {
                    "startLine": 78,
                    "endLine": 78,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 78,
                  "endLine": 78
                }
              },
              "right": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "is_callable"
                  ],
                  "attributes": {
                    "startLine": 78,
                    "endLine": 78
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "\\Sodium\\randombytes_buf",
                      "attributes": {
                        "startLine": 78,
                        "endLine": 78,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 78,
                      "endLine": 78
                    }
                  }
                ],
                "attributes": {
                  "startLine": 78,
                  "endLine": 78
                }
              },
              "attributes": {
                "startLine": 78,
                "endLine": 78
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Include",
                  "expr": {
                    "nodeType": "Expr_BinaryOp_Concat",
                    "left": {
                      "nodeType": "Expr_Variable",
                      "name": "RandomCompatDIR",
                      "attributes": {
                        "startLine": 79,
                        "endLine": 79
                      }
                    },
                    "right": {
                      "nodeType": "Scalar_String",
                      "value": "/random_bytes_libsodium.php",
                      "attributes": {
                        "startLine": 79,
                        "endLine": 79,
                        "kind": 1
                      }
                    },
                    "attributes": {
                      "startLine": 79,
                      "endLine": 79
                    }
                  },
                  "type": 4,
                  "attributes": {
                    "startLine": 79,
                    "endLine": 79
                  }
                },
                "attributes": {
                  "startLine": 79,
                  "endLine": 79
                }
              }
            ],
            "elseifs": [
              {
                "nodeType": "Stmt_ElseIf",
                "cond": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "method_exists"
                    ],
                    "attributes": {
                      "startLine": 80,
                      "endLine": 80
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "Sodium",
                        "attributes": {
                          "startLine": 80,
                          "endLine": 80,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 80,
                        "endLine": 80
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "randombytes_buf",
                        "attributes": {
                          "startLine": 80,
                          "endLine": 80,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 80,
                        "endLine": 80
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 80,
                    "endLine": 80
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Include",
                      "expr": {
                        "nodeType": "Expr_BinaryOp_Concat",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "RandomCompatDIR",
                          "attributes": {
                            "startLine": 81,
                            "endLine": 81
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_String",
                          "value": "/random_bytes_libsodium_legacy.php",
                          "attributes": {
                            "startLine": 81,
                            "endLine": 81,
                            "kind": 1
                          }
                        },
                        "attributes": {
                          "startLine": 81,
                          "endLine": 81
                        }
                      },
                      "type": 4,
                      "attributes": {
                        "startLine": 81,
                        "endLine": 81
                      }
                    },
                    "attributes": {
                      "startLine": 81,
                      "endLine": 81
                    }
                  }
                ],
                "attributes": {
                  "startLine": 80,
                  "endLine": 82
                }
              }
            ],
            "else": null,
            "attributes": {
              "startLine": 78,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// See random_bytes_libsodium.php\n",
                  "line": 77,
                  "filePos": 2715,
                  "tokenPos": 185,
                  "endLine": 78,
                  "endFilePos": 2748,
                  "endTokenPos": 185
                }
              ],
              "endLine": 82
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 76,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n     * PHP 5.2.0 - 5.6.x way to implement random_bytes()\n     *\n     * We use conditional statements here to define the function in accordance\n     * to the operating environment. It's a micro-optimization.\n     *\n     * In order of preference:\n     *   1. Use libsodium if available.\n     *   2. fread() /dev/urandom if available (never on Windows)\n     *   3. mcrypt_create_iv($bytes, MCRYPT_DEV_URANDOM)\n     *   4. COM('CAPICOM.Utilities.1')->GetRandom()\n     *\n     * See RATIONALE.md for our reasoning behind this particular order\n     */",
              "line": 62,
              "filePos": 2117,
              "tokenPos": 172,
              "endLine": 75,
              "endFilePos": 2664,
              "endTokenPos": 172
            }
          ],
          "endLine": 83
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_Identical",
          "left": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "DIRECTORY_SEPARATOR"
              ],
              "attributes": {
                "startLine": 88,
                "endLine": 88
              }
            },
            "attributes": {
              "startLine": 88,
              "endLine": 88
            }
          },
          "right": {
            "nodeType": "Scalar_String",
            "value": "/",
            "attributes": {
              "startLine": 88,
              "endLine": 88,
              "kind": 1
            }
          },
          "attributes": {
            "startLine": 88,
            "endLine": 88
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompatUrandom",
                "attributes": {
                  "startLine": 91,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// DIRECTORY_SEPARATOR === '/' on Unix-like OSes -- this is a fast\n",
                      "line": 89,
                      "filePos": 3176,
                      "tokenPos": 258,
                      "endLine": 90,
                      "endFilePos": 3242,
                      "endTokenPos": 258
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// way to exclude Windows.\n",
                      "line": 90,
                      "filePos": 3251,
                      "tokenPos": 260,
                      "endLine": 91,
                      "endFilePos": 3277,
                      "endTokenPos": 260
                    }
                  ],
                  "endLine": 91
                }
              },
              "expr": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "true"
                  ],
                  "attributes": {
                    "startLine": 91,
                    "endLine": 91
                  }
                },
                "attributes": {
                  "startLine": 91,
                  "endLine": 91
                }
              },
              "attributes": {
                "startLine": 91,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// DIRECTORY_SEPARATOR === '/' on Unix-like OSes -- this is a fast\n",
                    "line": 89,
                    "filePos": 3176,
                    "tokenPos": 258,
                    "endLine": 90,
                    "endFilePos": 3242,
                    "endTokenPos": 258
                  },
                  {
                    "nodeType": "Comment",
                    "text": "// way to exclude Windows.\n",
                    "line": 90,
                    "filePos": 3251,
                    "tokenPos": 260,
                    "endLine": 91,
                    "endFilePos": 3277,
                    "endTokenPos": 260
                  }
                ],
                "endLine": 91
              }
            },
            "attributes": {
              "startLine": 91,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// DIRECTORY_SEPARATOR === '/' on Unix-like OSes -- this is a fast\n",
                  "line": 89,
                  "filePos": 3176,
                  "tokenPos": 258,
                  "endLine": 90,
                  "endFilePos": 3242,
                  "endTokenPos": 258
                },
                {
                  "nodeType": "Comment",
                  "text": "// way to exclude Windows.\n",
                  "line": 90,
                  "filePos": 3251,
                  "tokenPos": 260,
                  "endLine": 91,
                  "endFilePos": 3277,
                  "endTokenPos": 260
                }
              ],
              "endLine": 91
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompat_basedir",
                "attributes": {
                  "startLine": 92,
                  "endLine": 92
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "ini_get"
                  ],
                  "attributes": {
                    "startLine": 92,
                    "endLine": 92
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "open_basedir",
                      "attributes": {
                        "startLine": 92,
                        "endLine": 92,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 92,
                      "endLine": 92
                    }
                  }
                ],
                "attributes": {
                  "startLine": 92,
                  "endLine": 92
                }
              },
              "attributes": {
                "startLine": 92,
                "endLine": 92
              }
            },
            "attributes": {
              "startLine": 92,
              "endLine": 92
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BooleanNot",
              "expr": {
                "nodeType": "Expr_Empty",
                "expr": {
                  "nodeType": "Expr_Variable",
                  "name": "RandomCompat_basedir",
                  "attributes": {
                    "startLine": 94,
                    "endLine": 94
                  }
                },
                "attributes": {
                  "startLine": 94,
                  "endLine": 94
                }
              },
              "attributes": {
                "startLine": 94,
                "endLine": 94
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "RandomCompat_open_basedir",
                    "attributes": {
                      "startLine": 95,
                      "endLine": 95
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "explode"
                      ],
                      "attributes": {
                        "startLine": 95,
                        "endLine": 95
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_ConstFetch",
                          "name": {
                            "nodeType": "Name",
                            "parts": [
                              "PATH_SEPARATOR"
                            ],
                            "attributes": {
                              "startLine": 96,
                              "endLine": 96
                            }
                          },
                          "attributes": {
                            "startLine": 96,
                            "endLine": 96
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 96,
                          "endLine": 96
                        }
                      },
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_FuncCall",
                          "name": {
                            "nodeType": "Name",
                            "parts": [
                              "strtolower"
                            ],
                            "attributes": {
                              "startLine": 97,
                              "endLine": 97
                            }
                          },
                          "args": [
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Expr_Variable",
                                "name": "RandomCompat_basedir",
                                "attributes": {
                                  "startLine": 97,
                                  "endLine": 97
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 97,
                                "endLine": 97
                              }
                            }
                          ],
                          "attributes": {
                            "startLine": 97,
                            "endLine": 97
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 97,
                          "endLine": 97
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 95,
                      "endLine": 98
                    }
                  },
                  "attributes": {
                    "startLine": 95,
                    "endLine": 98
                  }
                },
                "attributes": {
                  "startLine": 95,
                  "endLine": 98
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "RandomCompatUrandom",
                    "attributes": {
                      "startLine": 99,
                      "endLine": 99
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_BinaryOp_NotIdentical",
                    "left": {
                      "nodeType": "Expr_Array",
                      "items": [],
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99,
                        "kind": 1
                      }
                    },
                    "right": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "array_intersect"
                        ],
                        "attributes": {
                          "startLine": 99,
                          "endLine": 99
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Array",
                            "items": [
                              {
                                "nodeType": "Expr_ArrayItem",
                                "key": null,
                                "value": {
                                  "nodeType": "Scalar_String",
                                  "value": "/dev",
                                  "attributes": {
                                    "startLine": 100,
                                    "endLine": 100,
                                    "kind": 1
                                  }
                                },
                                "byRef": false,
                                "unpack": false,
                                "attributes": {
                                  "startLine": 100,
                                  "endLine": 100
                                }
                              },
                              {
                                "nodeType": "Expr_ArrayItem",
                                "key": null,
                                "value": {
                                  "nodeType": "Scalar_String",
                                  "value": "/dev/",
                                  "attributes": {
                                    "startLine": 100,
                                    "endLine": 100,
                                    "kind": 1
                                  }
                                },
                                "byRef": false,
                                "unpack": false,
                                "attributes": {
                                  "startLine": 100,
                                  "endLine": 100
                                }
                              },
                              {
                                "nodeType": "Expr_ArrayItem",
                                "key": null,
                                "value": {
                                  "nodeType": "Scalar_String",
                                  "value": "/dev/urandom",
                                  "attributes": {
                                    "startLine": 100,
                                    "endLine": 100,
                                    "kind": 1
                                  }
                                },
                                "byRef": false,
                                "unpack": false,
                                "attributes": {
                                  "startLine": 100,
                                  "endLine": 100
                                }
                              }
                            ],
                            "attributes": {
                              "startLine": 100,
                              "endLine": 100,
                              "kind": 1
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 100,
                            "endLine": 100
                          }
                        },
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Variable",
                            "name": "RandomCompat_open_basedir",
                            "attributes": {
                              "startLine": 101,
                              "endLine": 101
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 101,
                            "endLine": 101
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 99,
                        "endLine": 102
                      }
                    },
                    "attributes": {
                      "startLine": 99,
                      "endLine": 102
                    }
                  },
                  "attributes": {
                    "startLine": 99,
                    "endLine": 102
                  }
                },
                "attributes": {
                  "startLine": 99,
                  "endLine": 102
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "RandomCompat_open_basedir",
                    "attributes": {
                      "startLine": 103,
                      "endLine": 103
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_ConstFetch",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "null"
                      ],
                      "attributes": {
                        "startLine": 103,
                        "endLine": 103
                      }
                    },
                    "attributes": {
                      "startLine": 103,
                      "endLine": 103
                    }
                  },
                  "attributes": {
                    "startLine": 103,
                    "endLine": 103
                  }
                },
                "attributes": {
                  "startLine": 103,
                  "endLine": 103
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 94,
              "endLine": 104
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_BooleanAnd",
              "left": {
                "nodeType": "Expr_BinaryOp_BooleanAnd",
                "left": {
                  "nodeType": "Expr_BooleanNot",
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "is_callable"
                      ],
                      "attributes": {
                        "startLine": 107,
                        "endLine": 107
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Scalar_String",
                          "value": "random_bytes",
                          "attributes": {
                            "startLine": 107,
                            "endLine": 107,
                            "kind": 1
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 107,
                          "endLine": 107
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 107,
                      "endLine": 107
                    }
                  },
                  "attributes": {
                    "startLine": 107,
                    "endLine": 107
                  }
                },
                "right": {
                  "nodeType": "Expr_Variable",
                  "name": "RandomCompatUrandom",
                  "attributes": {
                    "startLine": 109,
                    "endLine": 109
                  }
                },
                "attributes": {
                  "startLine": 107,
                  "endLine": 109
                }
              },
              "right": {
                "nodeType": "Expr_ErrorSuppress",
                "expr": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "is_readable"
                    ],
                    "attributes": {
                      "startLine": 111,
                      "endLine": 111
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "/dev/urandom",
                        "attributes": {
                          "startLine": 111,
                          "endLine": 111,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 111,
                        "endLine": 111
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 111,
                    "endLine": 111
                  }
                },
                "attributes": {
                  "startLine": 111,
                  "endLine": 111
                }
              },
              "attributes": {
                "startLine": 107,
                "endLine": 111
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Include",
                  "expr": {
                    "nodeType": "Expr_BinaryOp_Concat",
                    "left": {
                      "nodeType": "Expr_Variable",
                      "name": "RandomCompatDIR",
                      "attributes": {
                        "startLine": 120,
                        "endLine": 120
                      }
                    },
                    "right": {
                      "nodeType": "Scalar_String",
                      "value": "/random_bytes_dev_urandom.php",
                      "attributes": {
                        "startLine": 120,
                        "endLine": 120,
                        "kind": 1
                      }
                    },
                    "attributes": {
                      "startLine": 120,
                      "endLine": 120
                    }
                  },
                  "type": 4,
                  "attributes": {
                    "startLine": 120,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "// Error suppression on is_readable() in case of an open_basedir\n",
                        "line": 113,
                        "filePos": 3985,
                        "tokenPos": 376,
                        "endLine": 114,
                        "endFilePos": 4049,
                        "endTokenPos": 376
                      },
                      {
                        "nodeType": "Comment",
                        "text": "// or safe_mode failure. All we care about is whether or not we\n",
                        "line": 114,
                        "filePos": 4062,
                        "tokenPos": 378,
                        "endLine": 115,
                        "endFilePos": 4125,
                        "endTokenPos": 378
                      },
                      {
                        "nodeType": "Comment",
                        "text": "// can read it at this point. If the PHP environment is going to\n",
                        "line": 115,
                        "filePos": 4138,
                        "tokenPos": 380,
                        "endLine": 116,
                        "endFilePos": 4202,
                        "endTokenPos": 380
                      },
                      {
                        "nodeType": "Comment",
                        "text": "// panic over trying to see if the file can be read in the first\n",
                        "line": 116,
                        "filePos": 4215,
                        "tokenPos": 382,
                        "endLine": 117,
                        "endFilePos": 4279,
                        "endTokenPos": 382
                      },
                      {
                        "nodeType": "Comment",
                        "text": "// place, that is not helpful to us here.\n",
                        "line": 117,
                        "filePos": 4292,
                        "tokenPos": 384,
                        "endLine": 118,
                        "endFilePos": 4333,
                        "endTokenPos": 384
                      },
                      {
                        "nodeType": "Comment",
                        "text": "// See random_bytes_dev_urandom.php\n",
                        "line": 119,
                        "filePos": 4347,
                        "tokenPos": 386,
                        "endLine": 120,
                        "endFilePos": 4382,
                        "endTokenPos": 386
                      }
                    ],
                    "endLine": 120
                  }
                },
                "attributes": {
                  "startLine": 120,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Error suppression on is_readable() in case of an open_basedir\n",
                      "line": 113,
                      "filePos": 3985,
                      "tokenPos": 376,
                      "endLine": 114,
                      "endFilePos": 4049,
                      "endTokenPos": 376
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// or safe_mode failure. All we care about is whether or not we\n",
                      "line": 114,
                      "filePos": 4062,
                      "tokenPos": 378,
                      "endLine": 115,
                      "endFilePos": 4125,
                      "endTokenPos": 378
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// can read it at this point. If the PHP environment is going to\n",
                      "line": 115,
                      "filePos": 4138,
                      "tokenPos": 380,
                      "endLine": 116,
                      "endFilePos": 4202,
                      "endTokenPos": 380
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// panic over trying to see if the file can be read in the first\n",
                      "line": 116,
                      "filePos": 4215,
                      "tokenPos": 382,
                      "endLine": 117,
                      "endFilePos": 4279,
                      "endTokenPos": 382
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// place, that is not helpful to us here.\n",
                      "line": 117,
                      "filePos": 4292,
                      "tokenPos": 384,
                      "endLine": 118,
                      "endFilePos": 4333,
                      "endTokenPos": 384
                    },
                    {
                      "nodeType": "Comment",
                      "text": "// See random_bytes_dev_urandom.php\n",
                      "line": 119,
                      "filePos": 4347,
                      "tokenPos": 386,
                      "endLine": 120,
                      "endFilePos": 4382,
                      "endTokenPos": 386
                    }
                  ],
                  "endLine": 120
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 106,
              "endLine": 121
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompat_basedir",
                "attributes": {
                  "startLine": 123,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Unset variables after use\n",
                      "line": 122,
                      "filePos": 4478,
                      "tokenPos": 399,
                      "endLine": 123,
                      "endFilePos": 4506,
                      "endTokenPos": 399
                    }
                  ],
                  "endLine": 123
                }
              },
              "expr": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "null"
                  ],
                  "attributes": {
                    "startLine": 123,
                    "endLine": 123
                  }
                },
                "attributes": {
                  "startLine": 123,
                  "endLine": 123
                }
              },
              "attributes": {
                "startLine": 123,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Unset variables after use\n",
                    "line": 122,
                    "filePos": 4478,
                    "tokenPos": 399,
                    "endLine": 123,
                    "endFilePos": 4506,
                    "endTokenPos": 399
                  }
                ],
                "endLine": 123
              }
            },
            "attributes": {
              "startLine": 123,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Unset variables after use\n",
                  "line": 122,
                  "filePos": 4478,
                  "tokenPos": 399,
                  "endLine": 123,
                  "endFilePos": 4506,
                  "endTokenPos": 399
                }
              ],
              "endLine": 123
            }
          }
        ],
        "elseifs": [],
        "else": {
          "nodeType": "Stmt_Else",
          "stmts": [
            {
              "nodeType": "Stmt_Expression",
              "expr": {
                "nodeType": "Expr_Assign",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "RandomCompatUrandom",
                  "attributes": {
                    "startLine": 125,
                    "endLine": 125
                  }
                },
                "expr": {
                  "nodeType": "Expr_ConstFetch",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "false"
                    ],
                    "attributes": {
                      "startLine": 125,
                      "endLine": 125
                    }
                  },
                  "attributes": {
                    "startLine": 125,
                    "endLine": 125
                  }
                },
                "attributes": {
                  "startLine": 125,
                  "endLine": 125
                }
              },
              "attributes": {
                "startLine": 125,
                "endLine": 125
              }
            }
          ],
          "attributes": {
            "startLine": 124,
            "endLine": 126
          }
        },
        "attributes": {
          "startLine": 88,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n     * Reading directly from /dev/urandom:\n     */",
              "line": 85,
              "filePos": 3074,
              "tokenPos": 244,
              "endLine": 87,
              "endFilePos": 3127,
              "endTokenPos": 244
            }
          ],
          "endLine": 126
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_BooleanAnd",
          "left": {
            "nodeType": "Expr_BinaryOp_BooleanAnd",
            "left": {
              "nodeType": "Expr_BinaryOp_BooleanAnd",
              "left": {
                "nodeType": "Expr_BooleanNot",
                "expr": {
                  "nodeType": "Expr_FuncCall",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "is_callable"
                    ],
                    "attributes": {
                      "startLine": 147,
                      "endLine": 147
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "random_bytes",
                        "attributes": {
                          "startLine": 147,
                          "endLine": 147,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 147,
                        "endLine": 147
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 147,
                    "endLine": 147
                  }
                },
                "attributes": {
                  "startLine": 147,
                  "endLine": 147
                }
              },
              "right": {
                "nodeType": "Expr_BinaryOp_BooleanOr",
                "left": {
                  "nodeType": "Expr_BinaryOp_Identical",
                  "left": {
                    "nodeType": "Expr_ConstFetch",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "DIRECTORY_SEPARATOR"
                      ],
                      "attributes": {
                        "startLine": 150,
                        "endLine": 150
                      }
                    },
                    "attributes": {
                      "startLine": 150,
                      "endLine": 150
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_String",
                    "value": "/",
                    "attributes": {
                      "startLine": 150,
                      "endLine": 150,
                      "kind": 1
                    }
                  },
                  "attributes": {
                    "startLine": 150,
                    "endLine": 150
                  }
                },
                "right": {
                  "nodeType": "Expr_BinaryOp_GreaterOrEqual",
                  "left": {
                    "nodeType": "Expr_ConstFetch",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "PHP_VERSION_ID"
                      ],
                      "attributes": {
                        "startLine": 150,
                        "endLine": 150
                      }
                    },
                    "attributes": {
                      "startLine": 150,
                      "endLine": 150
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 50307,
                    "attributes": {
                      "startLine": 150,
                      "endLine": 150,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 150,
                    "endLine": 150
                  }
                },
                "attributes": {
                  "startLine": 150,
                  "endLine": 150
                }
              },
              "attributes": {
                "startLine": 147,
                "endLine": 150
              }
            },
            "right": {
              "nodeType": "Expr_BinaryOp_BooleanOr",
              "left": {
                "nodeType": "Expr_BinaryOp_NotIdentical",
                "left": {
                  "nodeType": "Expr_ConstFetch",
                  "name": {
                    "nodeType": "Name",
                    "parts": [
                      "DIRECTORY_SEPARATOR"
                    ],
                    "attributes": {
                      "startLine": 155,
                      "endLine": 155
                    }
                  },
                  "attributes": {
                    "startLine": 155,
                    "endLine": 155
                  }
                },
                "right": {
                  "nodeType": "Scalar_String",
                  "value": "/",
                  "attributes": {
                    "startLine": 155,
                    "endLine": 155,
                    "kind": 1
                  }
                },
                "attributes": {
                  "startLine": 155,
                  "endLine": 155
                }
              },
              "right": {
                "nodeType": "Expr_BinaryOp_BooleanOr",
                "left": {
                  "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                  "left": {
                    "nodeType": "Expr_ConstFetch",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "PHP_VERSION_ID"
                      ],
                      "attributes": {
                        "startLine": 156,
                        "endLine": 156
                      }
                    },
                    "attributes": {
                      "startLine": 156,
                      "endLine": 156
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 50609,
                    "attributes": {
                      "startLine": 156,
                      "endLine": 156,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 156,
                    "endLine": 156
                  }
                },
                "right": {
                  "nodeType": "Expr_BinaryOp_GreaterOrEqual",
                  "left": {
                    "nodeType": "Expr_ConstFetch",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "PHP_VERSION_ID"
                      ],
                      "attributes": {
                        "startLine": 156,
                        "endLine": 156
                      }
                    },
                    "attributes": {
                      "startLine": 156,
                      "endLine": 156
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 50613,
                    "attributes": {
                      "startLine": 156,
                      "endLine": 156,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 156,
                    "endLine": 156
                  }
                },
                "attributes": {
                  "startLine": 156,
                  "endLine": 156
                }
              },
              "attributes": {
                "startLine": 155,
                "endLine": 156
              }
            },
            "attributes": {
              "startLine": 147,
              "endLine": 157
            }
          },
          "right": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "extension_loaded"
              ],
              "attributes": {
                "startLine": 159,
                "endLine": 159
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "mcrypt",
                  "attributes": {
                    "startLine": 159,
                    "endLine": 159,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 159,
                  "endLine": 159
                }
              }
            ],
            "attributes": {
              "startLine": 159,
              "endLine": 159
            }
          },
          "attributes": {
            "startLine": 147,
            "endLine": 159
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Include",
              "expr": {
                "nodeType": "Expr_BinaryOp_Concat",
                "left": {
                  "nodeType": "Expr_Variable",
                  "name": "RandomCompatDIR",
                  "attributes": {
                    "startLine": 162,
                    "endLine": 162
                  }
                },
                "right": {
                  "nodeType": "Scalar_String",
                  "value": "/random_bytes_mcrypt.php",
                  "attributes": {
                    "startLine": 162,
                    "endLine": 162,
                    "kind": 1
                  }
                },
                "attributes": {
                  "startLine": 162,
                  "endLine": 162
                }
              },
              "type": 4,
              "attributes": {
                "startLine": 162,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// See random_bytes_mcrypt.php\n",
                    "line": 161,
                    "filePos": 5855,
                    "tokenPos": 500,
                    "endLine": 162,
                    "endFilePos": 5885,
                    "endTokenPos": 500
                  }
                ],
                "endLine": 162
              }
            },
            "attributes": {
              "startLine": 162,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// See random_bytes_mcrypt.php\n",
                  "line": 161,
                  "filePos": 5855,
                  "tokenPos": 500,
                  "endLine": 162,
                  "endFilePos": 5885,
                  "endTokenPos": 500
                }
              ],
              "endLine": 162
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 146,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n     * mcrypt_create_iv()\n     *\n     * We only want to use mcypt_create_iv() if:\n     *\n     * - random_bytes() hasn't already been defined\n     * - the mcrypt extensions is loaded\n     * - One of these two conditions is true:\n     *   - We're on Windows (DIRECTORY_SEPARATOR !== '/')\n     *   - We're not on Windows and /dev/urandom is readabale\n     *     (i.e. we're not in a chroot jail)\n     * - Special case:\n     *   - If we're not on Windows, but the PHP version is between\n     *     5.6.10 and 5.6.12, we don't want to use mcrypt. It will\n     *     hang indefinitely. This is bad.\n     *   - If we're on Windows, we want to use PHP >= 5.3.7 or else\n     *     we get insufficient entropy errors.\n     */",
              "line": 128,
              "filePos": 4607,
              "tokenPos": 423,
              "endLine": 145,
              "endFilePos": 5325,
              "endTokenPos": 423
            }
          ],
          "endLine": 163
        }
      },
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Assign",
          "var": {
            "nodeType": "Expr_Variable",
            "name": "RandomCompatUrandom",
            "attributes": {
              "startLine": 164,
              "endLine": 164
            }
          },
          "expr": {
            "nodeType": "Expr_ConstFetch",
            "name": {
              "nodeType": "Name",
              "parts": [
                "null"
              ],
              "attributes": {
                "startLine": 164,
                "endLine": 164
              }
            },
            "attributes": {
              "startLine": 164,
              "endLine": 164
            }
          },
          "attributes": {
            "startLine": 164,
            "endLine": 164
          }
        },
        "attributes": {
          "startLine": 164,
          "endLine": 164
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BinaryOp_BooleanAnd",
          "left": {
            "nodeType": "Expr_BinaryOp_BooleanAnd",
            "left": {
              "nodeType": "Expr_BooleanNot",
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "is_callable"
                  ],
                  "attributes": {
                    "startLine": 171,
                    "endLine": 171
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "random_bytes",
                      "attributes": {
                        "startLine": 171,
                        "endLine": 171,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 171,
                      "endLine": 171
                    }
                  }
                ],
                "attributes": {
                  "startLine": 171,
                  "endLine": 171
                }
              },
              "attributes": {
                "startLine": 171,
                "endLine": 171
              }
            },
            "right": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "extension_loaded"
                ],
                "attributes": {
                  "startLine": 173,
                  "endLine": 173
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "com_dotnet",
                    "attributes": {
                      "startLine": 173,
                      "endLine": 173,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 173,
                    "endLine": 173
                  }
                }
              ],
              "attributes": {
                "startLine": 173,
                "endLine": 173
              }
            },
            "attributes": {
              "startLine": 171,
              "endLine": 173
            }
          },
          "right": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "class_exists"
              ],
              "attributes": {
                "startLine": 175,
                "endLine": 175
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "COM",
                  "attributes": {
                    "startLine": 175,
                    "endLine": 175,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 175,
                  "endLine": 175
                }
              }
            ],
            "attributes": {
              "startLine": 175,
              "endLine": 175
            }
          },
          "attributes": {
            "startLine": 171,
            "endLine": 175
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompat_disabled_classes",
                "attributes": {
                  "startLine": 177,
                  "endLine": 177
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "preg_split"
                  ],
                  "attributes": {
                    "startLine": 177,
                    "endLine": 177
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "#\\s*,\\s*#",
                      "attributes": {
                        "startLine": 178,
                        "endLine": 178,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 178,
                      "endLine": 178
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "strtolower"
                        ],
                        "attributes": {
                          "startLine": 179,
                          "endLine": 179
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_FuncCall",
                            "name": {
                              "nodeType": "Name",
                              "parts": [
                                "ini_get"
                              ],
                              "attributes": {
                                "startLine": 179,
                                "endLine": 179
                              }
                            },
                            "args": [
                              {
                                "nodeType": "Arg",
                                "value": {
                                  "nodeType": "Scalar_String",
                                  "value": "disable_classes",
                                  "attributes": {
                                    "startLine": 179,
                                    "endLine": 179,
                                    "kind": 1
                                  }
                                },
                                "byRef": false,
                                "unpack": false,
                                "attributes": {
                                  "startLine": 179,
                                  "endLine": 179
                                }
                              }
                            ],
                            "attributes": {
                              "startLine": 179,
                              "endLine": 179
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 179,
                            "endLine": 179
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 179,
                        "endLine": 179
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 179,
                      "endLine": 179
                    }
                  }
                ],
                "attributes": {
                  "startLine": 177,
                  "endLine": 180
                }
              },
              "attributes": {
                "startLine": 177,
                "endLine": 180
              }
            },
            "attributes": {
              "startLine": 177,
              "endLine": 180
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BooleanNot",
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "in_array"
                  ],
                  "attributes": {
                    "startLine": 182,
                    "endLine": 182
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "com",
                      "attributes": {
                        "startLine": 182,
                        "endLine": 182,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 182,
                      "endLine": 182
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "RandomCompat_disabled_classes",
                      "attributes": {
                        "startLine": 182,
                        "endLine": 182
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 182,
                      "endLine": 182
                    }
                  }
                ],
                "attributes": {
                  "startLine": 182,
                  "endLine": 182
                }
              },
              "attributes": {
                "startLine": 182,
                "endLine": 182
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_TryCatch",
                "stmts": [
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Assign",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "RandomCompatCOMtest",
                        "attributes": {
                          "startLine": 184,
                          "endLine": 184
                        }
                      },
                      "expr": {
                        "nodeType": "Expr_New",
                        "class": {
                          "nodeType": "Name",
                          "parts": [
                            "COM"
                          ],
                          "attributes": {
                            "startLine": 184,
                            "endLine": 184
                          }
                        },
                        "args": [
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Scalar_String",
                              "value": "CAPICOM.Utilities.1",
                              "attributes": {
                                "startLine": 184,
                                "endLine": 184,
                                "kind": 1
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 184,
                              "endLine": 184
                            }
                          }
                        ],
                        "attributes": {
                          "startLine": 184,
                          "endLine": 184
                        }
                      },
                      "attributes": {
                        "startLine": 184,
                        "endLine": 184
                      }
                    },
                    "attributes": {
                      "startLine": 184,
                      "endLine": 184
                    }
                  },
                  {
                    "nodeType": "Stmt_If",
                    "cond": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "method_exists"
                        ],
                        "attributes": {
                          "startLine": 185,
                          "endLine": 185
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Variable",
                            "name": "RandomCompatCOMtest",
                            "attributes": {
                              "startLine": 185,
                              "endLine": 185
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 185,
                            "endLine": 185
                          }
                        },
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Scalar_String",
                            "value": "GetRandom",
                            "attributes": {
                              "startLine": 185,
                              "endLine": 185,
                              "kind": 1
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 185,
                            "endLine": 185
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 185,
                        "endLine": 185
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Include",
                          "expr": {
                            "nodeType": "Expr_BinaryOp_Concat",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "RandomCompatDIR",
                              "attributes": {
                                "startLine": 187,
                                "endLine": 187
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_String",
                              "value": "/random_bytes_com_dotnet.php",
                              "attributes": {
                                "startLine": 187,
                                "endLine": 187,
                                "kind": 1
                              }
                            },
                            "attributes": {
                              "startLine": 187,
                              "endLine": 187
                            }
                          },
                          "type": 4,
                          "attributes": {
                            "startLine": 187,
                            "comments": [
                              {
                                "nodeType": "Comment",
                                "text": "// See random_bytes_com_dotnet.php\n",
                                "line": 186,
                                "filePos": 6634,
                                "tokenPos": 616,
                                "endLine": 187,
                                "endFilePos": 6668,
                                "endTokenPos": 616
                              }
                            ],
                            "endLine": 187
                          }
                        },
                        "attributes": {
                          "startLine": 187,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// See random_bytes_com_dotnet.php\n",
                              "line": 186,
                              "filePos": 6634,
                              "tokenPos": 616,
                              "endLine": 187,
                              "endFilePos": 6668,
                              "endTokenPos": 616
                            }
                          ],
                          "endLine": 187
                        }
                      }
                    ],
                    "elseifs": [],
                    "else": null,
                    "attributes": {
                      "startLine": 185,
                      "endLine": 188
                    }
                  }
                ],
                "catches": [
                  {
                    "nodeType": "Stmt_Catch",
                    "types": [
                      {
                        "nodeType": "Name",
                        "parts": [
                          "com_exception"
                        ],
                        "attributes": {
                          "startLine": 189,
                          "endLine": 189
                        }
                      }
                    ],
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "e",
                      "attributes": {
                        "startLine": 189,
                        "endLine": 189
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Nop",
                        "attributes": {
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// Don't try to use it.\n",
                              "line": 190,
                              "filePos": 6828,
                              "tokenPos": 641,
                              "endLine": 191,
                              "endFilePos": 6851,
                              "endTokenPos": 641
                            }
                          ],
                          "startLine": 191,
                          "endLine": 191,
                          "startFilePos": 6852,
                          "endFilePos": 6851,
                          "startTokenPos": 642,
                          "endTokenPos": 641
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 189,
                      "endLine": 191
                    }
                  }
                ],
                "finally": null,
                "attributes": {
                  "startLine": 183,
                  "endLine": 191
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 182,
              "endLine": 192
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompat_disabled_classes",
                "attributes": {
                  "startLine": 193,
                  "endLine": 193
                }
              },
              "expr": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "null"
                  ],
                  "attributes": {
                    "startLine": 193,
                    "endLine": 193
                  }
                },
                "attributes": {
                  "startLine": 193,
                  "endLine": 193
                }
              },
              "attributes": {
                "startLine": 193,
                "endLine": 193
              }
            },
            "attributes": {
              "startLine": 193,
              "endLine": 193
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "RandomCompatCOMtest",
                "attributes": {
                  "startLine": 194,
                  "endLine": 194
                }
              },
              "expr": {
                "nodeType": "Expr_ConstFetch",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "null"
                  ],
                  "attributes": {
                    "startLine": 194,
                    "endLine": 194
                  }
                },
                "attributes": {
                  "startLine": 194,
                  "endLine": 194
                }
              },
              "attributes": {
                "startLine": 194,
                "endLine": 194
              }
            },
            "attributes": {
              "startLine": 194,
              "endLine": 194
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 170,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n     * This is a Windows-specific fallback, for when the mcrypt extension\n     * isn't loaded.\n     */",
              "line": 166,
              "filePos": 5998,
              "tokenPos": 520,
              "endLine": 169,
              "endFilePos": 6103,
              "endTokenPos": 520
            }
          ],
          "endLine": 195
        }
      },
      {
        "nodeType": "Stmt_If",
        "cond": {
          "nodeType": "Expr_BooleanNot",
          "expr": {
            "nodeType": "Expr_FuncCall",
            "name": {
              "nodeType": "Name",
              "parts": [
                "is_callable"
              ],
              "attributes": {
                "startLine": 200,
                "endLine": 200
              }
            },
            "args": [
              {
                "nodeType": "Arg",
                "value": {
                  "nodeType": "Scalar_String",
                  "value": "random_bytes",
                  "attributes": {
                    "startLine": 200,
                    "endLine": 200,
                    "kind": 1
                  }
                },
                "byRef": false,
                "unpack": false,
                "attributes": {
                  "startLine": 200,
                  "endLine": 200
                }
              }
            ],
            "attributes": {
              "startLine": 200,
              "endLine": 200
            }
          },
          "attributes": {
            "startLine": 200,
            "endLine": 200
          }
        },
        "stmts": [
          {
            "nodeType": "Stmt_Function",
            "byRef": false,
            "name": {
              "nodeType": "Identifier",
              "name": "random_bytes",
              "attributes": {
                "startLine": 209,
                "endLine": 209
              }
            },
            "params": [
              {
                "nodeType": "Param",
                "type": null,
                "byRef": false,
                "variadic": false,
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "length",
                  "attributes": {
                    "startLine": 209,
                    "endLine": 209
                  }
                },
                "default": null,
                "attributes": {
                  "startLine": 209,
                  "endLine": 209
                }
              }
            ],
            "returnType": null,
            "stmts": [
              {
                "nodeType": "Stmt_Unset",
                "vars": [
                  {
                    "nodeType": "Expr_Variable",
                    "name": "length",
                    "attributes": {
                      "startLine": 211,
                      "endLine": 211
                    }
                  }
                ],
                "attributes": {
                  "startLine": 211,
                  "endLine": 211
                }
              },
              {
                "nodeType": "Stmt_Throw",
                "expr": {
                  "nodeType": "Expr_New",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "Exception"
                    ],
                    "attributes": {
                      "startLine": 212,
                      "endLine": 212
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "There is no suitable CSPRNG installed on your system",
                        "attributes": {
                          "startLine": 213,
                          "endLine": 213,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 213,
                        "endLine": 213
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 212,
                    "endLine": 214
                  }
                },
                "attributes": {
                  "startLine": 212,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Suppress \"variable not used\" warnings.\n",
                      "line": 211,
                      "filePos": 7390,
                      "tokenPos": 694,
                      "endLine": 212,
                      "endFilePos": 7431,
                      "endTokenPos": 694
                    }
                  ],
                  "endLine": 214
                }
              }
            ],
            "attributes": {
              "startLine": 209,
              "comments": [
                {
                  "nodeType": "Comment_Doc",
                  "text": "/**\n         * We don't have any more options, so let's throw an exception right now\n         * and hope the developer won't let it fail silently.\n         *\n         * @param mixed $length\n         * @return void\n         * @throws Exception\n         */",
                  "line": 201,
                  "filePos": 7058,
                  "tokenPos": 677,
                  "endLine": 208,
                  "endFilePos": 7311,
                  "endTokenPos": 677
                }
              ],
              "endLine": 215
            }
          }
        ],
        "elseifs": [],
        "else": null,
        "attributes": {
          "startLine": 200,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n     * throw new Exception\n     */",
              "line": 197,
              "filePos": 6971,
              "tokenPos": 663,
              "endLine": 199,
              "endFilePos": 7008,
              "endTokenPos": 663
            }
          ],
          "endLine": 216
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 61,
      "endLine": 217
    }
  },
  {
    "nodeType": "Stmt_If",
    "cond": {
      "nodeType": "Expr_BooleanNot",
      "expr": {
        "nodeType": "Expr_FuncCall",
        "name": {
          "nodeType": "Name",
          "parts": [
            "is_callable"
          ],
          "attributes": {
            "startLine": 219,
            "endLine": 219
          }
        },
        "args": [
          {
            "nodeType": "Arg",
            "value": {
              "nodeType": "Scalar_String",
              "value": "random_int",
              "attributes": {
                "startLine": 219,
                "endLine": 219,
                "kind": 1
              }
            },
            "byRef": false,
            "unpack": false,
            "attributes": {
              "startLine": 219,
              "endLine": 219
            }
          }
        ],
        "attributes": {
          "startLine": 219,
          "endLine": 219
        }
      },
      "attributes": {
        "startLine": 219,
        "endLine": 219
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_Expression",
        "expr": {
          "nodeType": "Expr_Include",
          "expr": {
            "nodeType": "Expr_BinaryOp_Concat",
            "left": {
              "nodeType": "Expr_Variable",
              "name": "RandomCompatDIR",
              "attributes": {
                "startLine": 220,
                "endLine": 220
              }
            },
            "right": {
              "nodeType": "Scalar_String",
              "value": "/random_int.php",
              "attributes": {
                "startLine": 220,
                "endLine": 220,
                "kind": 1
              }
            },
            "attributes": {
              "startLine": 220,
              "endLine": 220
            }
          },
          "type": 4,
          "attributes": {
            "startLine": 220,
            "endLine": 220
          }
        },
        "attributes": {
          "startLine": 220,
          "endLine": 220
        }
      }
    ],
    "elseifs": [],
    "else": null,
    "attributes": {
      "startLine": 219,
      "endLine": 221
    }
  },
  {
    "nodeType": "Stmt_Expression",
    "expr": {
      "nodeType": "Expr_Assign",
      "var": {
        "nodeType": "Expr_Variable",
        "name": "RandomCompatDIR",
        "attributes": {
          "startLine": 223,
          "endLine": 223
        }
      },
      "expr": {
        "nodeType": "Expr_ConstFetch",
        "name": {
          "nodeType": "Name",
          "parts": [
            "null"
          ],
          "attributes": {
            "startLine": 223,
            "endLine": 223
          }
        },
        "attributes": {
          "startLine": 223,
          "endLine": 223
        }
      },
      "attributes": {
        "startLine": 223,
        "endLine": 223
      }
    },
    "attributes": {
      "startLine": 223,
      "endLine": 223
    }
  }
]