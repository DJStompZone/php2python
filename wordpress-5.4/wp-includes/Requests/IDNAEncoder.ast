[
  {
    "nodeType": "Stmt_Class",
    "flags": 0,
    "extends": null,
    "implements": [],
    "name": {
      "nodeType": "Identifier",
      "name": "Requests_IDNAEncoder",
      "attributes": {
        "startLine": 13,
        "endLine": 13
      }
    },
    "stmts": [
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "ACE_PREFIX",
              "attributes": {
                "startLine": 20,
                "endLine": 20
              }
            },
            "value": {
              "nodeType": "Scalar_String",
              "value": "xn--",
              "attributes": {
                "startLine": 20,
                "endLine": 20,
                "kind": 1
              }
            },
            "attributes": {
              "startLine": 20,
              "endLine": 20
            }
          }
        ],
        "attributes": {
          "startLine": 20,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * ACE prefix used for IDNA\n\t *\n\t * @see https://tools.ietf.org/html/rfc3490#section-5\n\t * @var string\n\t */",
              "line": 14,
              "filePos": 317,
              "tokenPos": 10,
              "endLine": 19,
              "endFilePos": 428,
              "endTokenPos": 10
            }
          ],
          "endLine": 20
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_BASE",
              "attributes": {
                "startLine": 28,
                "endLine": 28
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 36,
              "attributes": {
                "startLine": 28,
                "endLine": 28,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 28,
              "endLine": 28
            }
          }
        ],
        "attributes": {
          "startLine": 28,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "/**#@+\n\t * Bootstrap constant for Punycode\n\t *\n\t * @see https://tools.ietf.org/html/rfc3492#section-5\n\t * @var int\n\t */",
              "line": 22,
              "filePos": 460,
              "tokenPos": 21,
              "endLine": 27,
              "endFilePos": 578,
              "endTokenPos": 21
            }
          ],
          "endLine": 28
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_TMIN",
              "attributes": {
                "startLine": 29,
                "endLine": 29
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 1,
              "attributes": {
                "startLine": 29,
                "endLine": 29,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 29,
              "endLine": 29
            }
          }
        ],
        "attributes": {
          "startLine": 29,
          "endLine": 29
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_TMAX",
              "attributes": {
                "startLine": 30,
                "endLine": 30
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 26,
              "attributes": {
                "startLine": 30,
                "endLine": 30,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 30,
              "endLine": 30
            }
          }
        ],
        "attributes": {
          "startLine": 30,
          "endLine": 30
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_SKEW",
              "attributes": {
                "startLine": 31,
                "endLine": 31
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 38,
              "attributes": {
                "startLine": 31,
                "endLine": 31,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 31,
              "endLine": 31
            }
          }
        ],
        "attributes": {
          "startLine": 31,
          "endLine": 31
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_DAMP",
              "attributes": {
                "startLine": 32,
                "endLine": 32
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 700,
              "attributes": {
                "startLine": 32,
                "endLine": 32,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 32,
              "endLine": 32
            }
          }
        ],
        "attributes": {
          "startLine": 32,
          "endLine": 32
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_INITIAL_BIAS",
              "attributes": {
                "startLine": 33,
                "endLine": 33
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 72,
              "attributes": {
                "startLine": 33,
                "endLine": 33,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 33,
              "endLine": 33
            }
          }
        ],
        "attributes": {
          "startLine": 33,
          "endLine": 33
        }
      },
      {
        "nodeType": "Stmt_ClassConst",
        "flags": 0,
        "consts": [
          {
            "nodeType": "Const",
            "name": {
              "nodeType": "Identifier",
              "name": "BOOTSTRAP_INITIAL_N",
              "attributes": {
                "startLine": 34,
                "endLine": 34
              }
            },
            "value": {
              "nodeType": "Scalar_LNumber",
              "value": 128,
              "attributes": {
                "startLine": 34,
                "endLine": 34,
                "kind": 10
              }
            },
            "attributes": {
              "startLine": 34,
              "endLine": 34
            }
          }
        ],
        "attributes": {
          "startLine": 34,
          "endLine": 34
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 9,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "encode",
          "attributes": {
            "startLine": 43,
            "endLine": 43
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 43,
                "endLine": 43
              }
            },
            "default": null,
            "attributes": {
              "startLine": 43,
              "endLine": 43
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "parts",
                "attributes": {
                  "startLine": 44,
                  "endLine": 44
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "explode"
                  ],
                  "attributes": {
                    "startLine": 44,
                    "endLine": 44
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": ".",
                      "attributes": {
                        "startLine": 44,
                        "endLine": 44,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 44,
                      "endLine": 44
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 44,
                        "endLine": 44
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 44,
                      "endLine": 44
                    }
                  }
                ],
                "attributes": {
                  "startLine": 44,
                  "endLine": 44
                }
              },
              "attributes": {
                "startLine": 44,
                "endLine": 44
              }
            },
            "attributes": {
              "startLine": 44,
              "endLine": 44
            }
          },
          {
            "nodeType": "Stmt_Foreach",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "parts",
              "attributes": {
                "startLine": 45,
                "endLine": 45
              }
            },
            "keyVar": null,
            "byRef": true,
            "valueVar": {
              "nodeType": "Expr_Variable",
              "name": "part",
              "attributes": {
                "startLine": 45,
                "endLine": 45
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "part",
                    "attributes": {
                      "startLine": 46,
                      "endLine": 46
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_StaticCall",
                    "class": {
                      "nodeType": "Name",
                      "parts": [
                        "self"
                      ],
                      "attributes": {
                        "startLine": 46,
                        "endLine": 46
                      }
                    },
                    "name": {
                      "nodeType": "Identifier",
                      "name": "to_ascii",
                      "attributes": {
                        "startLine": 46,
                        "endLine": 46
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "part",
                          "attributes": {
                            "startLine": 46,
                            "endLine": 46
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 46,
                          "endLine": 46
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 46,
                      "endLine": 46
                    }
                  },
                  "attributes": {
                    "startLine": 46,
                    "endLine": 46
                  }
                },
                "attributes": {
                  "startLine": 46,
                  "endLine": 46
                }
              }
            ],
            "attributes": {
              "startLine": 45,
              "endLine": 47
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "implode"
                ],
                "attributes": {
                  "startLine": 48,
                  "endLine": 48
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": ".",
                    "attributes": {
                      "startLine": 48,
                      "endLine": 48,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 48,
                    "endLine": 48
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "parts",
                    "attributes": {
                      "startLine": 48,
                      "endLine": 48
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 48,
                    "endLine": 48
                  }
                }
              ],
              "attributes": {
                "startLine": 48,
                "endLine": 48
              }
            },
            "attributes": {
              "startLine": 48,
              "endLine": 48
            }
          }
        ],
        "attributes": {
          "startLine": 43,
          "comments": [
            {
              "nodeType": "Comment",
              "text": "/**#@-*/",
              "line": 35,
              "filePos": 834,
              "tokenPos": 86,
              "endLine": 35,
              "endFilePos": 841,
              "endTokenPos": 86
            },
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Encode a hostname using Punycode\n\t *\n\t * @param string $string Hostname\n\t * @return string Punycode-encoded hostname\n\t */",
              "line": 37,
              "filePos": 845,
              "tokenPos": 88,
              "endLine": 42,
              "endFilePos": 973,
              "endTokenPos": 88
            }
          ],
          "endLine": 49
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 9,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "to_ascii",
          "attributes": {
            "startLine": 62,
            "endLine": 62
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 62,
                "endLine": 62
              }
            },
            "default": null,
            "attributes": {
              "startLine": 62,
              "endLine": 62
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_StaticCall",
              "class": {
                "nodeType": "Name",
                "parts": [
                  "self"
                ],
                "attributes": {
                  "startLine": 64,
                  "endLine": 64
                }
              },
              "name": {
                "nodeType": "Identifier",
                "name": "is_ascii",
                "attributes": {
                  "startLine": 64,
                  "endLine": 64
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "string",
                    "attributes": {
                      "startLine": 64,
                      "endLine": 64
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 64,
                    "endLine": 64
                  }
                }
              ],
              "attributes": {
                "startLine": 64,
                "endLine": 64
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_Smaller",
                  "left": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "strlen"
                      ],
                      "attributes": {
                        "startLine": 66,
                        "endLine": 66
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "string",
                          "attributes": {
                            "startLine": 66,
                            "endLine": 66
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 66,
                          "endLine": 66
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 66,
                      "endLine": 66
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 66,
                      "endLine": 66,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 66,
                    "endLine": 66
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Return",
                    "expr": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 67,
                        "endLine": 67
                      }
                    },
                    "attributes": {
                      "startLine": 67,
                      "endLine": 67
                    }
                  }
                ],
                "elseifs": [],
                "else": null,
                "attributes": {
                  "startLine": 66,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Skip to step 7\n",
                      "line": 65,
                      "filePos": 1889,
                      "tokenPos": 186,
                      "endLine": 66,
                      "endFilePos": 1906,
                      "endTokenPos": 186
                    }
                  ],
                  "endLine": 68
                }
              },
              {
                "nodeType": "Stmt_Throw",
                "expr": {
                  "nodeType": "Expr_New",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "Requests_Exception"
                    ],
                    "attributes": {
                      "startLine": 70,
                      "endLine": 70
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "Provided string is too long",
                        "attributes": {
                          "startLine": 70,
                          "endLine": 70,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 70,
                        "endLine": 70
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "idna.provided_too_long",
                        "attributes": {
                          "startLine": 70,
                          "endLine": 70,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 70,
                        "endLine": 70
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "string",
                        "attributes": {
                          "startLine": 70,
                          "endLine": 70
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 70,
                        "endLine": 70
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 70,
                    "endLine": 70
                  }
                },
                "attributes": {
                  "startLine": 70,
                  "endLine": 70
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 64,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 1: Check if the string is already ASCII\n",
                  "line": 63,
                  "filePos": 1805,
                  "tokenPos": 171,
                  "endLine": 64,
                  "endFilePos": 1852,
                  "endTokenPos": 171
                }
              ],
              "endLine": 71
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "string",
                "attributes": {
                  "startLine": 74,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Step 2: nameprep\n",
                      "line": 73,
                      "filePos": 2070,
                      "tokenPos": 228,
                      "endLine": 74,
                      "endFilePos": 2089,
                      "endTokenPos": 228
                    }
                  ],
                  "endLine": 74
                }
              },
              "expr": {
                "nodeType": "Expr_StaticCall",
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "self"
                  ],
                  "attributes": {
                    "startLine": 74,
                    "endLine": 74
                  }
                },
                "name": {
                  "nodeType": "Identifier",
                  "name": "nameprep",
                  "attributes": {
                    "startLine": 74,
                    "endLine": 74
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 74,
                        "endLine": 74
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 74,
                      "endLine": 74
                    }
                  }
                ],
                "attributes": {
                  "startLine": 74,
                  "endLine": 74
                }
              },
              "attributes": {
                "startLine": 74,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Step 2: nameprep\n",
                    "line": 73,
                    "filePos": 2070,
                    "tokenPos": 228,
                    "endLine": 74,
                    "endFilePos": 2089,
                    "endTokenPos": 228
                  }
                ],
                "endLine": 74
              }
            },
            "attributes": {
              "startLine": 74,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 2: nameprep\n",
                  "line": 73,
                  "filePos": 2070,
                  "tokenPos": 228,
                  "endLine": 74,
                  "endFilePos": 2089,
                  "endTokenPos": 228
                }
              ],
              "endLine": 74
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_StaticCall",
              "class": {
                "nodeType": "Name",
                "parts": [
                  "self"
                ],
                "attributes": {
                  "startLine": 78,
                  "endLine": 78
                }
              },
              "name": {
                "nodeType": "Identifier",
                "name": "is_ascii",
                "attributes": {
                  "startLine": 78,
                  "endLine": 78
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "string",
                    "attributes": {
                      "startLine": 78,
                      "endLine": 78
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 78,
                    "endLine": 78
                  }
                }
              ],
              "attributes": {
                "startLine": 78,
                "endLine": 78
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_Smaller",
                  "left": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "strlen"
                      ],
                      "attributes": {
                        "startLine": 80,
                        "endLine": 80
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "string",
                          "attributes": {
                            "startLine": 80,
                            "endLine": 80
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 80,
                          "endLine": 80
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 80,
                      "endLine": 80
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 64,
                    "attributes": {
                      "startLine": 80,
                      "endLine": 80,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 80,
                    "endLine": 80
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Return",
                    "expr": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 81,
                        "endLine": 81
                      }
                    },
                    "attributes": {
                      "startLine": 81,
                      "endLine": 81
                    }
                  }
                ],
                "elseifs": [],
                "else": null,
                "attributes": {
                  "startLine": 80,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Skip to step 7\n",
                      "line": 79,
                      "filePos": 2251,
                      "tokenPos": 259,
                      "endLine": 80,
                      "endFilePos": 2268,
                      "endTokenPos": 259
                    }
                  ],
                  "endLine": 82
                }
              },
              {
                "nodeType": "Stmt_Throw",
                "expr": {
                  "nodeType": "Expr_New",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "Requests_Exception"
                    ],
                    "attributes": {
                      "startLine": 84,
                      "endLine": 84
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "Prepared string is too long",
                        "attributes": {
                          "startLine": 84,
                          "endLine": 84,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 84,
                        "endLine": 84
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "idna.prepared_too_long",
                        "attributes": {
                          "startLine": 84,
                          "endLine": 84,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 84,
                        "endLine": 84
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "string",
                        "attributes": {
                          "startLine": 84,
                          "endLine": 84
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 84,
                        "endLine": 84
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 84,
                    "endLine": 84
                  }
                },
                "attributes": {
                  "startLine": 84,
                  "endLine": 84
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 78,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 3: UseSTD3ASCIIRules is false, continue\n",
                  "line": 76,
                  "filePos": 2130,
                  "tokenPos": 242,
                  "endLine": 77,
                  "endFilePos": 2177,
                  "endTokenPos": 242
                },
                {
                  "nodeType": "Comment",
                  "text": "// Step 4: Check if it's ASCII now\n",
                  "line": 77,
                  "filePos": 2180,
                  "tokenPos": 244,
                  "endLine": 78,
                  "endFilePos": 2214,
                  "endTokenPos": 244
                }
              ],
              "endLine": 85
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_Identical",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strpos"
                  ],
                  "attributes": {
                    "startLine": 88,
                    "endLine": 88
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 88,
                        "endLine": 88
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 88,
                      "endLine": 88
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_ClassConstFetch",
                      "class": {
                        "nodeType": "Name",
                        "parts": [
                          "self"
                        ],
                        "attributes": {
                          "startLine": 88,
                          "endLine": 88
                        }
                      },
                      "name": {
                        "nodeType": "Identifier",
                        "name": "ACE_PREFIX",
                        "attributes": {
                          "startLine": 88,
                          "endLine": 88
                        }
                      },
                      "attributes": {
                        "startLine": 88,
                        "endLine": 88
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 88,
                      "endLine": 88
                    }
                  }
                ],
                "attributes": {
                  "startLine": 88,
                  "endLine": 88
                }
              },
              "right": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 88,
                  "endLine": 88,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 88,
                "endLine": 88
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Throw",
                "expr": {
                  "nodeType": "Expr_New",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "Requests_Exception"
                    ],
                    "attributes": {
                      "startLine": 89,
                      "endLine": 89
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "Provided string begins with ACE prefix",
                        "attributes": {
                          "startLine": 89,
                          "endLine": 89,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 89,
                        "endLine": 89
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "idna.provided_is_prefixed",
                        "attributes": {
                          "startLine": 89,
                          "endLine": 89,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 89,
                        "endLine": 89
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "string",
                        "attributes": {
                          "startLine": 89,
                          "endLine": 89
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 89,
                        "endLine": 89
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 89,
                    "endLine": 89
                  }
                },
                "attributes": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 88,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 5: Check ACE prefix\n",
                  "line": 87,
                  "filePos": 2432,
                  "tokenPos": 301,
                  "endLine": 88,
                  "endFilePos": 2459,
                  "endTokenPos": 301
                }
              ],
              "endLine": 90
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "string",
                "attributes": {
                  "startLine": 93,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Step 6: Encode with Punycode\n",
                      "line": 92,
                      "filePos": 2629,
                      "tokenPos": 341,
                      "endLine": 93,
                      "endFilePos": 2660,
                      "endTokenPos": 341
                    }
                  ],
                  "endLine": 93
                }
              },
              "expr": {
                "nodeType": "Expr_StaticCall",
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "self"
                  ],
                  "attributes": {
                    "startLine": 93,
                    "endLine": 93
                  }
                },
                "name": {
                  "nodeType": "Identifier",
                  "name": "punycode_encode",
                  "attributes": {
                    "startLine": 93,
                    "endLine": 93
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 93,
                        "endLine": 93
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 93,
                      "endLine": 93
                    }
                  }
                ],
                "attributes": {
                  "startLine": 93,
                  "endLine": 93
                }
              },
              "attributes": {
                "startLine": 93,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Step 6: Encode with Punycode\n",
                    "line": 92,
                    "filePos": 2629,
                    "tokenPos": 341,
                    "endLine": 93,
                    "endFilePos": 2660,
                    "endTokenPos": 341
                  }
                ],
                "endLine": 93
              }
            },
            "attributes": {
              "startLine": 93,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 6: Encode with Punycode\n",
                  "line": 92,
                  "filePos": 2629,
                  "tokenPos": 341,
                  "endLine": 93,
                  "endFilePos": 2660,
                  "endTokenPos": 341
                }
              ],
              "endLine": 93
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "string",
                "attributes": {
                  "startLine": 96,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Step 7: Prepend ACE prefix\n",
                      "line": 95,
                      "filePos": 2708,
                      "tokenPos": 355,
                      "endLine": 96,
                      "endFilePos": 2737,
                      "endTokenPos": 355
                    }
                  ],
                  "endLine": 96
                }
              },
              "expr": {
                "nodeType": "Expr_BinaryOp_Concat",
                "left": {
                  "nodeType": "Expr_ClassConstFetch",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "self"
                    ],
                    "attributes": {
                      "startLine": 96,
                      "endLine": 96
                    }
                  },
                  "name": {
                    "nodeType": "Identifier",
                    "name": "ACE_PREFIX",
                    "attributes": {
                      "startLine": 96,
                      "endLine": 96
                    }
                  },
                  "attributes": {
                    "startLine": 96,
                    "endLine": 96
                  }
                },
                "right": {
                  "nodeType": "Expr_Variable",
                  "name": "string",
                  "attributes": {
                    "startLine": 96,
                    "endLine": 96
                  }
                },
                "attributes": {
                  "startLine": 96,
                  "endLine": 96
                }
              },
              "attributes": {
                "startLine": 96,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Step 7: Prepend ACE prefix\n",
                    "line": 95,
                    "filePos": 2708,
                    "tokenPos": 355,
                    "endLine": 96,
                    "endFilePos": 2737,
                    "endTokenPos": 355
                  }
                ],
                "endLine": 96
              }
            },
            "attributes": {
              "startLine": 96,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 7: Prepend ACE prefix\n",
                  "line": 95,
                  "filePos": 2708,
                  "tokenPos": 355,
                  "endLine": 96,
                  "endFilePos": 2737,
                  "endTokenPos": 355
                }
              ],
              "endLine": 96
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_Smaller",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strlen"
                  ],
                  "attributes": {
                    "startLine": 99,
                    "endLine": 99
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 99,
                        "endLine": 99
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 99,
                      "endLine": 99
                    }
                  }
                ],
                "attributes": {
                  "startLine": 99,
                  "endLine": 99
                }
              },
              "right": {
                "nodeType": "Scalar_LNumber",
                "value": 64,
                "attributes": {
                  "startLine": 99,
                  "endLine": 99,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 99,
                "endLine": 99
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Return",
                "expr": {
                  "nodeType": "Expr_Variable",
                  "name": "string",
                  "attributes": {
                    "startLine": 100,
                    "endLine": 100
                  }
                },
                "attributes": {
                  "startLine": 100,
                  "endLine": 100
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 99,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Step 8: Check size\n",
                  "line": 98,
                  "filePos": 2781,
                  "tokenPos": 370,
                  "endLine": 99,
                  "endFilePos": 2802,
                  "endTokenPos": 370
                }
              ],
              "endLine": 101
            }
          },
          {
            "nodeType": "Stmt_Throw",
            "expr": {
              "nodeType": "Expr_New",
              "class": {
                "nodeType": "Name",
                "parts": [
                  "Requests_Exception"
                ],
                "attributes": {
                  "startLine": 103,
                  "endLine": 103
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "Encoded string is too long",
                    "attributes": {
                      "startLine": 103,
                      "endLine": 103,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 103,
                    "endLine": 103
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_String",
                    "value": "idna.encoded_too_long",
                    "attributes": {
                      "startLine": 103,
                      "endLine": 103,
                      "kind": 1
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 103,
                    "endLine": 103
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "string",
                    "attributes": {
                      "startLine": 103,
                      "endLine": 103
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 103,
                    "endLine": 103
                  }
                }
              ],
              "attributes": {
                "startLine": 103,
                "endLine": 103
              }
            },
            "attributes": {
              "startLine": 103,
              "endLine": 103
            }
          }
        ],
        "attributes": {
          "startLine": 62,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Convert a UTF-8 string to an ASCII string using Punycode\n\t *\n\t * @throws Requests_Exception Provided string longer than 64 ASCII characters (`idna.provided_too_long`)\n\t * @throws Requests_Exception Prepared string longer than 64 ASCII characters (`idna.prepared_too_long`)\n\t * @throws Requests_Exception Provided string already begins with xn-- (`idna.provided_is_prefixed`)\n\t * @throws Requests_Exception Encoded string longer than 64 ASCII characters (`idna.encoded_too_long`)\n\t *\n\t * @param string $string ASCII or UTF-8 string (max length 64 characters)\n\t * @return string ASCII string\n\t */",
              "line": 51,
              "filePos": 1156,
              "tokenPos": 156,
              "endLine": 61,
              "endFilePos": 1757,
              "endTokenPos": 156
            }
          ],
          "endLine": 104
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 10,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "is_ascii",
          "attributes": {
            "startLine": 114,
            "endLine": 114
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 114,
                "endLine": 114
              }
            },
            "default": null,
            "attributes": {
              "startLine": 114,
              "endLine": 114
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_BinaryOp_NotIdentical",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "preg_match"
                  ],
                  "attributes": {
                    "startLine": 115,
                    "endLine": 115
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Scalar_String",
                      "value": "/(?:[^\\x00-\\x7F])/",
                      "attributes": {
                        "startLine": 115,
                        "endLine": 115,
                        "kind": 1
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 115,
                      "endLine": 115
                    }
                  },
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "string",
                      "attributes": {
                        "startLine": 115,
                        "endLine": 115
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 115,
                      "endLine": 115
                    }
                  }
                ],
                "attributes": {
                  "startLine": 115,
                  "endLine": 115
                }
              },
              "right": {
                "nodeType": "Scalar_LNumber",
                "value": 1,
                "attributes": {
                  "startLine": 115,
                  "endLine": 115,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 115,
                "endLine": 115
              }
            },
            "attributes": {
              "startLine": 115,
              "endLine": 115
            }
          }
        ],
        "attributes": {
          "startLine": 114,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Check whether a given string contains only ASCII characters\n\t *\n\t * @internal (Testing found regex was the fastest implementation)\n\t *\n\t * @param string $string\n\t * @return bool Is the string ASCII-only?\n\t */",
              "line": 106,
              "filePos": 2958,
              "tokenPos": 412,
              "endLine": 113,
              "endFilePos": 3173,
              "endTokenPos": 412
            }
          ],
          "endLine": 116
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 10,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "nameprep",
          "attributes": {
            "startLine": 125,
            "endLine": 125
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 125,
                "endLine": 125
              }
            },
            "default": null,
            "attributes": {
              "startLine": 125,
              "endLine": 125
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "string",
              "attributes": {
                "startLine": 126,
                "endLine": 126
              }
            },
            "attributes": {
              "startLine": 126,
              "endLine": 126
            }
          }
        ],
        "attributes": {
          "startLine": 125,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Prepare a string for use as an IDNA name\n\t *\n\t * @todo Implement this based on RFC 3491 and the newer 5891\n\t * @param string $string\n\t * @return string Prepared string\n\t */",
              "line": 118,
              "filePos": 3287,
              "tokenPos": 446,
              "endLine": 124,
              "endFilePos": 3466,
              "endTokenPos": 446
            }
          ],
          "endLine": 127
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 10,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "utf8_to_codepoints",
          "attributes": {
            "startLine": 138,
            "endLine": 138
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "input",
              "attributes": {
                "startLine": 138,
                "endLine": 138
              }
            },
            "default": null,
            "attributes": {
              "startLine": 138,
              "endLine": 138
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "codepoints",
                "attributes": {
                  "startLine": 139,
                  "endLine": 139
                }
              },
              "expr": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                  "startLine": 139,
                  "endLine": 139,
                  "kind": 1
                }
              },
              "attributes": {
                "startLine": 139,
                "endLine": 139
              }
            },
            "attributes": {
              "startLine": 139,
              "endLine": 139
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "strlen",
                "attributes": {
                  "startLine": 142,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// Get number of bytes\n",
                      "line": 141,
                      "filePos": 3900,
                      "tokenPos": 492,
                      "endLine": 142,
                      "endFilePos": 3922,
                      "endTokenPos": 492
                    }
                  ],
                  "endLine": 142
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strlen"
                  ],
                  "attributes": {
                    "startLine": 142,
                    "endLine": 142
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "input",
                      "attributes": {
                        "startLine": 142,
                        "endLine": 142
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 142,
                      "endLine": 142
                    }
                  }
                ],
                "attributes": {
                  "startLine": 142,
                  "endLine": 142
                }
              },
              "attributes": {
                "startLine": 142,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// Get number of bytes\n",
                    "line": 141,
                    "filePos": 3900,
                    "tokenPos": 492,
                    "endLine": 142,
                    "endFilePos": 3922,
                    "endTokenPos": 492
                  }
                ],
                "endLine": 142
              }
            },
            "attributes": {
              "startLine": 142,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// Get number of bytes\n",
                  "line": 141,
                  "filePos": 3900,
                  "tokenPos": 492,
                  "endLine": 142,
                  "endFilePos": 3922,
                  "endTokenPos": 492
                }
              ],
              "endLine": 142
            }
          },
          {
            "nodeType": "Stmt_For",
            "init": [
              {
                "nodeType": "Expr_Assign",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "position",
                  "attributes": {
                    "startLine": 144,
                    "endLine": 144
                  }
                },
                "expr": {
                  "nodeType": "Scalar_LNumber",
                  "value": 0,
                  "attributes": {
                    "startLine": 144,
                    "endLine": 144,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 144,
                  "endLine": 144
                }
              }
            ],
            "cond": [
              {
                "nodeType": "Expr_BinaryOp_Smaller",
                "left": {
                  "nodeType": "Expr_Variable",
                  "name": "position",
                  "attributes": {
                    "startLine": 144,
                    "endLine": 144
                  }
                },
                "right": {
                  "nodeType": "Expr_Variable",
                  "name": "strlen",
                  "attributes": {
                    "startLine": 144,
                    "endLine": 144
                  }
                },
                "attributes": {
                  "startLine": 144,
                  "endLine": 144
                }
              }
            ],
            "loop": [
              {
                "nodeType": "Expr_PostInc",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "position",
                  "attributes": {
                    "startLine": 144,
                    "endLine": 144
                  }
                },
                "attributes": {
                  "startLine": 144,
                  "endLine": 144
                }
              }
            ],
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "value",
                    "attributes": {
                      "startLine": 145,
                      "endLine": 145
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "ord"
                      ],
                      "attributes": {
                        "startLine": 145,
                        "endLine": 145
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_ArrayDimFetch",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "input",
                            "attributes": {
                              "startLine": 145,
                              "endLine": 145
                            }
                          },
                          "dim": {
                            "nodeType": "Expr_Variable",
                            "name": "position",
                            "attributes": {
                              "startLine": 145,
                              "endLine": 145
                            }
                          },
                          "attributes": {
                            "startLine": 145,
                            "endLine": 145
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 145,
                          "endLine": 145
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 145,
                      "endLine": 145
                    }
                  },
                  "attributes": {
                    "startLine": 145,
                    "endLine": 145
                  }
                },
                "attributes": {
                  "startLine": 145,
                  "endLine": 145
                }
              },
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_Identical",
                  "left": {
                    "nodeType": "Expr_BinaryOp_BitwiseAnd",
                    "left": {
                      "nodeType": "Expr_BitwiseNot",
                      "expr": {
                        "nodeType": "Expr_Variable",
                        "name": "value",
                        "attributes": {
                          "startLine": 148,
                          "endLine": 148
                        }
                      },
                      "attributes": {
                        "startLine": 148,
                        "endLine": 148
                      }
                    },
                    "right": {
                      "nodeType": "Scalar_LNumber",
                      "value": 128,
                      "attributes": {
                        "startLine": 148,
                        "endLine": 148,
                        "kind": 16
                      }
                    },
                    "attributes": {
                      "startLine": 148,
                      "endLine": 148
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 128,
                    "attributes": {
                      "startLine": 148,
                      "endLine": 148,
                      "kind": 16
                    }
                  },
                  "attributes": {
                    "startLine": 148,
                    "endLine": 148
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Assign",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "character",
                        "attributes": {
                          "startLine": 149,
                          "endLine": 149
                        }
                      },
                      "expr": {
                        "nodeType": "Expr_Variable",
                        "name": "value",
                        "attributes": {
                          "startLine": 149,
                          "endLine": 149
                        }
                      },
                      "attributes": {
                        "startLine": 149,
                        "endLine": 149
                      }
                    },
                    "attributes": {
                      "startLine": 149,
                      "endLine": 149
                    }
                  },
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Assign",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "length",
                        "attributes": {
                          "startLine": 150,
                          "endLine": 150
                        }
                      },
                      "expr": {
                        "nodeType": "Scalar_LNumber",
                        "value": 1,
                        "attributes": {
                          "startLine": 150,
                          "endLine": 150,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 150,
                        "endLine": 150
                      }
                    },
                    "attributes": {
                      "startLine": 150,
                      "endLine": 150
                    }
                  },
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Assign",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "remaining",
                        "attributes": {
                          "startLine": 151,
                          "endLine": 151
                        }
                      },
                      "expr": {
                        "nodeType": "Scalar_LNumber",
                        "value": 0,
                        "attributes": {
                          "startLine": 151,
                          "endLine": 151,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 151,
                        "endLine": 151
                      }
                    },
                    "attributes": {
                      "startLine": 151,
                      "endLine": 151
                    }
                  }
                ],
                "elseifs": [
                  {
                    "nodeType": "Stmt_ElseIf",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Identical",
                      "left": {
                        "nodeType": "Expr_BinaryOp_BitwiseAnd",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "value",
                          "attributes": {
                            "startLine": 154,
                            "endLine": 154
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 224,
                          "attributes": {
                            "startLine": 154,
                            "endLine": 154,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 154,
                          "endLine": 154
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 192,
                        "attributes": {
                          "startLine": 154,
                          "endLine": 154,
                          "kind": 16
                        }
                      },
                      "attributes": {
                        "startLine": 154,
                        "endLine": 154
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 155,
                              "endLine": 155
                            }
                          },
                          "expr": {
                            "nodeType": "Expr_BinaryOp_ShiftLeft",
                            "left": {
                              "nodeType": "Expr_BinaryOp_BitwiseAnd",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "value",
                                "attributes": {
                                  "startLine": 155,
                                  "endLine": 155
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 31,
                                "attributes": {
                                  "startLine": 155,
                                  "endLine": 155,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 155,
                                "endLine": 155
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 6,
                              "attributes": {
                                "startLine": 155,
                                "endLine": 155,
                                "kind": 10
                              }
                            },
                            "attributes": {
                              "startLine": 155,
                              "endLine": 155
                            }
                          },
                          "attributes": {
                            "startLine": 155,
                            "endLine": 155
                          }
                        },
                        "attributes": {
                          "startLine": 155,
                          "endLine": 155
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "length",
                            "attributes": {
                              "startLine": 156,
                              "endLine": 156
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 2,
                            "attributes": {
                              "startLine": 156,
                              "endLine": 156,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 156,
                            "endLine": 156
                          }
                        },
                        "attributes": {
                          "startLine": 156,
                          "endLine": 156
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "remaining",
                            "attributes": {
                              "startLine": 157,
                              "endLine": 157
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 1,
                            "attributes": {
                              "startLine": 157,
                              "endLine": 157,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 157,
                            "endLine": 157
                          }
                        },
                        "attributes": {
                          "startLine": 157,
                          "endLine": 157
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 154,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Two byte sequence:\n",
                          "line": 153,
                          "filePos": 4178,
                          "tokenPos": 584,
                          "endLine": 154,
                          "endFilePos": 4199,
                          "endTokenPos": 584
                        }
                      ],
                      "endLine": 158
                    }
                  },
                  {
                    "nodeType": "Stmt_ElseIf",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Identical",
                      "left": {
                        "nodeType": "Expr_BinaryOp_BitwiseAnd",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "value",
                          "attributes": {
                            "startLine": 160,
                            "endLine": 160
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 240,
                          "attributes": {
                            "startLine": 160,
                            "endLine": 160,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 160,
                          "endLine": 160
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 224,
                        "attributes": {
                          "startLine": 160,
                          "endLine": 160,
                          "kind": 16
                        }
                      },
                      "attributes": {
                        "startLine": 160,
                        "endLine": 160
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 161,
                              "endLine": 161
                            }
                          },
                          "expr": {
                            "nodeType": "Expr_BinaryOp_ShiftLeft",
                            "left": {
                              "nodeType": "Expr_BinaryOp_BitwiseAnd",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "value",
                                "attributes": {
                                  "startLine": 161,
                                  "endLine": 161
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 15,
                                "attributes": {
                                  "startLine": 161,
                                  "endLine": 161,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 161,
                                "endLine": 161
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 12,
                              "attributes": {
                                "startLine": 161,
                                "endLine": 161,
                                "kind": 10
                              }
                            },
                            "attributes": {
                              "startLine": 161,
                              "endLine": 161
                            }
                          },
                          "attributes": {
                            "startLine": 161,
                            "endLine": 161
                          }
                        },
                        "attributes": {
                          "startLine": 161,
                          "endLine": 161
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "length",
                            "attributes": {
                              "startLine": 162,
                              "endLine": 162
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 3,
                            "attributes": {
                              "startLine": 162,
                              "endLine": 162,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 162,
                            "endLine": 162
                          }
                        },
                        "attributes": {
                          "startLine": 162,
                          "endLine": 162
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "remaining",
                            "attributes": {
                              "startLine": 163,
                              "endLine": 163
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 2,
                            "attributes": {
                              "startLine": 163,
                              "endLine": 163,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 163,
                            "endLine": 163
                          }
                        },
                        "attributes": {
                          "startLine": 163,
                          "endLine": 163
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 160,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Three byte sequence:\n",
                          "line": 159,
                          "filePos": 4323,
                          "tokenPos": 637,
                          "endLine": 160,
                          "endFilePos": 4346,
                          "endTokenPos": 637
                        }
                      ],
                      "endLine": 164
                    }
                  },
                  {
                    "nodeType": "Stmt_ElseIf",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Identical",
                      "left": {
                        "nodeType": "Expr_BinaryOp_BitwiseAnd",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "value",
                          "attributes": {
                            "startLine": 166,
                            "endLine": 166
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 248,
                          "attributes": {
                            "startLine": 166,
                            "endLine": 166,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 166,
                          "endLine": 166
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 240,
                        "attributes": {
                          "startLine": 166,
                          "endLine": 166,
                          "kind": 16
                        }
                      },
                      "attributes": {
                        "startLine": 166,
                        "endLine": 166
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 167,
                              "endLine": 167
                            }
                          },
                          "expr": {
                            "nodeType": "Expr_BinaryOp_ShiftLeft",
                            "left": {
                              "nodeType": "Expr_BinaryOp_BitwiseAnd",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "value",
                                "attributes": {
                                  "startLine": 167,
                                  "endLine": 167
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 7,
                                "attributes": {
                                  "startLine": 167,
                                  "endLine": 167,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 167,
                                "endLine": 167
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 18,
                              "attributes": {
                                "startLine": 167,
                                "endLine": 167,
                                "kind": 10
                              }
                            },
                            "attributes": {
                              "startLine": 167,
                              "endLine": 167
                            }
                          },
                          "attributes": {
                            "startLine": 167,
                            "endLine": 167
                          }
                        },
                        "attributes": {
                          "startLine": 167,
                          "endLine": 167
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "length",
                            "attributes": {
                              "startLine": 168,
                              "endLine": 168
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 4,
                            "attributes": {
                              "startLine": 168,
                              "endLine": 168,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 168,
                            "endLine": 168
                          }
                        },
                        "attributes": {
                          "startLine": 168,
                          "endLine": 168
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "remaining",
                            "attributes": {
                              "startLine": 169,
                              "endLine": 169
                            }
                          },
                          "expr": {
                            "nodeType": "Scalar_LNumber",
                            "value": 3,
                            "attributes": {
                              "startLine": 169,
                              "endLine": 169,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 169,
                            "endLine": 169
                          }
                        },
                        "attributes": {
                          "startLine": 169,
                          "endLine": 169
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 166,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Four byte sequence:\n",
                          "line": 165,
                          "filePos": 4471,
                          "tokenPos": 690,
                          "endLine": 166,
                          "endFilePos": 4493,
                          "endTokenPos": 690
                        }
                      ],
                      "endLine": 170
                    }
                  }
                ],
                "else": {
                  "nodeType": "Stmt_Else",
                  "stmts": [
                    {
                      "nodeType": "Stmt_Throw",
                      "expr": {
                        "nodeType": "Expr_New",
                        "class": {
                          "nodeType": "Name",
                          "parts": [
                            "Requests_Exception"
                          ],
                          "attributes": {
                            "startLine": 173,
                            "endLine": 173
                          }
                        },
                        "args": [
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Scalar_String",
                              "value": "Invalid Unicode codepoint",
                              "attributes": {
                                "startLine": 173,
                                "endLine": 173,
                                "kind": 1
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 173,
                              "endLine": 173
                            }
                          },
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Scalar_String",
                              "value": "idna.invalidcodepoint",
                              "attributes": {
                                "startLine": 173,
                                "endLine": 173,
                                "kind": 1
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 173,
                              "endLine": 173
                            }
                          },
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Expr_Variable",
                              "name": "value",
                              "attributes": {
                                "startLine": 173,
                                "endLine": 173
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 173,
                              "endLine": 173
                            }
                          }
                        ],
                        "attributes": {
                          "startLine": 173,
                          "endLine": 173
                        }
                      },
                      "attributes": {
                        "startLine": 173,
                        "endLine": 173
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 172,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "// Invalid byte:\n",
                        "line": 171,
                        "filePos": 4618,
                        "tokenPos": 743,
                        "endLine": 172,
                        "endFilePos": 4634,
                        "endTokenPos": 743
                      }
                    ],
                    "endLine": 174
                  }
                },
                "attributes": {
                  "startLine": 148,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// One byte sequence:\n",
                      "line": 147,
                      "filePos": 4050,
                      "tokenPos": 540,
                      "endLine": 148,
                      "endFilePos": 4071,
                      "endTokenPos": 540
                    }
                  ],
                  "endLine": 174
                }
              },
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_Greater",
                  "left": {
                    "nodeType": "Expr_Variable",
                    "name": "remaining",
                    "attributes": {
                      "startLine": 176,
                      "endLine": 176
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 0,
                    "attributes": {
                      "startLine": 176,
                      "endLine": 176,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 176,
                    "endLine": 176
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_If",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Greater",
                      "left": {
                        "nodeType": "Expr_BinaryOp_Plus",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "position",
                          "attributes": {
                            "startLine": 177,
                            "endLine": 177
                          }
                        },
                        "right": {
                          "nodeType": "Expr_Variable",
                          "name": "length",
                          "attributes": {
                            "startLine": 177,
                            "endLine": 177
                          }
                        },
                        "attributes": {
                          "startLine": 177,
                          "endLine": 177
                        }
                      },
                      "right": {
                        "nodeType": "Expr_Variable",
                        "name": "strlen",
                        "attributes": {
                          "startLine": 177,
                          "endLine": 177
                        }
                      },
                      "attributes": {
                        "startLine": 177,
                        "endLine": 177
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Throw",
                        "expr": {
                          "nodeType": "Expr_New",
                          "class": {
                            "nodeType": "Name",
                            "parts": [
                              "Requests_Exception"
                            ],
                            "attributes": {
                              "startLine": 178,
                              "endLine": 178
                            }
                          },
                          "args": [
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Scalar_String",
                                "value": "Invalid Unicode codepoint",
                                "attributes": {
                                  "startLine": 178,
                                  "endLine": 178,
                                  "kind": 1
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 178,
                                "endLine": 178
                              }
                            },
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Scalar_String",
                                "value": "idna.invalidcodepoint",
                                "attributes": {
                                  "startLine": 178,
                                  "endLine": 178,
                                  "kind": 1
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 178,
                                "endLine": 178
                              }
                            },
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Expr_Variable",
                                "name": "character",
                                "attributes": {
                                  "startLine": 178,
                                  "endLine": 178
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 178,
                                "endLine": 178
                              }
                            }
                          ],
                          "attributes": {
                            "startLine": 178,
                            "endLine": 178
                          }
                        },
                        "attributes": {
                          "startLine": 178,
                          "endLine": 178
                        }
                      }
                    ],
                    "elseifs": [],
                    "else": null,
                    "attributes": {
                      "startLine": 177,
                      "endLine": 179
                    }
                  },
                  {
                    "nodeType": "Stmt_For",
                    "init": [
                      {
                        "nodeType": "Expr_PostInc",
                        "var": {
                          "nodeType": "Expr_Variable",
                          "name": "position",
                          "attributes": {
                            "startLine": 180,
                            "endLine": 180
                          }
                        },
                        "attributes": {
                          "startLine": 180,
                          "endLine": 180
                        }
                      }
                    ],
                    "cond": [
                      {
                        "nodeType": "Expr_BinaryOp_Greater",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "remaining",
                          "attributes": {
                            "startLine": 180,
                            "endLine": 180
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 0,
                          "attributes": {
                            "startLine": 180,
                            "endLine": 180,
                            "kind": 10
                          }
                        },
                        "attributes": {
                          "startLine": 180,
                          "endLine": 180
                        }
                      }
                    ],
                    "loop": [
                      {
                        "nodeType": "Expr_PostInc",
                        "var": {
                          "nodeType": "Expr_Variable",
                          "name": "position",
                          "attributes": {
                            "startLine": 180,
                            "endLine": 180
                          }
                        },
                        "attributes": {
                          "startLine": 180,
                          "endLine": 180
                        }
                      }
                    ],
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_Assign",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "value",
                            "attributes": {
                              "startLine": 181,
                              "endLine": 181
                            }
                          },
                          "expr": {
                            "nodeType": "Expr_FuncCall",
                            "name": {
                              "nodeType": "Name",
                              "parts": [
                                "ord"
                              ],
                              "attributes": {
                                "startLine": 181,
                                "endLine": 181
                              }
                            },
                            "args": [
                              {
                                "nodeType": "Arg",
                                "value": {
                                  "nodeType": "Expr_ArrayDimFetch",
                                  "var": {
                                    "nodeType": "Expr_Variable",
                                    "name": "input",
                                    "attributes": {
                                      "startLine": 181,
                                      "endLine": 181
                                    }
                                  },
                                  "dim": {
                                    "nodeType": "Expr_Variable",
                                    "name": "position",
                                    "attributes": {
                                      "startLine": 181,
                                      "endLine": 181
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 181,
                                    "endLine": 181
                                  }
                                },
                                "byRef": false,
                                "unpack": false,
                                "attributes": {
                                  "startLine": 181,
                                  "endLine": 181
                                }
                              }
                            ],
                            "attributes": {
                              "startLine": 181,
                              "endLine": 181
                            }
                          },
                          "attributes": {
                            "startLine": 181,
                            "endLine": 181
                          }
                        },
                        "attributes": {
                          "startLine": 181,
                          "endLine": 181
                        }
                      },
                      {
                        "nodeType": "Stmt_If",
                        "cond": {
                          "nodeType": "Expr_BinaryOp_NotIdentical",
                          "left": {
                            "nodeType": "Expr_BinaryOp_BitwiseAnd",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "value",
                              "attributes": {
                                "startLine": 184,
                                "endLine": 184
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 192,
                              "attributes": {
                                "startLine": 184,
                                "endLine": 184,
                                "kind": 16
                              }
                            },
                            "attributes": {
                              "startLine": 184,
                              "endLine": 184
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 128,
                            "attributes": {
                              "startLine": 184,
                              "endLine": 184,
                              "kind": 16
                            }
                          },
                          "attributes": {
                            "startLine": 184,
                            "endLine": 184
                          }
                        },
                        "stmts": [
                          {
                            "nodeType": "Stmt_Throw",
                            "expr": {
                              "nodeType": "Expr_New",
                              "class": {
                                "nodeType": "Name",
                                "parts": [
                                  "Requests_Exception"
                                ],
                                "attributes": {
                                  "startLine": 185,
                                  "endLine": 185
                                }
                              },
                              "args": [
                                {
                                  "nodeType": "Arg",
                                  "value": {
                                    "nodeType": "Scalar_String",
                                    "value": "Invalid Unicode codepoint",
                                    "attributes": {
                                      "startLine": 185,
                                      "endLine": 185,
                                      "kind": 1
                                    }
                                  },
                                  "byRef": false,
                                  "unpack": false,
                                  "attributes": {
                                    "startLine": 185,
                                    "endLine": 185
                                  }
                                },
                                {
                                  "nodeType": "Arg",
                                  "value": {
                                    "nodeType": "Scalar_String",
                                    "value": "idna.invalidcodepoint",
                                    "attributes": {
                                      "startLine": 185,
                                      "endLine": 185,
                                      "kind": 1
                                    }
                                  },
                                  "byRef": false,
                                  "unpack": false,
                                  "attributes": {
                                    "startLine": 185,
                                    "endLine": 185
                                  }
                                },
                                {
                                  "nodeType": "Arg",
                                  "value": {
                                    "nodeType": "Expr_Variable",
                                    "name": "character",
                                    "attributes": {
                                      "startLine": 185,
                                      "endLine": 185
                                    }
                                  },
                                  "byRef": false,
                                  "unpack": false,
                                  "attributes": {
                                    "startLine": 185,
                                    "endLine": 185
                                  }
                                }
                              ],
                              "attributes": {
                                "startLine": 185,
                                "endLine": 185
                              }
                            },
                            "attributes": {
                              "startLine": 185,
                              "endLine": 185
                            }
                          }
                        ],
                        "elseifs": [],
                        "else": null,
                        "attributes": {
                          "startLine": 184,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// If it is invalid, count the sequence as invalid and reprocess the current byte:\n",
                              "line": 183,
                              "filePos": 5017,
                              "tokenPos": 846,
                              "endLine": 184,
                              "endFilePos": 5099,
                              "endTokenPos": 846
                            }
                          ],
                          "endLine": 186
                        }
                      },
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_AssignOp_BitwiseOr",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 188,
                              "endLine": 188
                            }
                          },
                          "expr": {
                            "nodeType": "Expr_BinaryOp_ShiftLeft",
                            "left": {
                              "nodeType": "Expr_BinaryOp_BitwiseAnd",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "value",
                                "attributes": {
                                  "startLine": 188,
                                  "endLine": 188
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 63,
                                "attributes": {
                                  "startLine": 188,
                                  "endLine": 188,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 188,
                                "endLine": 188
                              }
                            },
                            "right": {
                              "nodeType": "Expr_BinaryOp_Mul",
                              "left": {
                                "nodeType": "Expr_PreDec",
                                "var": {
                                  "nodeType": "Expr_Variable",
                                  "name": "remaining",
                                  "attributes": {
                                    "startLine": 188,
                                    "endLine": 188
                                  }
                                },
                                "attributes": {
                                  "startLine": 188,
                                  "endLine": 188
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 6,
                                "attributes": {
                                  "startLine": 188,
                                  "endLine": 188,
                                  "kind": 10
                                }
                              },
                              "attributes": {
                                "startLine": 188,
                                "endLine": 188
                              }
                            },
                            "attributes": {
                              "startLine": 188,
                              "endLine": 188
                            }
                          },
                          "attributes": {
                            "startLine": 188,
                            "endLine": 188
                          }
                        },
                        "attributes": {
                          "startLine": 188,
                          "endLine": 188
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 180,
                      "endLine": 189
                    }
                  },
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_PostDec",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "position",
                        "attributes": {
                          "startLine": 190,
                          "endLine": 190
                        }
                      },
                      "attributes": {
                        "startLine": 190,
                        "endLine": 190
                      }
                    },
                    "attributes": {
                      "startLine": 190,
                      "endLine": 190
                    }
                  }
                ],
                "elseifs": [],
                "else": null,
                "attributes": {
                  "startLine": 176,
                  "endLine": 191
                }
              },
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_BooleanOr",
                  "left": {
                    "nodeType": "Expr_BinaryOp_BooleanOr",
                    "left": {
                      "nodeType": "Expr_BinaryOp_BooleanOr",
                      "left": {
                        "nodeType": "Expr_BinaryOp_BooleanOr",
                        "left": {
                          "nodeType": "Expr_BinaryOp_BooleanOr",
                          "left": {
                            "nodeType": "Expr_BinaryOp_BooleanAnd",
                            "left": {
                              "nodeType": "Expr_BinaryOp_Greater",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "length",
                                "attributes": {
                                  "startLine": 195,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "// Non-shortest form sequences are invalid\n",
                                      "line": 194,
                                      "filePos": 5346,
                                      "tokenPos": 920,
                                      "endLine": 195,
                                      "endFilePos": 5388,
                                      "endTokenPos": 920
                                    }
                                  ],
                                  "endLine": 195
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 1,
                                "attributes": {
                                  "startLine": 195,
                                  "endLine": 195,
                                  "kind": 10
                                }
                              },
                              "attributes": {
                                "startLine": 195,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "// Non-shortest form sequences are invalid\n",
                                    "line": 194,
                                    "filePos": 5346,
                                    "tokenPos": 920,
                                    "endLine": 195,
                                    "endFilePos": 5388,
                                    "endTokenPos": 920
                                  }
                                ],
                                "endLine": 195
                              }
                            },
                            "right": {
                              "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "character",
                                "attributes": {
                                  "startLine": 195,
                                  "endLine": 195
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 127,
                                "attributes": {
                                  "startLine": 195,
                                  "endLine": 195,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 195,
                                "endLine": 195
                              }
                            },
                            "attributes": {
                              "startLine": 195,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "// Non-shortest form sequences are invalid\n",
                                  "line": 194,
                                  "filePos": 5346,
                                  "tokenPos": 920,
                                  "endLine": 195,
                                  "endFilePos": 5388,
                                  "endTokenPos": 920
                                }
                              ],
                              "endLine": 195
                            }
                          },
                          "right": {
                            "nodeType": "Expr_BinaryOp_BooleanAnd",
                            "left": {
                              "nodeType": "Expr_BinaryOp_Greater",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "length",
                                "attributes": {
                                  "startLine": 196,
                                  "endLine": 196
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 2,
                                "attributes": {
                                  "startLine": 196,
                                  "endLine": 196,
                                  "kind": 10
                                }
                              },
                              "attributes": {
                                "startLine": 196,
                                "endLine": 196
                              }
                            },
                            "right": {
                              "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                              "left": {
                                "nodeType": "Expr_Variable",
                                "name": "character",
                                "attributes": {
                                  "startLine": 196,
                                  "endLine": 196
                                }
                              },
                              "right": {
                                "nodeType": "Scalar_LNumber",
                                "value": 2047,
                                "attributes": {
                                  "startLine": 196,
                                  "endLine": 196,
                                  "kind": 16
                                }
                              },
                              "attributes": {
                                "startLine": 196,
                                "endLine": 196
                              }
                            },
                            "attributes": {
                              "startLine": 196,
                              "endLine": 196
                            }
                          },
                          "attributes": {
                            "startLine": 195,
                            "comments": [
                              {
                                "nodeType": "Comment",
                                "text": "// Non-shortest form sequences are invalid\n",
                                "line": 194,
                                "filePos": 5346,
                                "tokenPos": 920,
                                "endLine": 195,
                                "endFilePos": 5388,
                                "endTokenPos": 920
                              }
                            ],
                            "endLine": 196
                          }
                        },
                        "right": {
                          "nodeType": "Expr_BinaryOp_BooleanAnd",
                          "left": {
                            "nodeType": "Expr_BinaryOp_Greater",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "length",
                              "attributes": {
                                "startLine": 197,
                                "endLine": 197
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 3,
                              "attributes": {
                                "startLine": 197,
                                "endLine": 197,
                                "kind": 10
                              }
                            },
                            "attributes": {
                              "startLine": 197,
                              "endLine": 197
                            }
                          },
                          "right": {
                            "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "character",
                              "attributes": {
                                "startLine": 197,
                                "endLine": 197
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 65535,
                              "attributes": {
                                "startLine": 197,
                                "endLine": 197,
                                "kind": 16
                              }
                            },
                            "attributes": {
                              "startLine": 197,
                              "endLine": 197
                            }
                          },
                          "attributes": {
                            "startLine": 197,
                            "endLine": 197
                          }
                        },
                        "attributes": {
                          "startLine": 195,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// Non-shortest form sequences are invalid\n",
                              "line": 194,
                              "filePos": 5346,
                              "tokenPos": 920,
                              "endLine": 195,
                              "endFilePos": 5388,
                              "endTokenPos": 920
                            }
                          ],
                          "endLine": 197
                        }
                      },
                      "right": {
                        "nodeType": "Expr_BinaryOp_Identical",
                        "left": {
                          "nodeType": "Expr_BinaryOp_BitwiseAnd",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 200,
                              "endLine": 200
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 65534,
                            "attributes": {
                              "startLine": 200,
                              "endLine": 200,
                              "kind": 16
                            }
                          },
                          "attributes": {
                            "startLine": 200,
                            "endLine": 200
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 65534,
                          "attributes": {
                            "startLine": 200,
                            "endLine": 200,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 200,
                          "endLine": 200
                        }
                      },
                      "attributes": {
                        "startLine": 195,
                        "comments": [
                          {
                            "nodeType": "Comment",
                            "text": "// Non-shortest form sequences are invalid\n",
                            "line": 194,
                            "filePos": 5346,
                            "tokenPos": 920,
                            "endLine": 195,
                            "endFilePos": 5388,
                            "endTokenPos": 920
                          }
                        ],
                        "endLine": 200
                      }
                    },
                    "right": {
                      "nodeType": "Expr_BinaryOp_BooleanAnd",
                      "left": {
                        "nodeType": "Expr_BinaryOp_GreaterOrEqual",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "character",
                          "attributes": {
                            "startLine": 201,
                            "endLine": 201
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 64976,
                          "attributes": {
                            "startLine": 201,
                            "endLine": 201,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 201,
                          "endLine": 201
                        }
                      },
                      "right": {
                        "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "character",
                          "attributes": {
                            "startLine": 201,
                            "endLine": 201
                          }
                        },
                        "right": {
                          "nodeType": "Scalar_LNumber",
                          "value": 65007,
                          "attributes": {
                            "startLine": 201,
                            "endLine": 201,
                            "kind": 16
                          }
                        },
                        "attributes": {
                          "startLine": 201,
                          "endLine": 201
                        }
                      },
                      "attributes": {
                        "startLine": 201,
                        "endLine": 201
                      }
                    },
                    "attributes": {
                      "startLine": 195,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Non-shortest form sequences are invalid\n",
                          "line": 194,
                          "filePos": 5346,
                          "tokenPos": 920,
                          "endLine": 195,
                          "endFilePos": 5388,
                          "endTokenPos": 920
                        }
                      ],
                      "endLine": 201
                    }
                  },
                  "right": {
                    "nodeType": "Expr_BinaryOp_BooleanOr",
                    "left": {
                      "nodeType": "Expr_BinaryOp_BooleanOr",
                      "left": {
                        "nodeType": "Expr_BinaryOp_BooleanOr",
                        "left": {
                          "nodeType": "Expr_BinaryOp_BooleanAnd",
                          "left": {
                            "nodeType": "Expr_BinaryOp_Greater",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "character",
                              "attributes": {
                                "startLine": 204,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "// Everything else not in ucschar\n",
                                    "line": 203,
                                    "filePos": 5688,
                                    "tokenPos": 1006,
                                    "endLine": 204,
                                    "endFilePos": 5721,
                                    "endTokenPos": 1006
                                  }
                                ],
                                "endLine": 204
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 55295,
                              "attributes": {
                                "startLine": 204,
                                "endLine": 204,
                                "kind": 16
                              }
                            },
                            "attributes": {
                              "startLine": 204,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "// Everything else not in ucschar\n",
                                  "line": 203,
                                  "filePos": 5688,
                                  "tokenPos": 1006,
                                  "endLine": 204,
                                  "endFilePos": 5721,
                                  "endTokenPos": 1006
                                }
                              ],
                              "endLine": 204
                            }
                          },
                          "right": {
                            "nodeType": "Expr_BinaryOp_Smaller",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "character",
                              "attributes": {
                                "startLine": 204,
                                "endLine": 204
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 63744,
                              "attributes": {
                                "startLine": 204,
                                "endLine": 204,
                                "kind": 16
                              }
                            },
                            "attributes": {
                              "startLine": 204,
                              "endLine": 204
                            }
                          },
                          "attributes": {
                            "startLine": 204,
                            "comments": [
                              {
                                "nodeType": "Comment",
                                "text": "// Everything else not in ucschar\n",
                                "line": 203,
                                "filePos": 5688,
                                "tokenPos": 1006,
                                "endLine": 204,
                                "endFilePos": 5721,
                                "endTokenPos": 1006
                              }
                            ],
                            "endLine": 204
                          }
                        },
                        "right": {
                          "nodeType": "Expr_BinaryOp_Smaller",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 205,
                              "endLine": 205
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 32,
                            "attributes": {
                              "startLine": 205,
                              "endLine": 205,
                              "kind": 16
                            }
                          },
                          "attributes": {
                            "startLine": 205,
                            "endLine": 205
                          }
                        },
                        "attributes": {
                          "startLine": 204,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// Everything else not in ucschar\n",
                              "line": 203,
                              "filePos": 5688,
                              "tokenPos": 1006,
                              "endLine": 204,
                              "endFilePos": 5721,
                              "endTokenPos": 1006
                            }
                          ],
                          "endLine": 205
                        }
                      },
                      "right": {
                        "nodeType": "Expr_BinaryOp_BooleanAnd",
                        "left": {
                          "nodeType": "Expr_BinaryOp_Greater",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 206,
                              "endLine": 206
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 126,
                            "attributes": {
                              "startLine": 206,
                              "endLine": 206,
                              "kind": 16
                            }
                          },
                          "attributes": {
                            "startLine": 206,
                            "endLine": 206
                          }
                        },
                        "right": {
                          "nodeType": "Expr_BinaryOp_Smaller",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 206,
                              "endLine": 206
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 160,
                            "attributes": {
                              "startLine": 206,
                              "endLine": 206,
                              "kind": 16
                            }
                          },
                          "attributes": {
                            "startLine": 206,
                            "endLine": 206
                          }
                        },
                        "attributes": {
                          "startLine": 206,
                          "endLine": 206
                        }
                      },
                      "attributes": {
                        "startLine": 204,
                        "comments": [
                          {
                            "nodeType": "Comment",
                            "text": "// Everything else not in ucschar\n",
                            "line": 203,
                            "filePos": 5688,
                            "tokenPos": 1006,
                            "endLine": 204,
                            "endFilePos": 5721,
                            "endTokenPos": 1006
                          }
                        ],
                        "endLine": 206
                      }
                    },
                    "right": {
                      "nodeType": "Expr_BinaryOp_Greater",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "character",
                        "attributes": {
                          "startLine": 207,
                          "endLine": 207
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 983037,
                        "attributes": {
                          "startLine": 207,
                          "endLine": 207,
                          "kind": 16
                        }
                      },
                      "attributes": {
                        "startLine": 207,
                        "endLine": 207
                      }
                    },
                    "attributes": {
                      "startLine": 204,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Everything else not in ucschar\n",
                          "line": 203,
                          "filePos": 5688,
                          "tokenPos": 1006,
                          "endLine": 204,
                          "endFilePos": 5721,
                          "endTokenPos": 1006
                        }
                      ],
                      "endLine": 207
                    }
                  },
                  "attributes": {
                    "startLine": 195,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "// Non-shortest form sequences are invalid\n",
                        "line": 194,
                        "filePos": 5346,
                        "tokenPos": 920,
                        "endLine": 195,
                        "endFilePos": 5388,
                        "endTokenPos": 920
                      }
                    ],
                    "endLine": 208
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Throw",
                    "expr": {
                      "nodeType": "Expr_New",
                      "class": {
                        "nodeType": "Name",
                        "parts": [
                          "Requests_Exception"
                        ],
                        "attributes": {
                          "startLine": 210,
                          "endLine": 210
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Scalar_String",
                            "value": "Invalid Unicode codepoint",
                            "attributes": {
                              "startLine": 210,
                              "endLine": 210,
                              "kind": 1
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 210,
                            "endLine": 210
                          }
                        },
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Scalar_String",
                            "value": "idna.invalidcodepoint",
                            "attributes": {
                              "startLine": 210,
                              "endLine": 210,
                              "kind": 1
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 210,
                            "endLine": 210
                          }
                        },
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Variable",
                            "name": "character",
                            "attributes": {
                              "startLine": 210,
                              "endLine": 210
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 210,
                            "endLine": 210
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 210,
                        "endLine": 210
                      }
                    },
                    "attributes": {
                      "startLine": 210,
                      "endLine": 210
                    }
                  }
                ],
                "elseifs": [],
                "else": null,
                "attributes": {
                  "startLine": 193,
                  "endLine": 211
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_ArrayDimFetch",
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "codepoints",
                      "attributes": {
                        "startLine": 213,
                        "endLine": 213
                      }
                    },
                    "dim": null,
                    "attributes": {
                      "startLine": 213,
                      "endLine": 213
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_Variable",
                    "name": "character",
                    "attributes": {
                      "startLine": 213,
                      "endLine": 213
                    }
                  },
                  "attributes": {
                    "startLine": 213,
                    "endLine": 213
                  }
                },
                "attributes": {
                  "startLine": 213,
                  "endLine": 213
                }
              }
            ],
            "attributes": {
              "startLine": 144,
              "endLine": 214
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "codepoints",
              "attributes": {
                "startLine": 216,
                "endLine": 216
              }
            },
            "attributes": {
              "startLine": 216,
              "endLine": 216
            }
          }
        ],
        "attributes": {
          "startLine": 138,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Convert a UTF-8 string to a UCS-4 codepoint array\n\t *\n\t * Based on Requests_IRI::replace_invalid_with_pct_encoding()\n\t *\n\t * @throws Requests_Exception Invalid UTF-8 codepoint (`idna.invalidcodepoint`)\n\t * @param string $input\n\t * @return array Unicode code points\n\t */",
              "line": 129,
              "filePos": 3538,
              "tokenPos": 468,
              "endLine": 137,
              "endFilePos": 3814,
              "endTokenPos": 468
            }
          ],
          "endLine": 217
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 9,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "punycode_encode",
          "attributes": {
            "startLine": 228,
            "endLine": 228
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "input",
              "attributes": {
                "startLine": 228,
                "endLine": 228
              }
            },
            "default": null,
            "attributes": {
              "startLine": 228,
              "endLine": 228
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "output",
                "attributes": {
                  "startLine": 229,
                  "endLine": 229
                }
              },
              "expr": {
                "nodeType": "Scalar_String",
                "value": "",
                "attributes": {
                  "startLine": 229,
                  "endLine": 229,
                  "kind": 1
                }
              },
              "attributes": {
                "startLine": 229,
                "endLine": 229
              }
            },
            "attributes": {
              "startLine": 229,
              "endLine": 229
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "n",
                "attributes": {
                  "startLine": 231,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet n = initial_n\n",
                      "line": 230,
                      "filePos": 6486,
                      "tokenPos": 1118,
                      "endLine": 231,
                      "endFilePos": 6506,
                      "endTokenPos": 1118
                    }
                  ],
                  "endLine": 231
                }
              },
              "expr": {
                "nodeType": "Expr_ClassConstFetch",
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "self"
                  ],
                  "attributes": {
                    "startLine": 231,
                    "endLine": 231
                  }
                },
                "name": {
                  "nodeType": "Identifier",
                  "name": "BOOTSTRAP_INITIAL_N",
                  "attributes": {
                    "startLine": 231,
                    "endLine": 231
                  }
                },
                "attributes": {
                  "startLine": 231,
                  "endLine": 231
                }
              },
              "attributes": {
                "startLine": 231,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet n = initial_n\n",
                    "line": 230,
                    "filePos": 6486,
                    "tokenPos": 1118,
                    "endLine": 231,
                    "endFilePos": 6506,
                    "endTokenPos": 1118
                  }
                ],
                "endLine": 231
              }
            },
            "attributes": {
              "startLine": 231,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet n = initial_n\n",
                  "line": 230,
                  "filePos": 6486,
                  "tokenPos": 1118,
                  "endLine": 231,
                  "endFilePos": 6506,
                  "endTokenPos": 1118
                }
              ],
              "endLine": 231
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "delta",
                "attributes": {
                  "startLine": 233,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet delta = 0\n",
                      "line": 232,
                      "filePos": 6541,
                      "tokenPos": 1129,
                      "endLine": 233,
                      "endFilePos": 6557,
                      "endTokenPos": 1129
                    }
                  ],
                  "endLine": 233
                }
              },
              "expr": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 233,
                  "endLine": 233,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 233,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet delta = 0\n",
                    "line": 232,
                    "filePos": 6541,
                    "tokenPos": 1129,
                    "endLine": 233,
                    "endFilePos": 6557,
                    "endTokenPos": 1129
                  }
                ],
                "endLine": 233
              }
            },
            "attributes": {
              "startLine": 233,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet delta = 0\n",
                  "line": 232,
                  "filePos": 6541,
                  "tokenPos": 1129,
                  "endLine": 233,
                  "endFilePos": 6557,
                  "endTokenPos": 1129
                }
              ],
              "endLine": 233
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "bias",
                "attributes": {
                  "startLine": 235,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet bias = initial_bias\n",
                      "line": 234,
                      "filePos": 6572,
                      "tokenPos": 1138,
                      "endLine": 235,
                      "endFilePos": 6598,
                      "endTokenPos": 1138
                    }
                  ],
                  "endLine": 235
                }
              },
              "expr": {
                "nodeType": "Expr_ClassConstFetch",
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "self"
                  ],
                  "attributes": {
                    "startLine": 235,
                    "endLine": 235
                  }
                },
                "name": {
                  "nodeType": "Identifier",
                  "name": "BOOTSTRAP_INITIAL_BIAS",
                  "attributes": {
                    "startLine": 235,
                    "endLine": 235
                  }
                },
                "attributes": {
                  "startLine": 235,
                  "endLine": 235
                }
              },
              "attributes": {
                "startLine": 235,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet bias = initial_bias\n",
                    "line": 234,
                    "filePos": 6572,
                    "tokenPos": 1138,
                    "endLine": 235,
                    "endFilePos": 6598,
                    "endTokenPos": 1138
                  }
                ],
                "endLine": 235
              }
            },
            "attributes": {
              "startLine": 235,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet bias = initial_bias\n",
                  "line": 234,
                  "filePos": 6572,
                  "tokenPos": 1138,
                  "endLine": 235,
                  "endFilePos": 6598,
                  "endTokenPos": 1138
                }
              ],
              "endLine": 235
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "h",
                "attributes": {
                  "startLine": 237,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet h = b = the number of basic code points in the input\n",
                      "line": 236,
                      "filePos": 6639,
                      "tokenPos": 1149,
                      "endLine": 237,
                      "endFilePos": 6698,
                      "endTokenPos": 1149
                    }
                  ],
                  "endLine": 237
                }
              },
              "expr": {
                "nodeType": "Expr_Assign",
                "var": {
                  "nodeType": "Expr_Variable",
                  "name": "b",
                  "attributes": {
                    "startLine": 237,
                    "endLine": 237
                  }
                },
                "expr": {
                  "nodeType": "Scalar_LNumber",
                  "value": 0,
                  "attributes": {
                    "startLine": 237,
                    "endLine": 237,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 237,
                  "endLine": 237
                }
              },
              "attributes": {
                "startLine": 237,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet h = b = the number of basic code points in the input\n",
                    "line": 236,
                    "filePos": 6639,
                    "tokenPos": 1149,
                    "endLine": 237,
                    "endFilePos": 6698,
                    "endTokenPos": 1149
                  }
                ],
                "endLine": 237
              }
            },
            "attributes": {
              "startLine": 237,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet h = b = the number of basic code points in the input\n",
                  "line": 236,
                  "filePos": 6639,
                  "tokenPos": 1149,
                  "endLine": 237,
                  "endFilePos": 6698,
                  "endTokenPos": 1149
                }
              ],
              "endLine": 237
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "codepoints",
                "attributes": {
                  "startLine": 239,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// see loop\n",
                      "line": 237,
                      "filePos": 6714,
                      "tokenPos": 1162,
                      "endLine": 238,
                      "endFilePos": 6725,
                      "endTokenPos": 1162
                    },
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tcopy them to the output in order\n",
                      "line": 238,
                      "filePos": 6726,
                      "tokenPos": 1163,
                      "endLine": 239,
                      "endFilePos": 6761,
                      "endTokenPos": 1163
                    }
                  ],
                  "endLine": 239
                }
              },
              "expr": {
                "nodeType": "Expr_StaticCall",
                "class": {
                  "nodeType": "Name",
                  "parts": [
                    "self"
                  ],
                  "attributes": {
                    "startLine": 239,
                    "endLine": 239
                  }
                },
                "name": {
                  "nodeType": "Identifier",
                  "name": "utf8_to_codepoints",
                  "attributes": {
                    "startLine": 239,
                    "endLine": 239
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "input",
                      "attributes": {
                        "startLine": 239,
                        "endLine": 239
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 239,
                      "endLine": 239
                    }
                  }
                ],
                "attributes": {
                  "startLine": 239,
                  "endLine": 239
                }
              },
              "attributes": {
                "startLine": 239,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// see loop\n",
                    "line": 237,
                    "filePos": 6714,
                    "tokenPos": 1162,
                    "endLine": 238,
                    "endFilePos": 6725,
                    "endTokenPos": 1162
                  },
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tcopy them to the output in order\n",
                    "line": 238,
                    "filePos": 6726,
                    "tokenPos": 1163,
                    "endLine": 239,
                    "endFilePos": 6761,
                    "endTokenPos": 1163
                  }
                ],
                "endLine": 239
              }
            },
            "attributes": {
              "startLine": 239,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// see loop\n",
                  "line": 237,
                  "filePos": 6714,
                  "tokenPos": 1162,
                  "endLine": 238,
                  "endFilePos": 6725,
                  "endTokenPos": 1162
                },
                {
                  "nodeType": "Comment",
                  "text": "#\t\tcopy them to the output in order\n",
                  "line": 238,
                  "filePos": 6726,
                  "tokenPos": 1163,
                  "endLine": 239,
                  "endFilePos": 6761,
                  "endTokenPos": 1163
                }
              ],
              "endLine": 239
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "extended",
                "attributes": {
                  "startLine": 240,
                  "endLine": 240
                }
              },
              "expr": {
                "nodeType": "Expr_Array",
                "items": [],
                "attributes": {
                  "startLine": 240,
                  "endLine": 240,
                  "kind": 1
                }
              },
              "attributes": {
                "startLine": 240,
                "endLine": 240
              }
            },
            "attributes": {
              "startLine": 240,
              "endLine": 240
            }
          },
          {
            "nodeType": "Stmt_Foreach",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "codepoints",
              "attributes": {
                "startLine": 242,
                "endLine": 242
              }
            },
            "keyVar": null,
            "byRef": false,
            "valueVar": {
              "nodeType": "Expr_Variable",
              "name": "char",
              "attributes": {
                "startLine": 242,
                "endLine": 242
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_If",
                "cond": {
                  "nodeType": "Expr_BinaryOp_Smaller",
                  "left": {
                    "nodeType": "Expr_Variable",
                    "name": "char",
                    "attributes": {
                      "startLine": 243,
                      "endLine": 243
                    }
                  },
                  "right": {
                    "nodeType": "Scalar_LNumber",
                    "value": 128,
                    "attributes": {
                      "startLine": 243,
                      "endLine": 243,
                      "kind": 10
                    }
                  },
                  "attributes": {
                    "startLine": 243,
                    "endLine": 243
                  }
                },
                "stmts": [
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_AssignOp_Concat",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "output",
                        "attributes": {
                          "startLine": 246,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "// Character is valid ASCII\n",
                              "line": 244,
                              "filePos": 6897,
                              "tokenPos": 1210,
                              "endLine": 245,
                              "endFilePos": 6924,
                              "endTokenPos": 1210
                            },
                            {
                              "nodeType": "Comment",
                              "text": "// TODO: this should also check if it's valid for a URL\n",
                              "line": 245,
                              "filePos": 6929,
                              "tokenPos": 1212,
                              "endLine": 246,
                              "endFilePos": 6984,
                              "endTokenPos": 1212
                            }
                          ],
                          "endLine": 246
                        }
                      },
                      "expr": {
                        "nodeType": "Expr_FuncCall",
                        "name": {
                          "nodeType": "Name",
                          "parts": [
                            "chr"
                          ],
                          "attributes": {
                            "startLine": 246,
                            "endLine": 246
                          }
                        },
                        "args": [
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Expr_Variable",
                              "name": "char",
                              "attributes": {
                                "startLine": 246,
                                "endLine": 246
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 246,
                              "endLine": 246
                            }
                          }
                        ],
                        "attributes": {
                          "startLine": 246,
                          "endLine": 246
                        }
                      },
                      "attributes": {
                        "startLine": 246,
                        "comments": [
                          {
                            "nodeType": "Comment",
                            "text": "// Character is valid ASCII\n",
                            "line": 244,
                            "filePos": 6897,
                            "tokenPos": 1210,
                            "endLine": 245,
                            "endFilePos": 6924,
                            "endTokenPos": 1210
                          },
                          {
                            "nodeType": "Comment",
                            "text": "// TODO: this should also check if it's valid for a URL\n",
                            "line": 245,
                            "filePos": 6929,
                            "tokenPos": 1212,
                            "endLine": 246,
                            "endFilePos": 6984,
                            "endTokenPos": 1212
                          }
                        ],
                        "endLine": 246
                      }
                    },
                    "attributes": {
                      "startLine": 246,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Character is valid ASCII\n",
                          "line": 244,
                          "filePos": 6897,
                          "tokenPos": 1210,
                          "endLine": 245,
                          "endFilePos": 6924,
                          "endTokenPos": 1210
                        },
                        {
                          "nodeType": "Comment",
                          "text": "// TODO: this should also check if it's valid for a URL\n",
                          "line": 245,
                          "filePos": 6929,
                          "tokenPos": 1212,
                          "endLine": 246,
                          "endFilePos": 6984,
                          "endTokenPos": 1212
                        }
                      ],
                      "endLine": 246
                    }
                  },
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_PostInc",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "h",
                        "attributes": {
                          "startLine": 247,
                          "endLine": 247
                        }
                      },
                      "attributes": {
                        "startLine": 247,
                        "endLine": 247
                      }
                    },
                    "attributes": {
                      "startLine": 247,
                      "endLine": 247
                    }
                  }
                ],
                "elseifs": [
                  {
                    "nodeType": "Stmt_ElseIf",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Smaller",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "char",
                        "attributes": {
                          "startLine": 252,
                          "endLine": 252
                        }
                      },
                      "right": {
                        "nodeType": "Expr_Variable",
                        "name": "n",
                        "attributes": {
                          "startLine": 252,
                          "endLine": 252
                        }
                      },
                      "attributes": {
                        "startLine": 252,
                        "endLine": 252
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Throw",
                        "expr": {
                          "nodeType": "Expr_New",
                          "class": {
                            "nodeType": "Name",
                            "parts": [
                              "Requests_Exception"
                            ],
                            "attributes": {
                              "startLine": 253,
                              "endLine": 253
                            }
                          },
                          "args": [
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Scalar_String",
                                "value": "Invalid character",
                                "attributes": {
                                  "startLine": 253,
                                  "endLine": 253,
                                  "kind": 1
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 253,
                                "endLine": 253
                              }
                            },
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Scalar_String",
                                "value": "idna.character_outside_domain",
                                "attributes": {
                                  "startLine": 253,
                                  "endLine": 253,
                                  "kind": 1
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 253,
                                "endLine": 253
                              }
                            },
                            {
                              "nodeType": "Arg",
                              "value": {
                                "nodeType": "Expr_Variable",
                                "name": "char",
                                "attributes": {
                                  "startLine": 253,
                                  "endLine": 253
                                }
                              },
                              "byRef": false,
                              "unpack": false,
                              "attributes": {
                                "startLine": 253,
                                "endLine": 253
                              }
                            }
                          ],
                          "attributes": {
                            "startLine": 253,
                            "endLine": 253
                          }
                        },
                        "attributes": {
                          "startLine": 253,
                          "endLine": 253
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 252,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "// Check if the character is non-ASCII, but below initial n\n",
                          "line": 249,
                          "filePos": 7030,
                          "tokenPos": 1230,
                          "endLine": 250,
                          "endFilePos": 7089,
                          "endTokenPos": 1230
                        },
                        {
                          "nodeType": "Comment",
                          "text": "// This never occurs for Punycode, so ignore in coverage\n",
                          "line": 250,
                          "filePos": 7093,
                          "tokenPos": 1232,
                          "endLine": 251,
                          "endFilePos": 7149,
                          "endTokenPos": 1232
                        },
                        {
                          "nodeType": "Comment",
                          "text": "// @codeCoverageIgnoreStart\n",
                          "line": 251,
                          "filePos": 7153,
                          "tokenPos": 1234,
                          "endLine": 252,
                          "endFilePos": 7180,
                          "endTokenPos": 1234
                        }
                      ],
                      "endLine": 254
                    }
                  }
                ],
                "else": {
                  "nodeType": "Stmt_Else",
                  "stmts": [
                    {
                      "nodeType": "Stmt_Expression",
                      "expr": {
                        "nodeType": "Expr_Assign",
                        "var": {
                          "nodeType": "Expr_ArrayDimFetch",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "extended",
                            "attributes": {
                              "startLine": 257,
                              "endLine": 257
                            }
                          },
                          "dim": {
                            "nodeType": "Expr_Variable",
                            "name": "char",
                            "attributes": {
                              "startLine": 257,
                              "endLine": 257
                            }
                          },
                          "attributes": {
                            "startLine": 257,
                            "endLine": 257
                          }
                        },
                        "expr": {
                          "nodeType": "Expr_ConstFetch",
                          "name": {
                            "nodeType": "Name",
                            "parts": [
                              "true"
                            ],
                            "attributes": {
                              "startLine": 257,
                              "endLine": 257
                            }
                          },
                          "attributes": {
                            "startLine": 257,
                            "endLine": 257
                          }
                        },
                        "attributes": {
                          "startLine": 257,
                          "endLine": 257
                        }
                      },
                      "attributes": {
                        "startLine": 257,
                        "endLine": 257
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 256,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "// @codeCoverageIgnoreEnd\n",
                        "line": 255,
                        "filePos": 7309,
                        "tokenPos": 1266,
                        "endLine": 256,
                        "endFilePos": 7334,
                        "endTokenPos": 1266
                      }
                    ],
                    "endLine": 258
                  }
                },
                "attributes": {
                  "startLine": 243,
                  "endLine": 258
                }
              }
            ],
            "attributes": {
              "startLine": 242,
              "endLine": 259
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "extended",
                "attributes": {
                  "startLine": 260,
                  "endLine": 260
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "array_keys"
                  ],
                  "attributes": {
                    "startLine": 260,
                    "endLine": 260
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "extended",
                      "attributes": {
                        "startLine": 260,
                        "endLine": 260
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 260,
                      "endLine": 260
                    }
                  }
                ],
                "attributes": {
                  "startLine": 260,
                  "endLine": 260
                }
              },
              "attributes": {
                "startLine": 260,
                "endLine": 260
              }
            },
            "attributes": {
              "startLine": 260,
              "endLine": 260
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "sort"
                ],
                "attributes": {
                  "startLine": 261,
                  "endLine": 261
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "extended",
                    "attributes": {
                      "startLine": 261,
                      "endLine": 261
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 261,
                    "endLine": 261
                  }
                }
              ],
              "attributes": {
                "startLine": 261,
                "endLine": 261
              }
            },
            "attributes": {
              "startLine": 261,
              "endLine": 261
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "b",
                "attributes": {
                  "startLine": 262,
                  "endLine": 262
                }
              },
              "expr": {
                "nodeType": "Expr_Variable",
                "name": "h",
                "attributes": {
                  "startLine": 262,
                  "endLine": 262
                }
              },
              "attributes": {
                "startLine": 262,
                "endLine": 262
              }
            },
            "attributes": {
              "startLine": 262,
              "endLine": 262
            }
          },
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_Greater",
              "left": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "strlen"
                  ],
                  "attributes": {
                    "startLine": 264,
                    "endLine": 264
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "output",
                      "attributes": {
                        "startLine": 264,
                        "endLine": 264
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 264,
                      "endLine": 264
                    }
                  }
                ],
                "attributes": {
                  "startLine": 264,
                  "endLine": 264
                }
              },
              "right": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 264,
                  "endLine": 264,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 264,
                "endLine": 264
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_AssignOp_Concat",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "output",
                    "attributes": {
                      "startLine": 265,
                      "endLine": 265
                    }
                  },
                  "expr": {
                    "nodeType": "Scalar_String",
                    "value": "-",
                    "attributes": {
                      "startLine": 265,
                      "endLine": 265,
                      "kind": 1
                    }
                  },
                  "attributes": {
                    "startLine": 265,
                    "endLine": 265
                  }
                },
                "attributes": {
                  "startLine": 265,
                  "endLine": 265
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 264,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\t[copy them] followed by a delimiter if b > 0\n",
                  "line": 263,
                  "filePos": 7450,
                  "tokenPos": 1309,
                  "endLine": 264,
                  "endFilePos": 7497,
                  "endTokenPos": 1309
                }
              ],
              "endLine": 266
            }
          },
          {
            "nodeType": "Stmt_While",
            "cond": {
              "nodeType": "Expr_BinaryOp_Smaller",
              "left": {
                "nodeType": "Expr_Variable",
                "name": "h",
                "attributes": {
                  "startLine": 269,
                  "endLine": 269
                }
              },
              "right": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "count"
                  ],
                  "attributes": {
                    "startLine": 269,
                    "endLine": 269
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_Variable",
                      "name": "codepoints",
                      "attributes": {
                        "startLine": 269,
                        "endLine": 269
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 269,
                      "endLine": 269
                    }
                  }
                ],
                "attributes": {
                  "startLine": 269,
                  "endLine": 269
                }
              },
              "attributes": {
                "startLine": 269,
                "endLine": 269
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "m",
                    "attributes": {
                      "startLine": 271,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tlet m = the minimum code point >= n in the input\n",
                          "line": 270,
                          "filePos": 7686,
                          "tokenPos": 1353,
                          "endLine": 271,
                          "endFilePos": 7738,
                          "endTokenPos": 1353
                        }
                      ],
                      "endLine": 271
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "array_shift"
                      ],
                      "attributes": {
                        "startLine": 271,
                        "endLine": 271
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_Variable",
                          "name": "extended",
                          "attributes": {
                            "startLine": 271,
                            "endLine": 271
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 271,
                          "endLine": 271
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 271,
                      "endLine": 271
                    }
                  },
                  "attributes": {
                    "startLine": 271,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tlet m = the minimum code point >= n in the input\n",
                        "line": 270,
                        "filePos": 7686,
                        "tokenPos": 1353,
                        "endLine": 271,
                        "endFilePos": 7738,
                        "endTokenPos": 1353
                      }
                    ],
                    "endLine": 271
                  }
                },
                "attributes": {
                  "startLine": 271,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tlet m = the minimum code point >= n in the input\n",
                      "line": 270,
                      "filePos": 7686,
                      "tokenPos": 1353,
                      "endLine": 271,
                      "endFilePos": 7738,
                      "endTokenPos": 1353
                    }
                  ],
                  "endLine": 271
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_AssignOp_Plus",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "delta",
                    "attributes": {
                      "startLine": 274,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "//printf('next code point to insert is %s' . PHP_EOL, dechex($m));\n",
                          "line": 272,
                          "filePos": 7774,
                          "tokenPos": 1365,
                          "endLine": 273,
                          "endFilePos": 7840,
                          "endTokenPos": 1365
                        },
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tlet delta = delta + (m - n) * (h + 1), fail on overflow\n",
                          "line": 273,
                          "filePos": 7841,
                          "tokenPos": 1366,
                          "endLine": 274,
                          "endFilePos": 7900,
                          "endTokenPos": 1366
                        }
                      ],
                      "endLine": 274
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_BinaryOp_Mul",
                    "left": {
                      "nodeType": "Expr_BinaryOp_Minus",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "m",
                        "attributes": {
                          "startLine": 274,
                          "endLine": 274
                        }
                      },
                      "right": {
                        "nodeType": "Expr_Variable",
                        "name": "n",
                        "attributes": {
                          "startLine": 274,
                          "endLine": 274
                        }
                      },
                      "attributes": {
                        "startLine": 274,
                        "endLine": 274
                      }
                    },
                    "right": {
                      "nodeType": "Expr_BinaryOp_Plus",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "h",
                        "attributes": {
                          "startLine": 274,
                          "endLine": 274
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 1,
                        "attributes": {
                          "startLine": 274,
                          "endLine": 274,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 274,
                        "endLine": 274
                      }
                    },
                    "attributes": {
                      "startLine": 274,
                      "endLine": 274
                    }
                  },
                  "attributes": {
                    "startLine": 274,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "//printf('next code point to insert is %s' . PHP_EOL, dechex($m));\n",
                        "line": 272,
                        "filePos": 7774,
                        "tokenPos": 1365,
                        "endLine": 273,
                        "endFilePos": 7840,
                        "endTokenPos": 1365
                      },
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tlet delta = delta + (m - n) * (h + 1), fail on overflow\n",
                        "line": 273,
                        "filePos": 7841,
                        "tokenPos": 1366,
                        "endLine": 274,
                        "endFilePos": 7900,
                        "endTokenPos": 1366
                      }
                    ],
                    "endLine": 274
                  }
                },
                "attributes": {
                  "startLine": 274,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "//printf('next code point to insert is %s' . PHP_EOL, dechex($m));\n",
                      "line": 272,
                      "filePos": 7774,
                      "tokenPos": 1365,
                      "endLine": 273,
                      "endFilePos": 7840,
                      "endTokenPos": 1365
                    },
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tlet delta = delta + (m - n) * (h + 1), fail on overflow\n",
                      "line": 273,
                      "filePos": 7841,
                      "tokenPos": 1366,
                      "endLine": 274,
                      "endFilePos": 7900,
                      "endTokenPos": 1366
                    }
                  ],
                  "endLine": 274
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "n",
                    "attributes": {
                      "startLine": 276,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tlet n = m\n",
                          "line": 275,
                          "filePos": 7936,
                          "tokenPos": 1391,
                          "endLine": 276,
                          "endFilePos": 7949,
                          "endTokenPos": 1391
                        }
                      ],
                      "endLine": 276
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_Variable",
                    "name": "m",
                    "attributes": {
                      "startLine": 276,
                      "endLine": 276
                    }
                  },
                  "attributes": {
                    "startLine": 276,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tlet n = m\n",
                        "line": 275,
                        "filePos": 7936,
                        "tokenPos": 1391,
                        "endLine": 276,
                        "endFilePos": 7949,
                        "endTokenPos": 1391
                      }
                    ],
                    "endLine": 276
                  }
                },
                "attributes": {
                  "startLine": 276,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tlet n = m\n",
                      "line": 275,
                      "filePos": 7936,
                      "tokenPos": 1391,
                      "endLine": 276,
                      "endFilePos": 7949,
                      "endTokenPos": 1391
                    }
                  ],
                  "endLine": 276
                }
              },
              {
                "nodeType": "Stmt_For",
                "init": [
                  {
                    "nodeType": "Expr_Assign",
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "num",
                      "attributes": {
                        "startLine": 278,
                        "endLine": 278
                      }
                    },
                    "expr": {
                      "nodeType": "Scalar_LNumber",
                      "value": 0,
                      "attributes": {
                        "startLine": 278,
                        "endLine": 278,
                        "kind": 10
                      }
                    },
                    "attributes": {
                      "startLine": 278,
                      "endLine": 278
                    }
                  }
                ],
                "cond": [
                  {
                    "nodeType": "Expr_BinaryOp_Smaller",
                    "left": {
                      "nodeType": "Expr_Variable",
                      "name": "num",
                      "attributes": {
                        "startLine": 278,
                        "endLine": 278
                      }
                    },
                    "right": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "count"
                        ],
                        "attributes": {
                          "startLine": 278,
                          "endLine": 278
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_Variable",
                            "name": "codepoints",
                            "attributes": {
                              "startLine": 278,
                              "endLine": 278
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 278,
                            "endLine": 278
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 278,
                        "endLine": 278
                      }
                    },
                    "attributes": {
                      "startLine": 278,
                      "endLine": 278
                    }
                  }
                ],
                "loop": [
                  {
                    "nodeType": "Expr_PostInc",
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "num",
                      "attributes": {
                        "startLine": 278,
                        "endLine": 278
                      }
                    },
                    "attributes": {
                      "startLine": 278,
                      "endLine": 278
                    }
                  }
                ],
                "stmts": [
                  {
                    "nodeType": "Stmt_Expression",
                    "expr": {
                      "nodeType": "Expr_Assign",
                      "var": {
                        "nodeType": "Expr_Variable",
                        "name": "c",
                        "attributes": {
                          "startLine": 279,
                          "endLine": 279
                        }
                      },
                      "expr": {
                        "nodeType": "Expr_ArrayDimFetch",
                        "var": {
                          "nodeType": "Expr_Variable",
                          "name": "codepoints",
                          "attributes": {
                            "startLine": 279,
                            "endLine": 279
                          }
                        },
                        "dim": {
                          "nodeType": "Expr_Variable",
                          "name": "num",
                          "attributes": {
                            "startLine": 279,
                            "endLine": 279
                          }
                        },
                        "attributes": {
                          "startLine": 279,
                          "endLine": 279
                        }
                      },
                      "attributes": {
                        "startLine": 279,
                        "endLine": 279
                      }
                    },
                    "attributes": {
                      "startLine": 279,
                      "endLine": 279
                    }
                  },
                  {
                    "nodeType": "Stmt_If",
                    "cond": {
                      "nodeType": "Expr_BinaryOp_Smaller",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "c",
                        "attributes": {
                          "startLine": 281,
                          "endLine": 281
                        }
                      },
                      "right": {
                        "nodeType": "Expr_Variable",
                        "name": "n",
                        "attributes": {
                          "startLine": 281,
                          "endLine": 281
                        }
                      },
                      "attributes": {
                        "startLine": 281,
                        "endLine": 281
                      }
                    },
                    "stmts": [
                      {
                        "nodeType": "Stmt_Expression",
                        "expr": {
                          "nodeType": "Expr_PostInc",
                          "var": {
                            "nodeType": "Expr_Variable",
                            "name": "delta",
                            "attributes": {
                              "startLine": 282,
                              "endLine": 282
                            }
                          },
                          "attributes": {
                            "startLine": 282,
                            "endLine": 282
                          }
                        },
                        "attributes": {
                          "startLine": 282,
                          "endLine": 282
                        }
                      }
                    ],
                    "elseifs": [
                      {
                        "nodeType": "Stmt_ElseIf",
                        "cond": {
                          "nodeType": "Expr_BinaryOp_Identical",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "c",
                            "attributes": {
                              "startLine": 285,
                              "endLine": 285
                            }
                          },
                          "right": {
                            "nodeType": "Expr_Variable",
                            "name": "n",
                            "attributes": {
                              "startLine": 285,
                              "endLine": 285
                            }
                          },
                          "attributes": {
                            "startLine": 285,
                            "endLine": 285
                          }
                        },
                        "stmts": [
                          {
                            "nodeType": "Stmt_Expression",
                            "expr": {
                              "nodeType": "Expr_Assign",
                              "var": {
                                "nodeType": "Expr_Variable",
                                "name": "q",
                                "attributes": {
                                  "startLine": 287,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\tlet q = delta\n",
                                      "line": 286,
                                      "filePos": 8248,
                                      "tokenPos": 1472,
                                      "endLine": 287,
                                      "endFilePos": 8267,
                                      "endTokenPos": 1472
                                    }
                                  ],
                                  "endLine": 287
                                }
                              },
                              "expr": {
                                "nodeType": "Expr_Variable",
                                "name": "delta",
                                "attributes": {
                                  "startLine": 287,
                                  "endLine": 287
                                }
                              },
                              "attributes": {
                                "startLine": 287,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "#\t\t\t\t\tlet q = delta\n",
                                    "line": 286,
                                    "filePos": 8248,
                                    "tokenPos": 1472,
                                    "endLine": 287,
                                    "endFilePos": 8267,
                                    "endTokenPos": 1472
                                  }
                                ],
                                "endLine": 287
                              }
                            },
                            "attributes": {
                              "startLine": 287,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\tlet q = delta\n",
                                  "line": 286,
                                  "filePos": 8248,
                                  "tokenPos": 1472,
                                  "endLine": 287,
                                  "endFilePos": 8267,
                                  "endTokenPos": 1472
                                }
                              ],
                              "endLine": 287
                            }
                          },
                          {
                            "nodeType": "Stmt_For",
                            "init": [
                              {
                                "nodeType": "Expr_Assign",
                                "var": {
                                  "nodeType": "Expr_Variable",
                                  "name": "k",
                                  "attributes": {
                                    "startLine": 289,
                                    "endLine": 289
                                  }
                                },
                                "expr": {
                                  "nodeType": "Expr_ClassConstFetch",
                                  "class": {
                                    "nodeType": "Name",
                                    "parts": [
                                      "self"
                                    ],
                                    "attributes": {
                                      "startLine": 289,
                                      "endLine": 289
                                    }
                                  },
                                  "name": {
                                    "nodeType": "Identifier",
                                    "name": "BOOTSTRAP_BASE",
                                    "attributes": {
                                      "startLine": 289,
                                      "endLine": 289
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 289,
                                    "endLine": 289
                                  }
                                },
                                "attributes": {
                                  "startLine": 289,
                                  "endLine": 289
                                }
                              }
                            ],
                            "cond": [],
                            "loop": [
                              {
                                "nodeType": "Expr_AssignOp_Plus",
                                "var": {
                                  "nodeType": "Expr_Variable",
                                  "name": "k",
                                  "attributes": {
                                    "startLine": 289,
                                    "endLine": 289
                                  }
                                },
                                "expr": {
                                  "nodeType": "Expr_ClassConstFetch",
                                  "class": {
                                    "nodeType": "Name",
                                    "parts": [
                                      "self"
                                    ],
                                    "attributes": {
                                      "startLine": 289,
                                      "endLine": 289
                                    }
                                  },
                                  "name": {
                                    "nodeType": "Identifier",
                                    "name": "BOOTSTRAP_BASE",
                                    "attributes": {
                                      "startLine": 289,
                                      "endLine": 289
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 289,
                                    "endLine": 289
                                  }
                                },
                                "attributes": {
                                  "startLine": 289,
                                  "endLine": 289
                                }
                              }
                            ],
                            "stmts": [
                              {
                                "nodeType": "Stmt_If",
                                "cond": {
                                  "nodeType": "Expr_BinaryOp_SmallerOrEqual",
                                  "left": {
                                    "nodeType": "Expr_Variable",
                                    "name": "k",
                                    "attributes": {
                                      "startLine": 292,
                                      "endLine": 292
                                    }
                                  },
                                  "right": {
                                    "nodeType": "Expr_BinaryOp_Plus",
                                    "left": {
                                      "nodeType": "Expr_Variable",
                                      "name": "bias",
                                      "attributes": {
                                        "startLine": 292,
                                        "endLine": 292
                                      }
                                    },
                                    "right": {
                                      "nodeType": "Expr_ClassConstFetch",
                                      "class": {
                                        "nodeType": "Name",
                                        "parts": [
                                          "self"
                                        ],
                                        "attributes": {
                                          "startLine": 292,
                                          "endLine": 292
                                        }
                                      },
                                      "name": {
                                        "nodeType": "Identifier",
                                        "name": "BOOTSTRAP_TMIN",
                                        "attributes": {
                                          "startLine": 292,
                                          "endLine": 292
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 292,
                                        "endLine": 292
                                      }
                                    },
                                    "attributes": {
                                      "startLine": 292,
                                      "endLine": 292
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 292,
                                    "endLine": 292
                                  }
                                },
                                "stmts": [
                                  {
                                    "nodeType": "Stmt_Expression",
                                    "expr": {
                                      "nodeType": "Expr_Assign",
                                      "var": {
                                        "nodeType": "Expr_Variable",
                                        "name": "t",
                                        "attributes": {
                                          "startLine": 293,
                                          "endLine": 293
                                        }
                                      },
                                      "expr": {
                                        "nodeType": "Expr_ClassConstFetch",
                                        "class": {
                                          "nodeType": "Name",
                                          "parts": [
                                            "self"
                                          ],
                                          "attributes": {
                                            "startLine": 293,
                                            "endLine": 293
                                          }
                                        },
                                        "name": {
                                          "nodeType": "Identifier",
                                          "name": "BOOTSTRAP_TMIN",
                                          "attributes": {
                                            "startLine": 293,
                                            "endLine": 293
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 293,
                                          "endLine": 293
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 293,
                                        "endLine": 293
                                      }
                                    },
                                    "attributes": {
                                      "startLine": 293,
                                      "endLine": 293
                                    }
                                  }
                                ],
                                "elseifs": [
                                  {
                                    "nodeType": "Stmt_ElseIf",
                                    "cond": {
                                      "nodeType": "Expr_BinaryOp_GreaterOrEqual",
                                      "left": {
                                        "nodeType": "Expr_Variable",
                                        "name": "k",
                                        "attributes": {
                                          "startLine": 295,
                                          "endLine": 295
                                        }
                                      },
                                      "right": {
                                        "nodeType": "Expr_BinaryOp_Plus",
                                        "left": {
                                          "nodeType": "Expr_Variable",
                                          "name": "bias",
                                          "attributes": {
                                            "startLine": 295,
                                            "endLine": 295
                                          }
                                        },
                                        "right": {
                                          "nodeType": "Expr_ClassConstFetch",
                                          "class": {
                                            "nodeType": "Name",
                                            "parts": [
                                              "self"
                                            ],
                                            "attributes": {
                                              "startLine": 295,
                                              "endLine": 295
                                            }
                                          },
                                          "name": {
                                            "nodeType": "Identifier",
                                            "name": "BOOTSTRAP_TMAX",
                                            "attributes": {
                                              "startLine": 295,
                                              "endLine": 295
                                            }
                                          },
                                          "attributes": {
                                            "startLine": 295,
                                            "endLine": 295
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 295,
                                          "endLine": 295
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 295,
                                        "endLine": 295
                                      }
                                    },
                                    "stmts": [
                                      {
                                        "nodeType": "Stmt_Expression",
                                        "expr": {
                                          "nodeType": "Expr_Assign",
                                          "var": {
                                            "nodeType": "Expr_Variable",
                                            "name": "t",
                                            "attributes": {
                                              "startLine": 296,
                                              "endLine": 296
                                            }
                                          },
                                          "expr": {
                                            "nodeType": "Expr_ClassConstFetch",
                                            "class": {
                                              "nodeType": "Name",
                                              "parts": [
                                                "self"
                                              ],
                                              "attributes": {
                                                "startLine": 296,
                                                "endLine": 296
                                              }
                                            },
                                            "name": {
                                              "nodeType": "Identifier",
                                              "name": "BOOTSTRAP_TMAX",
                                              "attributes": {
                                                "startLine": 296,
                                                "endLine": 296
                                              }
                                            },
                                            "attributes": {
                                              "startLine": 296,
                                              "endLine": 296
                                            }
                                          },
                                          "attributes": {
                                            "startLine": 296,
                                            "endLine": 296
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 296,
                                          "endLine": 296
                                        }
                                      }
                                    ],
                                    "attributes": {
                                      "startLine": 295,
                                      "endLine": 297
                                    }
                                  }
                                ],
                                "else": {
                                  "nodeType": "Stmt_Else",
                                  "stmts": [
                                    {
                                      "nodeType": "Stmt_Expression",
                                      "expr": {
                                        "nodeType": "Expr_Assign",
                                        "var": {
                                          "nodeType": "Expr_Variable",
                                          "name": "t",
                                          "attributes": {
                                            "startLine": 299,
                                            "endLine": 299
                                          }
                                        },
                                        "expr": {
                                          "nodeType": "Expr_BinaryOp_Minus",
                                          "left": {
                                            "nodeType": "Expr_Variable",
                                            "name": "k",
                                            "attributes": {
                                              "startLine": 299,
                                              "endLine": 299
                                            }
                                          },
                                          "right": {
                                            "nodeType": "Expr_Variable",
                                            "name": "bias",
                                            "attributes": {
                                              "startLine": 299,
                                              "endLine": 299
                                            }
                                          },
                                          "attributes": {
                                            "startLine": 299,
                                            "endLine": 299
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 299,
                                          "endLine": 299
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 299,
                                        "endLine": 299
                                      }
                                    }
                                  ],
                                  "attributes": {
                                    "startLine": 298,
                                    "endLine": 300
                                  }
                                },
                                "attributes": {
                                  "startLine": 292,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\t\tlet t = tmin if k <= bias {+ tmin}, or\n",
                                      "line": 290,
                                      "filePos": 8412,
                                      "tokenPos": 1508,
                                      "endLine": 291,
                                      "endFilePos": 8457,
                                      "endTokenPos": 1508
                                    },
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\t\t\t\ttmax if k >= bias + tmax, or k - bias otherwise\n",
                                      "line": 291,
                                      "filePos": 8458,
                                      "tokenPos": 1509,
                                      "endLine": 292,
                                      "endFilePos": 8514,
                                      "endTokenPos": 1509
                                    }
                                  ],
                                  "endLine": 300
                                }
                              },
                              {
                                "nodeType": "Stmt_If",
                                "cond": {
                                  "nodeType": "Expr_BinaryOp_Smaller",
                                  "left": {
                                    "nodeType": "Expr_Variable",
                                    "name": "q",
                                    "attributes": {
                                      "startLine": 302,
                                      "endLine": 302
                                    }
                                  },
                                  "right": {
                                    "nodeType": "Expr_Variable",
                                    "name": "t",
                                    "attributes": {
                                      "startLine": 302,
                                      "endLine": 302
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 302,
                                    "endLine": 302
                                  }
                                },
                                "stmts": [
                                  {
                                    "nodeType": "Stmt_Break",
                                    "num": null,
                                    "attributes": {
                                      "startLine": 303,
                                      "endLine": 303
                                    }
                                  }
                                ],
                                "elseifs": [],
                                "else": null,
                                "attributes": {
                                  "startLine": 302,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\t\tif q < t then break\n",
                                      "line": 301,
                                      "filePos": 8748,
                                      "tokenPos": 1590,
                                      "endLine": 302,
                                      "endFilePos": 8774,
                                      "endTokenPos": 1590
                                    }
                                  ],
                                  "endLine": 304
                                }
                              },
                              {
                                "nodeType": "Stmt_Expression",
                                "expr": {
                                  "nodeType": "Expr_Assign",
                                  "var": {
                                    "nodeType": "Expr_Variable",
                                    "name": "digit",
                                    "attributes": {
                                      "startLine": 306,
                                      "comments": [
                                        {
                                          "nodeType": "Comment",
                                          "text": "#\t\t\t\t\t\toutput the code point for digit t + ((q - t) mod (base - t))\n",
                                          "line": 305,
                                          "filePos": 8818,
                                          "tokenPos": 1609,
                                          "endLine": 306,
                                          "endFilePos": 8885,
                                          "endTokenPos": 1609
                                        }
                                      ],
                                      "endLine": 306
                                    }
                                  },
                                  "expr": {
                                    "nodeType": "Expr_BinaryOp_Plus",
                                    "left": {
                                      "nodeType": "Expr_Variable",
                                      "name": "t",
                                      "attributes": {
                                        "startLine": 306,
                                        "endLine": 306
                                      }
                                    },
                                    "right": {
                                      "nodeType": "Expr_BinaryOp_Mod",
                                      "left": {
                                        "nodeType": "Expr_BinaryOp_Minus",
                                        "left": {
                                          "nodeType": "Expr_Variable",
                                          "name": "q",
                                          "attributes": {
                                            "startLine": 306,
                                            "endLine": 306
                                          }
                                        },
                                        "right": {
                                          "nodeType": "Expr_Variable",
                                          "name": "t",
                                          "attributes": {
                                            "startLine": 306,
                                            "endLine": 306
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 306,
                                          "endLine": 306
                                        }
                                      },
                                      "right": {
                                        "nodeType": "Expr_BinaryOp_Minus",
                                        "left": {
                                          "nodeType": "Expr_ClassConstFetch",
                                          "class": {
                                            "nodeType": "Name",
                                            "parts": [
                                              "self"
                                            ],
                                            "attributes": {
                                              "startLine": 306,
                                              "endLine": 306
                                            }
                                          },
                                          "name": {
                                            "nodeType": "Identifier",
                                            "name": "BOOTSTRAP_BASE",
                                            "attributes": {
                                              "startLine": 306,
                                              "endLine": 306
                                            }
                                          },
                                          "attributes": {
                                            "startLine": 306,
                                            "endLine": 306
                                          }
                                        },
                                        "right": {
                                          "nodeType": "Expr_Variable",
                                          "name": "t",
                                          "attributes": {
                                            "startLine": 306,
                                            "endLine": 306
                                          }
                                        },
                                        "attributes": {
                                          "startLine": 306,
                                          "endLine": 306
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 306,
                                        "endLine": 306
                                      }
                                    },
                                    "attributes": {
                                      "startLine": 306,
                                      "endLine": 306
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 306,
                                    "comments": [
                                      {
                                        "nodeType": "Comment",
                                        "text": "#\t\t\t\t\t\toutput the code point for digit t + ((q - t) mod (base - t))\n",
                                        "line": 305,
                                        "filePos": 8818,
                                        "tokenPos": 1609,
                                        "endLine": 306,
                                        "endFilePos": 8885,
                                        "endTokenPos": 1609
                                      }
                                    ],
                                    "endLine": 306
                                  }
                                },
                                "attributes": {
                                  "startLine": 306,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\t\toutput the code point for digit t + ((q - t) mod (base - t))\n",
                                      "line": 305,
                                      "filePos": 8818,
                                      "tokenPos": 1609,
                                      "endLine": 306,
                                      "endFilePos": 8885,
                                      "endTokenPos": 1609
                                    }
                                  ],
                                  "endLine": 306
                                }
                              },
                              {
                                "nodeType": "Stmt_Expression",
                                "expr": {
                                  "nodeType": "Expr_AssignOp_Concat",
                                  "var": {
                                    "nodeType": "Expr_Variable",
                                    "name": "output",
                                    "attributes": {
                                      "startLine": 307,
                                      "endLine": 307
                                    }
                                  },
                                  "expr": {
                                    "nodeType": "Expr_StaticCall",
                                    "class": {
                                      "nodeType": "Name",
                                      "parts": [
                                        "self"
                                      ],
                                      "attributes": {
                                        "startLine": 307,
                                        "endLine": 307
                                      }
                                    },
                                    "name": {
                                      "nodeType": "Identifier",
                                      "name": "digit_to_char",
                                      "attributes": {
                                        "startLine": 307,
                                        "endLine": 307
                                      }
                                    },
                                    "args": [
                                      {
                                        "nodeType": "Arg",
                                        "value": {
                                          "nodeType": "Expr_Variable",
                                          "name": "digit",
                                          "attributes": {
                                            "startLine": 307,
                                            "endLine": 307
                                          }
                                        },
                                        "byRef": false,
                                        "unpack": false,
                                        "attributes": {
                                          "startLine": 307,
                                          "endLine": 307
                                        }
                                      }
                                    ],
                                    "attributes": {
                                      "startLine": 307,
                                      "endLine": 307
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 307,
                                    "endLine": 307
                                  }
                                },
                                "attributes": {
                                  "startLine": 307,
                                  "endLine": 307
                                }
                              },
                              {
                                "nodeType": "Stmt_Expression",
                                "expr": {
                                  "nodeType": "Expr_Assign",
                                  "var": {
                                    "nodeType": "Expr_Variable",
                                    "name": "q",
                                    "attributes": {
                                      "startLine": 309,
                                      "comments": [
                                        {
                                          "nodeType": "Comment",
                                          "text": "#\t\t\t\t\t\tlet q = (q - t) div (base - t)\n",
                                          "line": 308,
                                          "filePos": 8995,
                                          "tokenPos": 1654,
                                          "endLine": 309,
                                          "endFilePos": 9032,
                                          "endTokenPos": 1654
                                        }
                                      ],
                                      "endLine": 309
                                    }
                                  },
                                  "expr": {
                                    "nodeType": "Expr_FuncCall",
                                    "name": {
                                      "nodeType": "Name",
                                      "parts": [
                                        "floor"
                                      ],
                                      "attributes": {
                                        "startLine": 309,
                                        "endLine": 309
                                      }
                                    },
                                    "args": [
                                      {
                                        "nodeType": "Arg",
                                        "value": {
                                          "nodeType": "Expr_BinaryOp_Div",
                                          "left": {
                                            "nodeType": "Expr_BinaryOp_Minus",
                                            "left": {
                                              "nodeType": "Expr_Variable",
                                              "name": "q",
                                              "attributes": {
                                                "startLine": 309,
                                                "endLine": 309
                                              }
                                            },
                                            "right": {
                                              "nodeType": "Expr_Variable",
                                              "name": "t",
                                              "attributes": {
                                                "startLine": 309,
                                                "endLine": 309
                                              }
                                            },
                                            "attributes": {
                                              "startLine": 309,
                                              "endLine": 309
                                            }
                                          },
                                          "right": {
                                            "nodeType": "Expr_BinaryOp_Minus",
                                            "left": {
                                              "nodeType": "Expr_ClassConstFetch",
                                              "class": {
                                                "nodeType": "Name",
                                                "parts": [
                                                  "self"
                                                ],
                                                "attributes": {
                                                  "startLine": 309,
                                                  "endLine": 309
                                                }
                                              },
                                              "name": {
                                                "nodeType": "Identifier",
                                                "name": "BOOTSTRAP_BASE",
                                                "attributes": {
                                                  "startLine": 309,
                                                  "endLine": 309
                                                }
                                              },
                                              "attributes": {
                                                "startLine": 309,
                                                "endLine": 309
                                              }
                                            },
                                            "right": {
                                              "nodeType": "Expr_Variable",
                                              "name": "t",
                                              "attributes": {
                                                "startLine": 309,
                                                "endLine": 309
                                              }
                                            },
                                            "attributes": {
                                              "startLine": 309,
                                              "endLine": 309
                                            }
                                          },
                                          "attributes": {
                                            "startLine": 309,
                                            "endLine": 309
                                          }
                                        },
                                        "byRef": false,
                                        "unpack": false,
                                        "attributes": {
                                          "startLine": 309,
                                          "endLine": 309
                                        }
                                      }
                                    ],
                                    "attributes": {
                                      "startLine": 309,
                                      "endLine": 309
                                    }
                                  },
                                  "attributes": {
                                    "startLine": 309,
                                    "comments": [
                                      {
                                        "nodeType": "Comment",
                                        "text": "#\t\t\t\t\t\tlet q = (q - t) div (base - t)\n",
                                        "line": 308,
                                        "filePos": 8995,
                                        "tokenPos": 1654,
                                        "endLine": 309,
                                        "endFilePos": 9032,
                                        "endTokenPos": 1654
                                      }
                                    ],
                                    "endLine": 309
                                  }
                                },
                                "attributes": {
                                  "startLine": 309,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\t\tlet q = (q - t) div (base - t)\n",
                                      "line": 308,
                                      "filePos": 8995,
                                      "tokenPos": 1654,
                                      "endLine": 309,
                                      "endFilePos": 9032,
                                      "endTokenPos": 1654
                                    }
                                  ],
                                  "endLine": 309
                                }
                              },
                              {
                                "nodeType": "Stmt_Nop",
                                "attributes": {
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\tend\n",
                                      "line": 310,
                                      "filePos": 9092,
                                      "tokenPos": 1684,
                                      "endLine": 311,
                                      "endFilePos": 9101,
                                      "endTokenPos": 1684
                                    }
                                  ],
                                  "startLine": 311,
                                  "endLine": 311,
                                  "startFilePos": 9102,
                                  "endFilePos": 9101,
                                  "startTokenPos": 1685,
                                  "endTokenPos": 1684
                                }
                              }
                            ],
                            "attributes": {
                              "startLine": 289,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\tfor k = base to infinity in steps of base do begin\n",
                                  "line": 288,
                                  "filePos": 8286,
                                  "tokenPos": 1481,
                                  "endLine": 289,
                                  "endFilePos": 8342,
                                  "endTokenPos": 1481
                                }
                              ],
                              "endLine": 311
                            }
                          },
                          {
                            "nodeType": "Stmt_Expression",
                            "expr": {
                              "nodeType": "Expr_AssignOp_Concat",
                              "var": {
                                "nodeType": "Expr_Variable",
                                "name": "output",
                                "attributes": {
                                  "startLine": 313,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\toutput the code point for digit q\n",
                                      "line": 312,
                                      "filePos": 9109,
                                      "tokenPos": 1688,
                                      "endLine": 313,
                                      "endFilePos": 9148,
                                      "endTokenPos": 1688
                                    }
                                  ],
                                  "endLine": 313
                                }
                              },
                              "expr": {
                                "nodeType": "Expr_StaticCall",
                                "class": {
                                  "nodeType": "Name",
                                  "parts": [
                                    "self"
                                  ],
                                  "attributes": {
                                    "startLine": 313,
                                    "endLine": 313
                                  }
                                },
                                "name": {
                                  "nodeType": "Identifier",
                                  "name": "digit_to_char",
                                  "attributes": {
                                    "startLine": 313,
                                    "endLine": 313
                                  }
                                },
                                "args": [
                                  {
                                    "nodeType": "Arg",
                                    "value": {
                                      "nodeType": "Expr_Variable",
                                      "name": "q",
                                      "attributes": {
                                        "startLine": 313,
                                        "endLine": 313
                                      }
                                    },
                                    "byRef": false,
                                    "unpack": false,
                                    "attributes": {
                                      "startLine": 313,
                                      "endLine": 313
                                    }
                                  }
                                ],
                                "attributes": {
                                  "startLine": 313,
                                  "endLine": 313
                                }
                              },
                              "attributes": {
                                "startLine": 313,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "#\t\t\t\t\toutput the code point for digit q\n",
                                    "line": 312,
                                    "filePos": 9109,
                                    "tokenPos": 1688,
                                    "endLine": 313,
                                    "endFilePos": 9148,
                                    "endTokenPos": 1688
                                  }
                                ],
                                "endLine": 313
                              }
                            },
                            "attributes": {
                              "startLine": 313,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\toutput the code point for digit q\n",
                                  "line": 312,
                                  "filePos": 9109,
                                  "tokenPos": 1688,
                                  "endLine": 313,
                                  "endFilePos": 9148,
                                  "endTokenPos": 1688
                                }
                              ],
                              "endLine": 313
                            }
                          },
                          {
                            "nodeType": "Stmt_Expression",
                            "expr": {
                              "nodeType": "Expr_Assign",
                              "var": {
                                "nodeType": "Expr_Variable",
                                "name": "bias",
                                "attributes": {
                                  "startLine": 315,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\tlet bias = adapt(delta, h + 1, test h equals b?)\n",
                                      "line": 314,
                                      "filePos": 9190,
                                      "tokenPos": 1702,
                                      "endLine": 315,
                                      "endFilePos": 9244,
                                      "endTokenPos": 1702
                                    }
                                  ],
                                  "endLine": 315
                                }
                              },
                              "expr": {
                                "nodeType": "Expr_StaticCall",
                                "class": {
                                  "nodeType": "Name",
                                  "parts": [
                                    "self"
                                  ],
                                  "attributes": {
                                    "startLine": 315,
                                    "endLine": 315
                                  }
                                },
                                "name": {
                                  "nodeType": "Identifier",
                                  "name": "adapt",
                                  "attributes": {
                                    "startLine": 315,
                                    "endLine": 315
                                  }
                                },
                                "args": [
                                  {
                                    "nodeType": "Arg",
                                    "value": {
                                      "nodeType": "Expr_Variable",
                                      "name": "delta",
                                      "attributes": {
                                        "startLine": 315,
                                        "endLine": 315
                                      }
                                    },
                                    "byRef": false,
                                    "unpack": false,
                                    "attributes": {
                                      "startLine": 315,
                                      "endLine": 315
                                    }
                                  },
                                  {
                                    "nodeType": "Arg",
                                    "value": {
                                      "nodeType": "Expr_BinaryOp_Plus",
                                      "left": {
                                        "nodeType": "Expr_Variable",
                                        "name": "h",
                                        "attributes": {
                                          "startLine": 315,
                                          "endLine": 315
                                        }
                                      },
                                      "right": {
                                        "nodeType": "Scalar_LNumber",
                                        "value": 1,
                                        "attributes": {
                                          "startLine": 315,
                                          "endLine": 315,
                                          "kind": 10
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 315,
                                        "endLine": 315
                                      }
                                    },
                                    "byRef": false,
                                    "unpack": false,
                                    "attributes": {
                                      "startLine": 315,
                                      "endLine": 315
                                    }
                                  },
                                  {
                                    "nodeType": "Arg",
                                    "value": {
                                      "nodeType": "Expr_BinaryOp_Identical",
                                      "left": {
                                        "nodeType": "Expr_Variable",
                                        "name": "h",
                                        "attributes": {
                                          "startLine": 315,
                                          "endLine": 315
                                        }
                                      },
                                      "right": {
                                        "nodeType": "Expr_Variable",
                                        "name": "b",
                                        "attributes": {
                                          "startLine": 315,
                                          "endLine": 315
                                        }
                                      },
                                      "attributes": {
                                        "startLine": 315,
                                        "endLine": 315
                                      }
                                    },
                                    "byRef": false,
                                    "unpack": false,
                                    "attributes": {
                                      "startLine": 315,
                                      "endLine": 315
                                    }
                                  }
                                ],
                                "attributes": {
                                  "startLine": 315,
                                  "endLine": 315
                                }
                              },
                              "attributes": {
                                "startLine": 315,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "#\t\t\t\t\tlet bias = adapt(delta, h + 1, test h equals b?)\n",
                                    "line": 314,
                                    "filePos": 9190,
                                    "tokenPos": 1702,
                                    "endLine": 315,
                                    "endFilePos": 9244,
                                    "endTokenPos": 1702
                                  }
                                ],
                                "endLine": 315
                              }
                            },
                            "attributes": {
                              "startLine": 315,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\tlet bias = adapt(delta, h + 1, test h equals b?)\n",
                                  "line": 314,
                                  "filePos": 9190,
                                  "tokenPos": 1702,
                                  "endLine": 315,
                                  "endFilePos": 9244,
                                  "endTokenPos": 1702
                                }
                              ],
                              "endLine": 315
                            }
                          },
                          {
                            "nodeType": "Stmt_Expression",
                            "expr": {
                              "nodeType": "Expr_Assign",
                              "var": {
                                "nodeType": "Expr_Variable",
                                "name": "delta",
                                "attributes": {
                                  "startLine": 317,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\tlet delta = 0\n",
                                      "line": 316,
                                      "filePos": 9298,
                                      "tokenPos": 1730,
                                      "endLine": 317,
                                      "endFilePos": 9317,
                                      "endTokenPos": 1730
                                    }
                                  ],
                                  "endLine": 317
                                }
                              },
                              "expr": {
                                "nodeType": "Scalar_LNumber",
                                "value": 0,
                                "attributes": {
                                  "startLine": 317,
                                  "endLine": 317,
                                  "kind": 10
                                }
                              },
                              "attributes": {
                                "startLine": 317,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "#\t\t\t\t\tlet delta = 0\n",
                                    "line": 316,
                                    "filePos": 9298,
                                    "tokenPos": 1730,
                                    "endLine": 317,
                                    "endFilePos": 9317,
                                    "endTokenPos": 1730
                                  }
                                ],
                                "endLine": 317
                              }
                            },
                            "attributes": {
                              "startLine": 317,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\tlet delta = 0\n",
                                  "line": 316,
                                  "filePos": 9298,
                                  "tokenPos": 1730,
                                  "endLine": 317,
                                  "endFilePos": 9317,
                                  "endTokenPos": 1730
                                }
                              ],
                              "endLine": 317
                            }
                          },
                          {
                            "nodeType": "Stmt_Expression",
                            "expr": {
                              "nodeType": "Expr_PostInc",
                              "var": {
                                "nodeType": "Expr_Variable",
                                "name": "h",
                                "attributes": {
                                  "startLine": 319,
                                  "comments": [
                                    {
                                      "nodeType": "Comment",
                                      "text": "#\t\t\t\t\tincrement h\n",
                                      "line": 318,
                                      "filePos": 9335,
                                      "tokenPos": 1739,
                                      "endLine": 319,
                                      "endFilePos": 9352,
                                      "endTokenPos": 1739
                                    }
                                  ],
                                  "endLine": 319
                                }
                              },
                              "attributes": {
                                "startLine": 319,
                                "comments": [
                                  {
                                    "nodeType": "Comment",
                                    "text": "#\t\t\t\t\tincrement h\n",
                                    "line": 318,
                                    "filePos": 9335,
                                    "tokenPos": 1739,
                                    "endLine": 319,
                                    "endFilePos": 9352,
                                    "endTokenPos": 1739
                                  }
                                ],
                                "endLine": 319
                              }
                            },
                            "attributes": {
                              "startLine": 319,
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\t\tincrement h\n",
                                  "line": 318,
                                  "filePos": 9335,
                                  "tokenPos": 1739,
                                  "endLine": 319,
                                  "endFilePos": 9352,
                                  "endTokenPos": 1739
                                }
                              ],
                              "endLine": 319
                            }
                          },
                          {
                            "nodeType": "Stmt_Nop",
                            "attributes": {
                              "comments": [
                                {
                                  "nodeType": "Comment",
                                  "text": "#\t\t\t\tend\n",
                                  "line": 320,
                                  "filePos": 9364,
                                  "tokenPos": 1745,
                                  "endLine": 321,
                                  "endFilePos": 9372,
                                  "endTokenPos": 1745
                                }
                              ],
                              "startLine": 321,
                              "endLine": 321,
                              "startFilePos": 9373,
                              "endFilePos": 9372,
                              "startTokenPos": 1746,
                              "endTokenPos": 1745
                            }
                          }
                        ],
                        "attributes": {
                          "startLine": 285,
                          "comments": [
                            {
                              "nodeType": "Comment",
                              "text": "#\t\t\t\tif c == n then begin\n",
                              "line": 284,
                              "filePos": 8197,
                              "tokenPos": 1458,
                              "endLine": 285,
                              "endFilePos": 8222,
                              "endTokenPos": 1458
                            }
                          ],
                          "endLine": 321
                        }
                      }
                    ],
                    "else": null,
                    "attributes": {
                      "startLine": 281,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\t\tif c < n then increment delta, fail on overflow\n",
                          "line": 280,
                          "filePos": 8104,
                          "tokenPos": 1438,
                          "endLine": 281,
                          "endFilePos": 8156,
                          "endTokenPos": 1438
                        }
                      ],
                      "endLine": 321
                    }
                  },
                  {
                    "nodeType": "Stmt_Nop",
                    "attributes": {
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tend\n",
                          "line": 322,
                          "filePos": 9379,
                          "tokenPos": 1749,
                          "endLine": 323,
                          "endFilePos": 9386,
                          "endTokenPos": 1749
                        }
                      ],
                      "startLine": 323,
                      "endLine": 323,
                      "startFilePos": 9387,
                      "endFilePos": 9386,
                      "startTokenPos": 1750,
                      "endTokenPos": 1749
                    }
                  }
                ],
                "attributes": {
                  "startLine": 278,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tfor each code point c in the input (in order) do begin\n",
                      "line": 277,
                      "filePos": 7962,
                      "tokenPos": 1400,
                      "endLine": 278,
                      "endFilePos": 8020,
                      "endTokenPos": 1400
                    }
                  ],
                  "endLine": 323
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_PostInc",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "delta",
                    "attributes": {
                      "startLine": 325,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tincrement delta and n\n",
                          "line": 324,
                          "filePos": 9392,
                          "tokenPos": 1753,
                          "endLine": 325,
                          "endFilePos": 9417,
                          "endTokenPos": 1753
                        }
                      ],
                      "endLine": 325
                    }
                  },
                  "attributes": {
                    "startLine": 325,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tincrement delta and n\n",
                        "line": 324,
                        "filePos": 9392,
                        "tokenPos": 1753,
                        "endLine": 325,
                        "endFilePos": 9417,
                        "endTokenPos": 1753
                      }
                    ],
                    "endLine": 325
                  }
                },
                "attributes": {
                  "startLine": 325,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tincrement delta and n\n",
                      "line": 324,
                      "filePos": 9392,
                      "tokenPos": 1753,
                      "endLine": 325,
                      "endFilePos": 9417,
                      "endTokenPos": 1753
                    }
                  ],
                  "endLine": 325
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_PostInc",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "n",
                    "attributes": {
                      "startLine": 326,
                      "endLine": 326
                    }
                  },
                  "attributes": {
                    "startLine": 326,
                    "endLine": 326
                  }
                },
                "attributes": {
                  "startLine": 326,
                  "endLine": 326
                }
              },
              {
                "nodeType": "Stmt_Nop",
                "attributes": {
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tend\n",
                      "line": 327,
                      "filePos": 9440,
                      "tokenPos": 1763,
                      "endLine": 328,
                      "endFilePos": 9446,
                      "endTokenPos": 1763
                    }
                  ],
                  "startLine": 328,
                  "endLine": 328,
                  "startFilePos": 9447,
                  "endFilePos": 9446,
                  "startTokenPos": 1764,
                  "endTokenPos": 1763
                }
              }
            ],
            "attributes": {
              "startLine": 269,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\t{if the input contains a non-basic code point < n then fail}\n",
                  "line": 267,
                  "filePos": 7550,
                  "tokenPos": 1335,
                  "endLine": 268,
                  "endFilePos": 7613,
                  "endTokenPos": 1335
                },
                {
                  "nodeType": "Comment",
                  "text": "#\t\twhile h < length(input) do begin\n",
                  "line": 268,
                  "filePos": 7614,
                  "tokenPos": 1336,
                  "endLine": 269,
                  "endFilePos": 7649,
                  "endTokenPos": 1336
                }
              ],
              "endLine": 328
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_Variable",
              "name": "output",
              "attributes": {
                "startLine": 330,
                "endLine": 330
              }
            },
            "attributes": {
              "startLine": 330,
              "endLine": 330
            }
          }
        ],
        "attributes": {
          "startLine": 228,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * RFC3492-compliant encoder\n\t *\n\t * @internal Pseudo-code from Section 6.3 is commented with \"#\" next to relevant code\n\t * @throws Requests_Exception On character outside of the domain (never happens with Punycode) (`idna.character_outside_domain`)\n\t *\n\t * @param string $input UTF-8 encoded string to encode\n\t * @return string Punycode-encoded string\n\t */",
              "line": 219,
              "filePos": 6057,
              "tokenPos": 1096,
              "endLine": 227,
              "endFilePos": 6418,
              "endTokenPos": 1096
            }
          ],
          "endLine": 331
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 10,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "digit_to_char",
          "attributes": {
            "startLine": 342,
            "endLine": 342
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "digit",
              "attributes": {
                "startLine": 342,
                "endLine": 342
              }
            },
            "default": null,
            "attributes": {
              "startLine": 342,
              "endLine": 342
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_BinaryOp_BooleanOr",
              "left": {
                "nodeType": "Expr_BinaryOp_Smaller",
                "left": {
                  "nodeType": "Expr_Variable",
                  "name": "digit",
                  "attributes": {
                    "startLine": 345,
                    "endLine": 345
                  }
                },
                "right": {
                  "nodeType": "Scalar_LNumber",
                  "value": 0,
                  "attributes": {
                    "startLine": 345,
                    "endLine": 345,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 345,
                  "endLine": 345
                }
              },
              "right": {
                "nodeType": "Expr_BinaryOp_Greater",
                "left": {
                  "nodeType": "Expr_Variable",
                  "name": "digit",
                  "attributes": {
                    "startLine": 345,
                    "endLine": 345
                  }
                },
                "right": {
                  "nodeType": "Scalar_LNumber",
                  "value": 35,
                  "attributes": {
                    "startLine": 345,
                    "endLine": 345,
                    "kind": 10
                  }
                },
                "attributes": {
                  "startLine": 345,
                  "endLine": 345
                }
              },
              "attributes": {
                "startLine": 345,
                "endLine": 345
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Throw",
                "expr": {
                  "nodeType": "Expr_New",
                  "class": {
                    "nodeType": "Name",
                    "parts": [
                      "Requests_Exception"
                    ],
                    "attributes": {
                      "startLine": 346,
                      "endLine": 346
                    }
                  },
                  "args": [
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_FuncCall",
                        "name": {
                          "nodeType": "Name",
                          "parts": [
                            "sprintf"
                          ],
                          "attributes": {
                            "startLine": 346,
                            "endLine": 346
                          }
                        },
                        "args": [
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Scalar_String",
                              "value": "Invalid digit %d",
                              "attributes": {
                                "startLine": 346,
                                "endLine": 346,
                                "kind": 1
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 346,
                              "endLine": 346
                            }
                          },
                          {
                            "nodeType": "Arg",
                            "value": {
                              "nodeType": "Expr_Variable",
                              "name": "digit",
                              "attributes": {
                                "startLine": 346,
                                "endLine": 346
                              }
                            },
                            "byRef": false,
                            "unpack": false,
                            "attributes": {
                              "startLine": 346,
                              "endLine": 346
                            }
                          }
                        ],
                        "attributes": {
                          "startLine": 346,
                          "endLine": 346
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 346,
                        "endLine": 346
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Scalar_String",
                        "value": "idna.invalid_digit",
                        "attributes": {
                          "startLine": 346,
                          "endLine": 346,
                          "kind": 1
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 346,
                        "endLine": 346
                      }
                    },
                    {
                      "nodeType": "Arg",
                      "value": {
                        "nodeType": "Expr_Variable",
                        "name": "digit",
                        "attributes": {
                          "startLine": 346,
                          "endLine": 346
                        }
                      },
                      "byRef": false,
                      "unpack": false,
                      "attributes": {
                        "startLine": 346,
                        "endLine": 346
                      }
                    }
                  ],
                  "attributes": {
                    "startLine": 346,
                    "endLine": 346
                  }
                },
                "attributes": {
                  "startLine": 346,
                  "endLine": 346
                }
              }
            ],
            "elseifs": [],
            "else": null,
            "attributes": {
              "startLine": 345,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// @codeCoverageIgnoreStart\n",
                  "line": 343,
                  "filePos": 9824,
                  "tokenPos": 1789,
                  "endLine": 344,
                  "endFilePos": 9851,
                  "endTokenPos": 1789
                },
                {
                  "nodeType": "Comment",
                  "text": "// As far as I know, this never happens, but still good to be sure.\n",
                  "line": 344,
                  "filePos": 9854,
                  "tokenPos": 1791,
                  "endLine": 345,
                  "endFilePos": 9921,
                  "endTokenPos": 1791
                }
              ],
              "endLine": 347
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "digits",
                "attributes": {
                  "startLine": 349,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "// @codeCoverageIgnoreEnd\n",
                      "line": 348,
                      "filePos": 10063,
                      "tokenPos": 1837,
                      "endLine": 349,
                      "endFilePos": 10088,
                      "endTokenPos": 1837
                    }
                  ],
                  "endLine": 349
                }
              },
              "expr": {
                "nodeType": "Scalar_String",
                "value": "abcdefghijklmnopqrstuvwxyz0123456789",
                "attributes": {
                  "startLine": 349,
                  "endLine": 349,
                  "kind": 1
                }
              },
              "attributes": {
                "startLine": 349,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "// @codeCoverageIgnoreEnd\n",
                    "line": 348,
                    "filePos": 10063,
                    "tokenPos": 1837,
                    "endLine": 349,
                    "endFilePos": 10088,
                    "endTokenPos": 1837
                  }
                ],
                "endLine": 349
              }
            },
            "attributes": {
              "startLine": 349,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "// @codeCoverageIgnoreEnd\n",
                  "line": 348,
                  "filePos": 10063,
                  "tokenPos": 1837,
                  "endLine": 349,
                  "endFilePos": 10088,
                  "endTokenPos": 1837
                }
              ],
              "endLine": 349
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_FuncCall",
              "name": {
                "nodeType": "Name",
                "parts": [
                  "substr"
                ],
                "attributes": {
                  "startLine": 350,
                  "endLine": 350
                }
              },
              "args": [
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "digits",
                    "attributes": {
                      "startLine": 350,
                      "endLine": 350
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 350,
                    "endLine": 350
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Expr_Variable",
                    "name": "digit",
                    "attributes": {
                      "startLine": 350,
                      "endLine": 350
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 350,
                    "endLine": 350
                  }
                },
                {
                  "nodeType": "Arg",
                  "value": {
                    "nodeType": "Scalar_LNumber",
                    "value": 1,
                    "attributes": {
                      "startLine": 350,
                      "endLine": 350,
                      "kind": 10
                    }
                  },
                  "byRef": false,
                  "unpack": false,
                  "attributes": {
                    "startLine": 350,
                    "endLine": 350
                  }
                }
              ],
              "attributes": {
                "startLine": 350,
                "endLine": 350
              }
            },
            "attributes": {
              "startLine": 350,
              "endLine": 350
            }
          }
        ],
        "attributes": {
          "startLine": 342,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Convert a digit to its respective character\n\t *\n\t * @see https://tools.ietf.org/html/rfc3492#section-5\n\t * @throws Requests_Exception On invalid digit (`idna.invalid_digit`)\n\t *\n\t * @param int $digit Digit in the range 0-35\n\t * @return string Single character corresponding to digit\n\t */",
              "line": 333,
              "filePos": 9475,
              "tokenPos": 1774,
              "endLine": 341,
              "endFilePos": 9769,
              "endTokenPos": 1774
            }
          ],
          "endLine": 351
        }
      },
      {
        "nodeType": "Stmt_ClassMethod",
        "flags": 10,
        "byRef": false,
        "name": {
          "nodeType": "Identifier",
          "name": "adapt",
          "attributes": {
            "startLine": 362,
            "endLine": 362
          }
        },
        "params": [
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "delta",
              "attributes": {
                "startLine": 362,
                "endLine": 362
              }
            },
            "default": null,
            "attributes": {
              "startLine": 362,
              "endLine": 362
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "numpoints",
              "attributes": {
                "startLine": 362,
                "endLine": 362
              }
            },
            "default": null,
            "attributes": {
              "startLine": 362,
              "endLine": 362
            }
          },
          {
            "nodeType": "Param",
            "type": null,
            "byRef": false,
            "variadic": false,
            "var": {
              "nodeType": "Expr_Variable",
              "name": "firsttime",
              "attributes": {
                "startLine": 362,
                "endLine": 362
              }
            },
            "default": null,
            "attributes": {
              "startLine": 362,
              "endLine": 362
            }
          }
        ],
        "returnType": null,
        "stmts": [
          {
            "nodeType": "Stmt_If",
            "cond": {
              "nodeType": "Expr_Variable",
              "name": "firsttime",
              "attributes": {
                "startLine": 365,
                "endLine": 365
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "delta",
                    "attributes": {
                      "startLine": 366,
                      "endLine": 366
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "floor"
                      ],
                      "attributes": {
                        "startLine": 366,
                        "endLine": 366
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_BinaryOp_Div",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "delta",
                            "attributes": {
                              "startLine": 366,
                              "endLine": 366
                            }
                          },
                          "right": {
                            "nodeType": "Expr_ClassConstFetch",
                            "class": {
                              "nodeType": "Name",
                              "parts": [
                                "self"
                              ],
                              "attributes": {
                                "startLine": 366,
                                "endLine": 366
                              }
                            },
                            "name": {
                              "nodeType": "Identifier",
                              "name": "BOOTSTRAP_DAMP",
                              "attributes": {
                                "startLine": 366,
                                "endLine": 366
                              }
                            },
                            "attributes": {
                              "startLine": 366,
                              "endLine": 366
                            }
                          },
                          "attributes": {
                            "startLine": 366,
                            "endLine": 366
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 366,
                          "endLine": 366
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 366,
                      "endLine": 366
                    }
                  },
                  "attributes": {
                    "startLine": 366,
                    "endLine": 366
                  }
                },
                "attributes": {
                  "startLine": 366,
                  "endLine": 366
                }
              }
            ],
            "elseifs": [],
            "else": {
              "nodeType": "Stmt_Else",
              "stmts": [
                {
                  "nodeType": "Stmt_Expression",
                  "expr": {
                    "nodeType": "Expr_Assign",
                    "var": {
                      "nodeType": "Expr_Variable",
                      "name": "delta",
                      "attributes": {
                        "startLine": 370,
                        "endLine": 370
                      }
                    },
                    "expr": {
                      "nodeType": "Expr_FuncCall",
                      "name": {
                        "nodeType": "Name",
                        "parts": [
                          "floor"
                        ],
                        "attributes": {
                          "startLine": 370,
                          "endLine": 370
                        }
                      },
                      "args": [
                        {
                          "nodeType": "Arg",
                          "value": {
                            "nodeType": "Expr_BinaryOp_Div",
                            "left": {
                              "nodeType": "Expr_Variable",
                              "name": "delta",
                              "attributes": {
                                "startLine": 370,
                                "endLine": 370
                              }
                            },
                            "right": {
                              "nodeType": "Scalar_LNumber",
                              "value": 2,
                              "attributes": {
                                "startLine": 370,
                                "endLine": 370,
                                "kind": 10
                              }
                            },
                            "attributes": {
                              "startLine": 370,
                              "endLine": 370
                            }
                          },
                          "byRef": false,
                          "unpack": false,
                          "attributes": {
                            "startLine": 370,
                            "endLine": 370
                          }
                        }
                      ],
                      "attributes": {
                        "startLine": 370,
                        "endLine": 370
                      }
                    },
                    "attributes": {
                      "startLine": 370,
                      "endLine": 370
                    }
                  },
                  "attributes": {
                    "startLine": 370,
                    "endLine": 370
                  }
                }
              ],
              "attributes": {
                "startLine": 369,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\telse let delta = delta div 2\n",
                    "line": 368,
                    "filePos": 10606,
                    "tokenPos": 1912,
                    "endLine": 369,
                    "endFilePos": 10637,
                    "endTokenPos": 1912
                  }
                ],
                "endLine": 371
              }
            },
            "attributes": {
              "startLine": 365,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\tfunction adapt(delta,numpoints,firsttime):\n",
                  "line": 363,
                  "filePos": 10439,
                  "tokenPos": 1883,
                  "endLine": 364,
                  "endFilePos": 10483,
                  "endTokenPos": 1883
                },
                {
                  "nodeType": "Comment",
                  "text": "#\t\tif firsttime then let delta = delta div damp\n",
                  "line": 364,
                  "filePos": 10484,
                  "tokenPos": 1884,
                  "endLine": 365,
                  "endFilePos": 10531,
                  "endTokenPos": 1884
                }
              ],
              "endLine": 371
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_AssignOp_Plus",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "delta",
                "attributes": {
                  "startLine": 373,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet delta = delta + (delta div numpoints)\n",
                      "line": 372,
                      "filePos": 10682,
                      "tokenPos": 1934,
                      "endLine": 373,
                      "endFilePos": 10726,
                      "endTokenPos": 1934
                    }
                  ],
                  "endLine": 373
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "floor"
                  ],
                  "attributes": {
                    "startLine": 373,
                    "endLine": 373
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_BinaryOp_Div",
                      "left": {
                        "nodeType": "Expr_Variable",
                        "name": "delta",
                        "attributes": {
                          "startLine": 373,
                          "endLine": 373
                        }
                      },
                      "right": {
                        "nodeType": "Expr_Variable",
                        "name": "numpoints",
                        "attributes": {
                          "startLine": 373,
                          "endLine": 373
                        }
                      },
                      "attributes": {
                        "startLine": 373,
                        "endLine": 373
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 373,
                      "endLine": 373
                    }
                  }
                ],
                "attributes": {
                  "startLine": 373,
                  "endLine": 373
                }
              },
              "attributes": {
                "startLine": 373,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet delta = delta + (delta div numpoints)\n",
                    "line": 372,
                    "filePos": 10682,
                    "tokenPos": 1934,
                    "endLine": 373,
                    "endFilePos": 10726,
                    "endTokenPos": 1934
                  }
                ],
                "endLine": 373
              }
            },
            "attributes": {
              "startLine": 373,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet delta = delta + (delta div numpoints)\n",
                  "line": 372,
                  "filePos": 10682,
                  "tokenPos": 1934,
                  "endLine": 373,
                  "endFilePos": 10726,
                  "endTokenPos": 1934
                }
              ],
              "endLine": 373
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "k",
                "attributes": {
                  "startLine": 375,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tlet k = 0\n",
                      "line": 374,
                      "filePos": 10767,
                      "tokenPos": 1950,
                      "endLine": 375,
                      "endFilePos": 10779,
                      "endTokenPos": 1950
                    }
                  ],
                  "endLine": 375
                }
              },
              "expr": {
                "nodeType": "Scalar_LNumber",
                "value": 0,
                "attributes": {
                  "startLine": 375,
                  "endLine": 375,
                  "kind": 10
                }
              },
              "attributes": {
                "startLine": 375,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\tlet k = 0\n",
                    "line": 374,
                    "filePos": 10767,
                    "tokenPos": 1950,
                    "endLine": 375,
                    "endFilePos": 10779,
                    "endTokenPos": 1950
                  }
                ],
                "endLine": 375
              }
            },
            "attributes": {
              "startLine": 375,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\tlet k = 0\n",
                  "line": 374,
                  "filePos": 10767,
                  "tokenPos": 1950,
                  "endLine": 375,
                  "endFilePos": 10779,
                  "endTokenPos": 1950
                }
              ],
              "endLine": 375
            }
          },
          {
            "nodeType": "Stmt_Expression",
            "expr": {
              "nodeType": "Expr_Assign",
              "var": {
                "nodeType": "Expr_Variable",
                "name": "max",
                "attributes": {
                  "startLine": 377,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\twhile delta > ((base - tmin) * tmax) div 2 do begin\n",
                      "line": 376,
                      "filePos": 10790,
                      "tokenPos": 1959,
                      "endLine": 377,
                      "endFilePos": 10844,
                      "endTokenPos": 1959
                    }
                  ],
                  "endLine": 377
                }
              },
              "expr": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "floor"
                  ],
                  "attributes": {
                    "startLine": 377,
                    "endLine": 377
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_BinaryOp_Div",
                      "left": {
                        "nodeType": "Expr_BinaryOp_Mul",
                        "left": {
                          "nodeType": "Expr_BinaryOp_Minus",
                          "left": {
                            "nodeType": "Expr_ClassConstFetch",
                            "class": {
                              "nodeType": "Name",
                              "parts": [
                                "self"
                              ],
                              "attributes": {
                                "startLine": 377,
                                "endLine": 377
                              }
                            },
                            "name": {
                              "nodeType": "Identifier",
                              "name": "BOOTSTRAP_BASE",
                              "attributes": {
                                "startLine": 377,
                                "endLine": 377
                              }
                            },
                            "attributes": {
                              "startLine": 377,
                              "endLine": 377
                            }
                          },
                          "right": {
                            "nodeType": "Expr_ClassConstFetch",
                            "class": {
                              "nodeType": "Name",
                              "parts": [
                                "self"
                              ],
                              "attributes": {
                                "startLine": 377,
                                "endLine": 377
                              }
                            },
                            "name": {
                              "nodeType": "Identifier",
                              "name": "BOOTSTRAP_TMIN",
                              "attributes": {
                                "startLine": 377,
                                "endLine": 377
                              }
                            },
                            "attributes": {
                              "startLine": 377,
                              "endLine": 377
                            }
                          },
                          "attributes": {
                            "startLine": 377,
                            "endLine": 377
                          }
                        },
                        "right": {
                          "nodeType": "Expr_ClassConstFetch",
                          "class": {
                            "nodeType": "Name",
                            "parts": [
                              "self"
                            ],
                            "attributes": {
                              "startLine": 377,
                              "endLine": 377
                            }
                          },
                          "name": {
                            "nodeType": "Identifier",
                            "name": "BOOTSTRAP_TMAX",
                            "attributes": {
                              "startLine": 377,
                              "endLine": 377
                            }
                          },
                          "attributes": {
                            "startLine": 377,
                            "endLine": 377
                          }
                        },
                        "attributes": {
                          "startLine": 377,
                          "endLine": 377
                        }
                      },
                      "right": {
                        "nodeType": "Scalar_LNumber",
                        "value": 2,
                        "attributes": {
                          "startLine": 377,
                          "endLine": 377,
                          "kind": 10
                        }
                      },
                      "attributes": {
                        "startLine": 377,
                        "endLine": 377
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 377,
                      "endLine": 377
                    }
                  }
                ],
                "attributes": {
                  "startLine": 377,
                  "endLine": 377
                }
              },
              "attributes": {
                "startLine": 377,
                "comments": [
                  {
                    "nodeType": "Comment",
                    "text": "#\t\twhile delta > ((base - tmin) * tmax) div 2 do begin\n",
                    "line": 376,
                    "filePos": 10790,
                    "tokenPos": 1959,
                    "endLine": 377,
                    "endFilePos": 10844,
                    "endTokenPos": 1959
                  }
                ],
                "endLine": 377
              }
            },
            "attributes": {
              "startLine": 377,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\twhile delta > ((base - tmin) * tmax) div 2 do begin\n",
                  "line": 376,
                  "filePos": 10790,
                  "tokenPos": 1959,
                  "endLine": 377,
                  "endFilePos": 10844,
                  "endTokenPos": 1959
                }
              ],
              "endLine": 377
            }
          },
          {
            "nodeType": "Stmt_While",
            "cond": {
              "nodeType": "Expr_BinaryOp_Greater",
              "left": {
                "nodeType": "Expr_Variable",
                "name": "delta",
                "attributes": {
                  "startLine": 378,
                  "endLine": 378
                }
              },
              "right": {
                "nodeType": "Expr_Variable",
                "name": "max",
                "attributes": {
                  "startLine": 378,
                  "endLine": 378
                }
              },
              "attributes": {
                "startLine": 378,
                "endLine": 378
              }
            },
            "stmts": [
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_Assign",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "delta",
                    "attributes": {
                      "startLine": 380,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tlet delta = delta div (base - tmin)\n",
                          "line": 379,
                          "filePos": 10963,
                          "tokenPos": 2005,
                          "endLine": 380,
                          "endFilePos": 11002,
                          "endTokenPos": 2005
                        }
                      ],
                      "endLine": 380
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_FuncCall",
                    "name": {
                      "nodeType": "Name",
                      "parts": [
                        "floor"
                      ],
                      "attributes": {
                        "startLine": 380,
                        "endLine": 380
                      }
                    },
                    "args": [
                      {
                        "nodeType": "Arg",
                        "value": {
                          "nodeType": "Expr_BinaryOp_Div",
                          "left": {
                            "nodeType": "Expr_Variable",
                            "name": "delta",
                            "attributes": {
                              "startLine": 380,
                              "endLine": 380
                            }
                          },
                          "right": {
                            "nodeType": "Expr_BinaryOp_Minus",
                            "left": {
                              "nodeType": "Expr_ClassConstFetch",
                              "class": {
                                "nodeType": "Name",
                                "parts": [
                                  "self"
                                ],
                                "attributes": {
                                  "startLine": 380,
                                  "endLine": 380
                                }
                              },
                              "name": {
                                "nodeType": "Identifier",
                                "name": "BOOTSTRAP_BASE",
                                "attributes": {
                                  "startLine": 380,
                                  "endLine": 380
                                }
                              },
                              "attributes": {
                                "startLine": 380,
                                "endLine": 380
                              }
                            },
                            "right": {
                              "nodeType": "Expr_ClassConstFetch",
                              "class": {
                                "nodeType": "Name",
                                "parts": [
                                  "self"
                                ],
                                "attributes": {
                                  "startLine": 380,
                                  "endLine": 380
                                }
                              },
                              "name": {
                                "nodeType": "Identifier",
                                "name": "BOOTSTRAP_TMIN",
                                "attributes": {
                                  "startLine": 380,
                                  "endLine": 380
                                }
                              },
                              "attributes": {
                                "startLine": 380,
                                "endLine": 380
                              }
                            },
                            "attributes": {
                              "startLine": 380,
                              "endLine": 380
                            }
                          },
                          "attributes": {
                            "startLine": 380,
                            "endLine": 380
                          }
                        },
                        "byRef": false,
                        "unpack": false,
                        "attributes": {
                          "startLine": 380,
                          "endLine": 380
                        }
                      }
                    ],
                    "attributes": {
                      "startLine": 380,
                      "endLine": 380
                    }
                  },
                  "attributes": {
                    "startLine": 380,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tlet delta = delta div (base - tmin)\n",
                        "line": 379,
                        "filePos": 10963,
                        "tokenPos": 2005,
                        "endLine": 380,
                        "endFilePos": 11002,
                        "endTokenPos": 2005
                      }
                    ],
                    "endLine": 380
                  }
                },
                "attributes": {
                  "startLine": 380,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tlet delta = delta div (base - tmin)\n",
                      "line": 379,
                      "filePos": 10963,
                      "tokenPos": 2005,
                      "endLine": 380,
                      "endFilePos": 11002,
                      "endTokenPos": 2005
                    }
                  ],
                  "endLine": 380
                }
              },
              {
                "nodeType": "Stmt_Expression",
                "expr": {
                  "nodeType": "Expr_AssignOp_Plus",
                  "var": {
                    "nodeType": "Expr_Variable",
                    "name": "k",
                    "attributes": {
                      "startLine": 382,
                      "comments": [
                        {
                          "nodeType": "Comment",
                          "text": "#\t\t\tlet k = k + base\n",
                          "line": 381,
                          "filePos": 11078,
                          "tokenPos": 2031,
                          "endLine": 382,
                          "endFilePos": 11098,
                          "endTokenPos": 2031
                        }
                      ],
                      "endLine": 382
                    }
                  },
                  "expr": {
                    "nodeType": "Expr_ClassConstFetch",
                    "class": {
                      "nodeType": "Name",
                      "parts": [
                        "self"
                      ],
                      "attributes": {
                        "startLine": 382,
                        "endLine": 382
                      }
                    },
                    "name": {
                      "nodeType": "Identifier",
                      "name": "BOOTSTRAP_BASE",
                      "attributes": {
                        "startLine": 382,
                        "endLine": 382
                      }
                    },
                    "attributes": {
                      "startLine": 382,
                      "endLine": 382
                    }
                  },
                  "attributes": {
                    "startLine": 382,
                    "comments": [
                      {
                        "nodeType": "Comment",
                        "text": "#\t\t\tlet k = k + base\n",
                        "line": 381,
                        "filePos": 11078,
                        "tokenPos": 2031,
                        "endLine": 382,
                        "endFilePos": 11098,
                        "endTokenPos": 2031
                      }
                    ],
                    "endLine": 382
                  }
                },
                "attributes": {
                  "startLine": 382,
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\t\tlet k = k + base\n",
                      "line": 381,
                      "filePos": 11078,
                      "tokenPos": 2031,
                      "endLine": 382,
                      "endFilePos": 11098,
                      "endTokenPos": 2031
                    }
                  ],
                  "endLine": 382
                }
              },
              {
                "nodeType": "Stmt_Nop",
                "attributes": {
                  "comments": [
                    {
                      "nodeType": "Comment",
                      "text": "#\t\tend\n",
                      "line": 383,
                      "filePos": 11130,
                      "tokenPos": 2042,
                      "endLine": 384,
                      "endFilePos": 11136,
                      "endTokenPos": 2042
                    }
                  ],
                  "startLine": 384,
                  "endLine": 384,
                  "startFilePos": 11137,
                  "endFilePos": 11136,
                  "startTokenPos": 2043,
                  "endTokenPos": 2042
                }
              }
            ],
            "attributes": {
              "startLine": 378,
              "endLine": 384
            }
          },
          {
            "nodeType": "Stmt_Return",
            "expr": {
              "nodeType": "Expr_BinaryOp_Plus",
              "left": {
                "nodeType": "Expr_Variable",
                "name": "k",
                "attributes": {
                  "startLine": 386,
                  "endLine": 386
                }
              },
              "right": {
                "nodeType": "Expr_FuncCall",
                "name": {
                  "nodeType": "Name",
                  "parts": [
                    "floor"
                  ],
                  "attributes": {
                    "startLine": 386,
                    "endLine": 386
                  }
                },
                "args": [
                  {
                    "nodeType": "Arg",
                    "value": {
                      "nodeType": "Expr_BinaryOp_Div",
                      "left": {
                        "nodeType": "Expr_BinaryOp_Mul",
                        "left": {
                          "nodeType": "Expr_BinaryOp_Plus",
                          "left": {
                            "nodeType": "Expr_BinaryOp_Minus",
                            "left": {
                              "nodeType": "Expr_ClassConstFetch",
                              "class": {
                                "nodeType": "Name",
                                "parts": [
                                  "self"
                                ],
                                "attributes": {
                                  "startLine": 386,
                                  "endLine": 386
                                }
                              },
                              "name": {
                                "nodeType": "Identifier",
                                "name": "BOOTSTRAP_BASE",
                                "attributes": {
                                  "startLine": 386,
                                  "endLine": 386
                                }
                              },
                              "attributes": {
                                "startLine": 386,
                                "endLine": 386
                              }
                            },
                            "right": {
                              "nodeType": "Expr_ClassConstFetch",
                              "class": {
                                "nodeType": "Name",
                                "parts": [
                                  "self"
                                ],
                                "attributes": {
                                  "startLine": 386,
                                  "endLine": 386
                                }
                              },
                              "name": {
                                "nodeType": "Identifier",
                                "name": "BOOTSTRAP_TMIN",
                                "attributes": {
                                  "startLine": 386,
                                  "endLine": 386
                                }
                              },
                              "attributes": {
                                "startLine": 386,
                                "endLine": 386
                              }
                            },
                            "attributes": {
                              "startLine": 386,
                              "endLine": 386
                            }
                          },
                          "right": {
                            "nodeType": "Scalar_LNumber",
                            "value": 1,
                            "attributes": {
                              "startLine": 386,
                              "endLine": 386,
                              "kind": 10
                            }
                          },
                          "attributes": {
                            "startLine": 386,
                            "endLine": 386
                          }
                        },
                        "right": {
                          "nodeType": "Expr_Variable",
                          "name": "delta",
                          "attributes": {
                            "startLine": 386,
                            "endLine": 386
                          }
                        },
                        "attributes": {
                          "startLine": 386,
                          "endLine": 386
                        }
                      },
                      "right": {
                        "nodeType": "Expr_BinaryOp_Plus",
                        "left": {
                          "nodeType": "Expr_Variable",
                          "name": "delta",
                          "attributes": {
                            "startLine": 386,
                            "endLine": 386
                          }
                        },
                        "right": {
                          "nodeType": "Expr_ClassConstFetch",
                          "class": {
                            "nodeType": "Name",
                            "parts": [
                              "self"
                            ],
                            "attributes": {
                              "startLine": 386,
                              "endLine": 386
                            }
                          },
                          "name": {
                            "nodeType": "Identifier",
                            "name": "BOOTSTRAP_SKEW",
                            "attributes": {
                              "startLine": 386,
                              "endLine": 386
                            }
                          },
                          "attributes": {
                            "startLine": 386,
                            "endLine": 386
                          }
                        },
                        "attributes": {
                          "startLine": 386,
                          "endLine": 386
                        }
                      },
                      "attributes": {
                        "startLine": 386,
                        "endLine": 386
                      }
                    },
                    "byRef": false,
                    "unpack": false,
                    "attributes": {
                      "startLine": 386,
                      "endLine": 386
                    }
                  }
                ],
                "attributes": {
                  "startLine": 386,
                  "endLine": 386
                }
              },
              "attributes": {
                "startLine": 386,
                "endLine": 386
              }
            },
            "attributes": {
              "startLine": 386,
              "comments": [
                {
                  "nodeType": "Comment",
                  "text": "#\t\treturn k + (((base - tmin + 1) * delta) div (delta + skew))\n",
                  "line": 385,
                  "filePos": 11141,
                  "tokenPos": 2046,
                  "endLine": 386,
                  "endFilePos": 11203,
                  "endTokenPos": 2046
                }
              ],
              "endLine": 386
            }
          }
        ],
        "attributes": {
          "startLine": 362,
          "comments": [
            {
              "nodeType": "Comment_Doc",
              "text": "/**\n\t * Adapt the bias\n\t *\n\t * @see https://tools.ietf.org/html/rfc3492#section-6.1\n\t * @param int $delta\n\t * @param int $numpoints\n\t * @param bool $firsttime\n\t * @return int New bias\n\t */",
              "line": 353,
              "filePos": 10183,
              "tokenPos": 1862,
              "endLine": 361,
              "endFilePos": 10370,
              "endTokenPos": 1862
            }
          ],
          "endLine": 387
        }
      }
    ],
    "attributes": {
      "startLine": 13,
      "comments": [
        {
          "nodeType": "Comment_Doc",
          "text": "/**\n * IDNA URL encoder\n *\n * Note: Not fully compliant, as nameprep does nothing yet.\n *\n * @package Requests\n * @subpackage Utilities\n * @see https://tools.ietf.org/html/rfc3490 IDNA specification\n * @see https://tools.ietf.org/html/rfc3492 Punycode/Bootstrap specification\n */",
          "line": 3,
          "filePos": 7,
          "tokenPos": 2,
          "endLine": 12,
          "endFilePos": 285,
          "endTokenPos": 2
        }
      ],
      "endLine": 388
    }
  }
]